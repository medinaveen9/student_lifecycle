{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationReportBPT.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const ApplicationReportBPT = () => {\n//   const location = useLocation();\n//   const formData = location.state;\n\n//   // Main container styles\n//   const containerStyle = {\n//     padding: '2rem',\n//     fontFamily: \"'Arial', sans-serif\",\n//     maxWidth: '1200px',\n//     margin: '0 auto',\n//     backgroundColor: '#f9f9f9'\n//   };\n\n//   // Header styles\n//   const headerStyle = {\n//     textAlign: 'center',\n//     marginBottom: '2rem'\n//   };\n\n//   const titleStyle = {\n//     fontSize: '2rem',\n//     color: '#2c3e50',\n//     marginBottom: '0.5rem'\n//   };\n\n//   const subtitleStyle = {\n//     fontSize: '1.5rem',\n//     color: '#34495e',\n//     fontWeight: '400'\n//   };\n\n//   // Section styles\n//   const sectionStyle = {\n//     border: '1px solid #e0e0e0',\n//     padding: '1.5rem',\n//     marginBottom: '1.5rem',\n//     borderRadius: '8px',\n//     backgroundColor: 'white',\n//     boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)'\n//   };\n\n//   const sectionTitleStyle = {\n//     color: '#1976d2',\n//     marginTop: '0',\n//     marginBottom: '1rem',\n//     paddingBottom: '0.5rem',\n//     borderBottom: '1px solid #eee',\n//     fontSize: '1.25rem'\n//   };\n\n//   const subsectionTitleStyle = {\n//     color: '#2c3e50',\n//     margin: '1.5rem 0 1rem 0',\n//     fontSize: '1.1rem'\n//   };\n\n//   // Field row styles\n//   const rowStyle = {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//     margin: '0 -0.5rem'\n//   };\n\n//   // Field item styles\n//   const fieldStyle = {\n//     width: 'calc(50% - 1rem)',\n//     margin: '0.5rem',\n//     fontSize: '0.9rem',\n//     lineHeight: '1.5'\n//   };\n\n//   const fieldLabelStyle = {\n//     fontWeight: 'bold',\n//     color: '#555',\n//     marginRight: '0.5rem'\n//   };\n\n//   const fieldValueStyle = {\n//     color: '#333'\n//   };\n\n//   // Error message styles\n//   const errorContainerStyle = {\n//     padding: '20px',\n//     fontFamily: 'Arial'\n//   };\n\n//   const errorTextStyle = {\n//     color: 'red',\n//     textAlign: 'center',\n//     padding: '2rem',\n//     fontSize: '1.2rem'\n//   };\n\n//   const renderField = (label, value) => (\n//     <div style={fieldStyle}>\n//       <span style={fieldLabelStyle}>{label}:</span>\n//       <span style={fieldValueStyle}>{value || 'N/A'}</span>\n//     </div>\n//   );\n\n//   if (!formData) {\n//     return (\n//       <div style={errorContainerStyle}>\n//         <h3 style={errorTextStyle}>\n//           No data received. Please fill and submit the form first.\n//         </h3>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>\n//         <h1 style={titleStyle}>Application Review Report</h1>\n//         <h2 style={subtitleStyle}>Bachelor of Physiotherapy - 2025</h2>\n//       </div>\n\n//       {/* Section 1 */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>1. Advertisement Details</h3>\n//         <div style={rowStyle}>\n//           {renderField('Ad. No', formData.adNo)}\n//           {renderField('Ad. Date', formData.adDate)}\n//           {renderField('Application No', formData.applicationNo)}\n//           {renderField('Course Name', formData.courseName)}\n//           {renderField('Course Code', formData.courseCode)}\n//           {renderField('Date of Entry', formData.dateOfEntry)}\n//           {renderField('Last Date', formData.lastDate)}\n//           {renderField('Department', formData.department)}\n//         </div>\n//       </section>\n\n//       {/* Section 2 */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>2. Applicant's Details</h3>\n//         <div style={rowStyle}>\n//           {renderField('Name', formData.name)}\n//           {renderField(\"Father's Name\", formData.fatherName)}\n//           {renderField('Date of Birth', formData.dob)}\n//           {renderField('Age', formData.age)}\n//           {renderField('Place of Birth', formData.birthPlace)}\n//           {renderField('Social Status', formData.status)}\n//           {renderField('Nationality', formData.nationality)}\n//           {renderField('Marital Status', formData.maritalStatus)}\n//           {renderField('Gender', formData.gender)}\n//           {renderField('Differently Abled', formData.differentlyAbled)}\n//           {renderField('Identification Mark 1', formData.idMark1)}\n//           {renderField('Identification Mark 2', formData.idMark2)}\n//           {renderField('University Area', formData.universityArea)}\n//           {renderField('In Service (Govt.)', formData.inService)}\n//           {renderField('Aadhar', formData.aadhar)}\n//           {renderField(\"Father's Email\", formData.fatherEmail)}\n//         </div>\n//       </section>\n\n//       {/* Section 3 */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>3. Parents' Details</h3>\n//         <div style={rowStyle}>\n//           {renderField(\"Father's Name\", formData.fatherName)}\n//           {renderField(\"Father's Age\", formData.fatherAge)}\n//           {renderField(\"Father's Occupation\", formData.fatherOccupation)}\n//           {renderField(\"Mother's Name\", formData.motherName)}\n//           {renderField(\"Mother's Age\", formData.motherAge)}\n//           {renderField(\"Mother's Occupation\", formData.motherOccupation)}\n//           {renderField('Monthly Income', formData.monthlyIncome)}\n//         </div>\n//       </section>\n\n//      {/* Section 4  */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>4. Educational Qualifications</h3>\n\n//         <div style={rowStyle}>\n//           {renderField('10th School Name', formData.tenthSchool)}\n//           {renderField('10th Board', formData.tenthBoard)}\n//           {renderField('10th Year of Passing', formData.tenthYear)}\n//           {renderField('10th Percentage/CGPA', formData.tenthMarks)}\n//           {renderField('District', formData.tenthDistrict)}\n//         </div>\n\n//         <h4 style={subsectionTitleStyle}>Intermediate First Year</h4>\n//         <div style={rowStyle}>\n//           {renderField('Intermediate College', formData.inter1stCollege)}\n//           {renderField('Place', formData.inter1stplace)}\n//           {renderField('District', formData.inter1stDistrict)}\n//           {renderField('Intermediate Year of Passing', formData.inter1stYear)}\n//           {renderField('State', formData.inter1stState)}\n//         </div>\n\n//         <h4 style={subsectionTitleStyle}>Intermediate Second Year</h4>\n//         <div style={rowStyle}>\n//           {renderField('Intermediate College', formData.inter2ndCollege)}\n//           {renderField('Place', formData.inter2ndplace)}\n//           {renderField('District', formData.inter2ndDistrict)}\n//           {renderField('Intermediate Year of Passing', formData.inter2ndYear)}\n//           {renderField('State', formData.inter2ndState)}\n//         </div>\n\n// {/* Botany Section */}\n// <h4 style={subsectionTitleStyle}>Intermediate Marks Practicals</h4>\n// <h4>Botany</h4>\n// <div style={rowStyle}>\n//   {renderField('1st Year Theory', `${formData.botany.theory1stYear||'--'} / ${formData.botany.theory1stMax||'--'}`)}\n//   {renderField('2nd Year Theory', `${formData.botany.theory2ndYear||'--'} / ${formData.botany.theory2ndMax||'--'}`)}\n//   {renderField('Practicals', `${formData.botany.practical||'--'} / ${formData.botany.practicalMax||'--'}`)}\n//   {renderField('Total Marks', `${formData.botany.total||'--'} / ${formData.botany.totalMax||'--'}`)}\n//   {renderField('Maximum Marks', formData.botany.maxmarks||'--')}\n// </div>\n\n// {/* Zoology Section */}\n// <h4 style={subsectionTitleStyle}>Zoology</h4>\n// <div style={rowStyle}>\n//   {renderField('1st Year Theory', `${formData.zoology.theory1stYear || '-'}/${formData.zoology.theory1stMax || '-'}`)}\n//   {renderField('2nd Year Theory', `${formData.zoology.theory2ndYear || '-'}/${formData.zoology.theory2ndMax || '-'}`)}\n//   {renderField('Practicals', `${formData.zoology.practical || '-'}/${formData.zoology.practicalMax || '-'}`)}\n//   {renderField('Total Marks', `${formData.zoology.total || '-'}/${formData.zoology.totalMax || '-'}`)}\n//   {renderField('Maximum Marks', formData.zoology.maxmarks || '-')}\n// </div>\n//    {/* Physics Section */}\n// <h4 style={subsectionTitleStyle}>Physics</h4>\n// <div style={rowStyle}>\n//   {renderField('1st Year Theory', `${formData.physics.theory1stYear || '-'}/${formData.physics.theory1stMax || '-'}`)}\n//   {renderField('2nd Year Theory', `${formData.physics.theory2ndYear || '-'}/${formData.physics.theory2ndMax || '-'}`)}\n//   {renderField('Practicals', `${formData.physics.practical || '-'}/${formData.physics.practicalMax || '-'}`)}\n//   {renderField('Total Marks', `${formData.physics.total || '-'}/${formData.physics.totalMax || '-'}`)}\n//   {renderField('Maximum Marks', formData.physics.maxmarks || '-')}\n// </div>\n// {/* / Totals Section // */}\n// <h4 style={subsectionTitleStyle}>Totals</h4>\n// <div style={rowStyle}>\n//   {renderField('Total Marks Obtained', `${formData.overallMarks || '-'}/${formData.overallMax || '-'}`)}\n//   {renderField('Percentage', formData.overallPercentage ? `${formData.overallPercentage}%` : '-')}\n//   {renderField('Group Marks Obtained', `${formData.groupMarks || '-'}/${formData.groupMax || '-'}`)}\n//   {renderField('Group Percentage', formData.groupPercentage ? `${formData.groupPercentage}%` : '-')}\n// </div>\n//      </section>\n//     <section style ={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>5. Contact Details</h3>\n//         <div style={rowStyle}>\n//           {renderField('Mobile Number', formData.mobileno)}\n//           {renderField('Email', formData.email)}\n//           {renderField('Address ', formData.address)}\n\n//           {renderField('City', formData.city)}\n//           {renderField('District', formData.district)}\n//           {renderField('State', formData.state)}\n//           {renderField('Pincode', formData.pincode)}\n//         </div>\n//       </section>\n//     </div>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n// import React from 'react';\n// import { Box, Typography, Divider } from '@mui/material';\n\n// const formatKey = (key) => {\n//   return key\n//     .replace(/_/g, ' ')\n//     .replace(/([a-z])([A-Z])/g, '$1 $2')\n//     .replace(/\\b\\w/g, l => l.toUpperCase());\n// };\n\n// const formatSectionTitle = (section) => {\n//   return section\n//     .replace(/([A-Z])/g, ' $1')\n//     .replace(/\\b\\w/g, l => l.toUpperCase())\n//     .trim();\n// };\n\n// const ApplicationReportBPT = ({ formData }) => {\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h4\" gutterBottom>Application Report</Typography>\n\n//       {Object.entries(formData).map(([section, data]) => (\n//         <Box key={section} sx={{ my: 3 }}>\n//           <Typography variant=\"h6\" color=\"primary\">{formatSectionTitle(section)}</Typography>\n//           <Divider sx={{ mb: 1 }} />\n\n//           {Array.isArray(data) ? (\n//             <Box sx={{ pl: 2 }}>\n//               {data.map((item, idx) => (\n//                 <Box key={idx} sx={{ mb: 2 }}>\n//                   {typeof item === 'object' && item !== null ? (\n//                     Object.entries(item).map(([key, value]) => (\n//                       <Typography key={key}>\n//                         <strong>{formatKey(key)}:</strong> {value?.name || value?.toString() || 'N/A'}\n//                       </Typography>\n//                     ))\n//                   ) : (\n//                     <Typography>{item?.toString()}</Typography>\n//                   )}\n//                   <Divider sx={{ my: 1 }} />\n//                 </Box>\n//               ))}\n//             </Box>\n//           ) : typeof data === 'object' && data !== null ? (\n//             Object.entries(data).map(([key, value]) => (\n//               <Typography key={key} sx={{ pl: 2 }}>\n//                 <strong>{formatKey(key)}:</strong> {value?.toString() || 'N/A'}\n//               </Typography>\n//             ))\n//           ) : (\n//             <Typography sx={{ pl: 2 }}>{JSON.stringify(data)}</Typography>\n//           )}\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n\n// import React from 'react';\n// import { Box, Typography, Divider } from '@mui/material';\n// import { useFormContext } from './FormContext'; // adjust path if needed\n\n// const formatKey = (key) => {\n//   return key\n//     .replace(/_/g, ' ')\n//     .replace(/([a-z])([A-Z])/g, '$1 $2')\n//     .replace(/\\b\\w/g, l => l.toUpperCase());\n// };\n\n// const formatSectionTitle = (section) => {\n//   return section\n//     .replace(/([A-Z])/g, ' $1')\n//     .replace(/\\b\\w/g, l => l.toUpperCase())\n//     .trim();\n// };\n\n// const ApplicationReportBPT = () => {\n//   const { formData } = useFormContext();\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <Typography variant=\"h6\" color=\"error\">No form data submitted yet.</Typography>;\n//   }\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h4\" gutterBottom>Application Report</Typography>\n\n//       {Object.entries(formData).map(([section, data]) => (\n//         <Box key={section} sx={{ my: 3 }}>\n//           <Typography variant=\"h6\" color=\"primary\">{formatSectionTitle(section)}</Typography>\n//           <Divider sx={{ mb: 1 }} />\n\n//           {Array.isArray(data) ? (\n//             data.map((item, idx) => (\n//               <Box key={idx} sx={{ pl: 2, mb: 1 }}>\n//                 {typeof item === 'object' ? (\n//                   Object.entries(item).map(([key, value]) => (\n//                     <Typography key={key}>\n//                       <strong>{formatKey(key)}:</strong> {value?.toString()}\n//                     </Typography>\n//                   ))\n//                 ) : (\n//                   <Typography>{item?.toString()}</Typography>\n//                 )}\n//               </Box>\n//             ))\n//           ) : typeof data === 'object' && data !== null ? (\n//             Object.entries(data).map(([key, value]) => (\n//               <Typography key={key} sx={{ pl: 2 }}>\n//                 <strong>{formatKey(key)}:</strong> {value ? value.toString() : 'N/A'}\n//               </Typography>\n//             ))\n//           ) : (\n//             <Typography sx={{ pl: 2 }}>{JSON.stringify(data)}</Typography>\n//           )}\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\nimport React from 'react';\nimport { Box, Typography, Divider } from '@mui/material';\nimport { useFormContext } from './FormContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatKey = key => {\n  return key.replace(/_/g, ' ').replace(/([a-z])([A-Z])/g, '$1 $2').replace(/\\b\\w/g, l => l.toUpperCase());\n};\nconst formatSectionTitle = section => {\n  return section.replace(/([A-Z])/g, ' $1').replace(/\\b\\w/g, l => l.toUpperCase()).trim();\n};\nconst ApplicationReportBPT = () => {\n  _s();\n  const context = useFormContext();\n  if (!context) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: \"Form context is not available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    formData\n  } = context;\n  if (!formData || Object.keys(formData).length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: \"No form data submitted yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Application Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), Object.entries(formData).map(([section, data]) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        children: formatSectionTitle(section)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), Array.isArray(data) ? data.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pl: 2,\n          mb: 1\n        },\n        children: typeof item === 'object' ? Object.entries(item).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [formatKey(key), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 23\n          }, this), \" \", (value === null || value === void 0 ? void 0 : value.toString()) || 'N/A']\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: (item === null || item === void 0 ? void 0 : item.toString()) || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 19\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 15\n      }, this)) : typeof data === 'object' && data !== null ? Object.entries(data).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          pl: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [formatKey(key), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 17\n        }, this), \" \", (value === null || value === void 0 ? void 0 : value.toString()) || 'N/A']\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          pl: 2\n        },\n        children: JSON.stringify(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplicationReportBPT, \"y7raKZN5wtdytHlO5O2iQaF89IM=\", false, function () {\n  return [useFormContext];\n});\n_c = ApplicationReportBPT;\nexport default ApplicationReportBPT;\nvar _c;\n$RefreshReg$(_c, \"ApplicationReportBPT\");","map":{"version":3,"names":["React","Box","Typography","Divider","useFormContext","jsxDEV","_jsxDEV","formatKey","key","replace","l","toUpperCase","formatSectionTitle","section","trim","ApplicationReportBPT","_s","context","variant","color","children","fileName","_jsxFileName","lineNumber","columnNumber","formData","Object","keys","length","sx","p","gutterBottom","entries","map","data","my","mb","Array","isArray","item","idx","pl","value","toString","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationReportBPT.js"],"sourcesContent":["// import React from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const ApplicationReportBPT = () => {\n//   const location = useLocation();\n//   const formData = location.state;\n\n//   // Main container styles\n//   const containerStyle = {\n//     padding: '2rem',\n//     fontFamily: \"'Arial', sans-serif\",\n//     maxWidth: '1200px',\n//     margin: '0 auto',\n//     backgroundColor: '#f9f9f9'\n//   };\n\n//   // Header styles\n//   const headerStyle = {\n//     textAlign: 'center',\n//     marginBottom: '2rem'\n//   };\n\n//   const titleStyle = {\n//     fontSize: '2rem',\n//     color: '#2c3e50',\n//     marginBottom: '0.5rem'\n//   };\n\n//   const subtitleStyle = {\n//     fontSize: '1.5rem',\n//     color: '#34495e',\n//     fontWeight: '400'\n//   };\n\n//   // Section styles\n//   const sectionStyle = {\n//     border: '1px solid #e0e0e0',\n//     padding: '1.5rem',\n//     marginBottom: '1.5rem',\n//     borderRadius: '8px',\n//     backgroundColor: 'white',\n//     boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)'\n//   };\n\n//   const sectionTitleStyle = {\n//     color: '#1976d2',\n//     marginTop: '0',\n//     marginBottom: '1rem',\n//     paddingBottom: '0.5rem',\n//     borderBottom: '1px solid #eee',\n//     fontSize: '1.25rem'\n//   };\n\n//   const subsectionTitleStyle = {\n//     color: '#2c3e50',\n//     margin: '1.5rem 0 1rem 0',\n//     fontSize: '1.1rem'\n//   };\n\n//   // Field row styles\n//   const rowStyle = {\n//     display: 'flex',\n//     flexWrap: 'wrap',\n//     margin: '0 -0.5rem'\n//   };\n\n//   // Field item styles\n//   const fieldStyle = {\n//     width: 'calc(50% - 1rem)',\n//     margin: '0.5rem',\n//     fontSize: '0.9rem',\n//     lineHeight: '1.5'\n//   };\n\n//   const fieldLabelStyle = {\n//     fontWeight: 'bold',\n//     color: '#555',\n//     marginRight: '0.5rem'\n//   };\n\n//   const fieldValueStyle = {\n//     color: '#333'\n//   };\n\n//   // Error message styles\n//   const errorContainerStyle = {\n//     padding: '20px',\n//     fontFamily: 'Arial'\n//   };\n\n//   const errorTextStyle = {\n//     color: 'red',\n//     textAlign: 'center',\n//     padding: '2rem',\n//     fontSize: '1.2rem'\n//   };\n\n//   const renderField = (label, value) => (\n//     <div style={fieldStyle}>\n//       <span style={fieldLabelStyle}>{label}:</span>\n//       <span style={fieldValueStyle}>{value || 'N/A'}</span>\n//     </div>\n//   );\n\n//   if (!formData) {\n//     return (\n//       <div style={errorContainerStyle}>\n//         <h3 style={errorTextStyle}>\n//           No data received. Please fill and submit the form first.\n//         </h3>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>\n//         <h1 style={titleStyle}>Application Review Report</h1>\n//         <h2 style={subtitleStyle}>Bachelor of Physiotherapy - 2025</h2>\n//       </div>\n\n//       {/* Section 1 */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>1. Advertisement Details</h3>\n//         <div style={rowStyle}>\n//           {renderField('Ad. No', formData.adNo)}\n//           {renderField('Ad. Date', formData.adDate)}\n//           {renderField('Application No', formData.applicationNo)}\n//           {renderField('Course Name', formData.courseName)}\n//           {renderField('Course Code', formData.courseCode)}\n//           {renderField('Date of Entry', formData.dateOfEntry)}\n//           {renderField('Last Date', formData.lastDate)}\n//           {renderField('Department', formData.department)}\n//         </div>\n//       </section>\n\n//       {/* Section 2 */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>2. Applicant's Details</h3>\n//         <div style={rowStyle}>\n//           {renderField('Name', formData.name)}\n//           {renderField(\"Father's Name\", formData.fatherName)}\n//           {renderField('Date of Birth', formData.dob)}\n//           {renderField('Age', formData.age)}\n//           {renderField('Place of Birth', formData.birthPlace)}\n//           {renderField('Social Status', formData.status)}\n//           {renderField('Nationality', formData.nationality)}\n//           {renderField('Marital Status', formData.maritalStatus)}\n//           {renderField('Gender', formData.gender)}\n//           {renderField('Differently Abled', formData.differentlyAbled)}\n//           {renderField('Identification Mark 1', formData.idMark1)}\n//           {renderField('Identification Mark 2', formData.idMark2)}\n//           {renderField('University Area', formData.universityArea)}\n//           {renderField('In Service (Govt.)', formData.inService)}\n//           {renderField('Aadhar', formData.aadhar)}\n//           {renderField(\"Father's Email\", formData.fatherEmail)}\n//         </div>\n//       </section>\n\n//       {/* Section 3 */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>3. Parents' Details</h3>\n//         <div style={rowStyle}>\n//           {renderField(\"Father's Name\", formData.fatherName)}\n//           {renderField(\"Father's Age\", formData.fatherAge)}\n//           {renderField(\"Father's Occupation\", formData.fatherOccupation)}\n//           {renderField(\"Mother's Name\", formData.motherName)}\n//           {renderField(\"Mother's Age\", formData.motherAge)}\n//           {renderField(\"Mother's Occupation\", formData.motherOccupation)}\n//           {renderField('Monthly Income', formData.monthlyIncome)}\n//         </div>\n//       </section>\n\n//      {/* Section 4  */}\n//       <section style={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>4. Educational Qualifications</h3>\n        \n//         <div style={rowStyle}>\n//           {renderField('10th School Name', formData.tenthSchool)}\n//           {renderField('10th Board', formData.tenthBoard)}\n//           {renderField('10th Year of Passing', formData.tenthYear)}\n//           {renderField('10th Percentage/CGPA', formData.tenthMarks)}\n//           {renderField('District', formData.tenthDistrict)}\n//         </div>\n\n//         <h4 style={subsectionTitleStyle}>Intermediate First Year</h4>\n//         <div style={rowStyle}>\n//           {renderField('Intermediate College', formData.inter1stCollege)}\n//           {renderField('Place', formData.inter1stplace)}\n//           {renderField('District', formData.inter1stDistrict)}\n//           {renderField('Intermediate Year of Passing', formData.inter1stYear)}\n//           {renderField('State', formData.inter1stState)}\n//         </div>\n\n//         <h4 style={subsectionTitleStyle}>Intermediate Second Year</h4>\n//         <div style={rowStyle}>\n//           {renderField('Intermediate College', formData.inter2ndCollege)}\n//           {renderField('Place', formData.inter2ndplace)}\n//           {renderField('District', formData.inter2ndDistrict)}\n//           {renderField('Intermediate Year of Passing', formData.inter2ndYear)}\n//           {renderField('State', formData.inter2ndState)}\n//         </div>\n     \n// {/* Botany Section */}\n// <h4 style={subsectionTitleStyle}>Intermediate Marks Practicals</h4>\n// <h4>Botany</h4>\n// <div style={rowStyle}>\n//   {renderField('1st Year Theory', `${formData.botany.theory1stYear||'--'} / ${formData.botany.theory1stMax||'--'}`)}\n//   {renderField('2nd Year Theory', `${formData.botany.theory2ndYear||'--'} / ${formData.botany.theory2ndMax||'--'}`)}\n//   {renderField('Practicals', `${formData.botany.practical||'--'} / ${formData.botany.practicalMax||'--'}`)}\n//   {renderField('Total Marks', `${formData.botany.total||'--'} / ${formData.botany.totalMax||'--'}`)}\n//   {renderField('Maximum Marks', formData.botany.maxmarks||'--')}\n// </div>\n\n// {/* Zoology Section */}\n// <h4 style={subsectionTitleStyle}>Zoology</h4>\n// <div style={rowStyle}>\n//   {renderField('1st Year Theory', `${formData.zoology.theory1stYear || '-'}/${formData.zoology.theory1stMax || '-'}`)}\n//   {renderField('2nd Year Theory', `${formData.zoology.theory2ndYear || '-'}/${formData.zoology.theory2ndMax || '-'}`)}\n//   {renderField('Practicals', `${formData.zoology.practical || '-'}/${formData.zoology.practicalMax || '-'}`)}\n//   {renderField('Total Marks', `${formData.zoology.total || '-'}/${formData.zoology.totalMax || '-'}`)}\n//   {renderField('Maximum Marks', formData.zoology.maxmarks || '-')}\n// </div>\n//    {/* Physics Section */}\n// <h4 style={subsectionTitleStyle}>Physics</h4>\n// <div style={rowStyle}>\n//   {renderField('1st Year Theory', `${formData.physics.theory1stYear || '-'}/${formData.physics.theory1stMax || '-'}`)}\n//   {renderField('2nd Year Theory', `${formData.physics.theory2ndYear || '-'}/${formData.physics.theory2ndMax || '-'}`)}\n//   {renderField('Practicals', `${formData.physics.practical || '-'}/${formData.physics.practicalMax || '-'}`)}\n//   {renderField('Total Marks', `${formData.physics.total || '-'}/${formData.physics.totalMax || '-'}`)}\n//   {renderField('Maximum Marks', formData.physics.maxmarks || '-')}\n// </div>\n// {/* / Totals Section // */}\n// <h4 style={subsectionTitleStyle}>Totals</h4>\n// <div style={rowStyle}>\n//   {renderField('Total Marks Obtained', `${formData.overallMarks || '-'}/${formData.overallMax || '-'}`)}\n//   {renderField('Percentage', formData.overallPercentage ? `${formData.overallPercentage}%` : '-')}\n//   {renderField('Group Marks Obtained', `${formData.groupMarks || '-'}/${formData.groupMax || '-'}`)}\n//   {renderField('Group Percentage', formData.groupPercentage ? `${formData.groupPercentage}%` : '-')}\n// </div>\n//      </section>\n//     <section style ={sectionStyle}>\n//         <h3 style={sectionTitleStyle}>5. Contact Details</h3>\n//         <div style={rowStyle}>\n//           {renderField('Mobile Number', formData.mobileno)}\n//           {renderField('Email', formData.email)}\n//           {renderField('Address ', formData.address)}\n     \n//           {renderField('City', formData.city)}\n//           {renderField('District', formData.district)}\n//           {renderField('State', formData.state)}\n//           {renderField('Pincode', formData.pincode)}\n//         </div>\n//       </section>\n//     </div>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n// import React from 'react';\n// import { Box, Typography, Divider } from '@mui/material';\n\n// const formatKey = (key) => {\n//   return key\n//     .replace(/_/g, ' ')\n//     .replace(/([a-z])([A-Z])/g, '$1 $2')\n//     .replace(/\\b\\w/g, l => l.toUpperCase());\n// };\n\n// const formatSectionTitle = (section) => {\n//   return section\n//     .replace(/([A-Z])/g, ' $1')\n//     .replace(/\\b\\w/g, l => l.toUpperCase())\n//     .trim();\n// };\n\n// const ApplicationReportBPT = ({ formData }) => {\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h4\" gutterBottom>Application Report</Typography>\n\n//       {Object.entries(formData).map(([section, data]) => (\n//         <Box key={section} sx={{ my: 3 }}>\n//           <Typography variant=\"h6\" color=\"primary\">{formatSectionTitle(section)}</Typography>\n//           <Divider sx={{ mb: 1 }} />\n\n//           {Array.isArray(data) ? (\n//             <Box sx={{ pl: 2 }}>\n//               {data.map((item, idx) => (\n//                 <Box key={idx} sx={{ mb: 2 }}>\n//                   {typeof item === 'object' && item !== null ? (\n//                     Object.entries(item).map(([key, value]) => (\n//                       <Typography key={key}>\n//                         <strong>{formatKey(key)}:</strong> {value?.name || value?.toString() || 'N/A'}\n//                       </Typography>\n//                     ))\n//                   ) : (\n//                     <Typography>{item?.toString()}</Typography>\n//                   )}\n//                   <Divider sx={{ my: 1 }} />\n//                 </Box>\n//               ))}\n//             </Box>\n//           ) : typeof data === 'object' && data !== null ? (\n//             Object.entries(data).map(([key, value]) => (\n//               <Typography key={key} sx={{ pl: 2 }}>\n//                 <strong>{formatKey(key)}:</strong> {value?.toString() || 'N/A'}\n//               </Typography>\n//             ))\n//           ) : (\n//             <Typography sx={{ pl: 2 }}>{JSON.stringify(data)}</Typography>\n//           )}\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n\n// import React from 'react';\n// import { Box, Typography, Divider } from '@mui/material';\n// import { useFormContext } from './FormContext'; // adjust path if needed\n\n// const formatKey = (key) => {\n//   return key\n//     .replace(/_/g, ' ')\n//     .replace(/([a-z])([A-Z])/g, '$1 $2')\n//     .replace(/\\b\\w/g, l => l.toUpperCase());\n// };\n\n// const formatSectionTitle = (section) => {\n//   return section\n//     .replace(/([A-Z])/g, ' $1')\n//     .replace(/\\b\\w/g, l => l.toUpperCase())\n//     .trim();\n// };\n\n// const ApplicationReportBPT = () => {\n//   const { formData } = useFormContext();\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <Typography variant=\"h6\" color=\"error\">No form data submitted yet.</Typography>;\n//   }\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h4\" gutterBottom>Application Report</Typography>\n\n//       {Object.entries(formData).map(([section, data]) => (\n//         <Box key={section} sx={{ my: 3 }}>\n//           <Typography variant=\"h6\" color=\"primary\">{formatSectionTitle(section)}</Typography>\n//           <Divider sx={{ mb: 1 }} />\n\n//           {Array.isArray(data) ? (\n//             data.map((item, idx) => (\n//               <Box key={idx} sx={{ pl: 2, mb: 1 }}>\n//                 {typeof item === 'object' ? (\n//                   Object.entries(item).map(([key, value]) => (\n//                     <Typography key={key}>\n//                       <strong>{formatKey(key)}:</strong> {value?.toString()}\n//                     </Typography>\n//                   ))\n//                 ) : (\n//                   <Typography>{item?.toString()}</Typography>\n//                 )}\n//               </Box>\n//             ))\n//           ) : typeof data === 'object' && data !== null ? (\n//             Object.entries(data).map(([key, value]) => (\n//               <Typography key={key} sx={{ pl: 2 }}>\n//                 <strong>{formatKey(key)}:</strong> {value ? value.toString() : 'N/A'}\n//               </Typography>\n//             ))\n//           ) : (\n//             <Typography sx={{ pl: 2 }}>{JSON.stringify(data)}</Typography>\n//           )}\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\nimport React from 'react';\nimport { Box, Typography, Divider } from '@mui/material';\nimport { useFormContext } from './FormContext';\n\nconst formatKey = (key) => {\n  return key\n    .replace(/_/g, ' ')\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/\\b\\w/g, (l) => l.toUpperCase());\n};\n\nconst formatSectionTitle = (section) => {\n  return section\n    .replace(/([A-Z])/g, ' $1')\n    .replace(/\\b\\w/g, (l) => l.toUpperCase())\n    .trim();\n};\n\nconst ApplicationReportBPT = () => {\n  const context = useFormContext();\n\n  if (!context) {\n    return <Typography variant=\"h6\" color=\"error\">Form context is not available.</Typography>;\n  }\n\n  const { formData } = context;\n\n  if (!formData || Object.keys(formData).length === 0) {\n    return <Typography variant=\"h6\" color=\"error\">No form data submitted yet.</Typography>;\n  }\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Application Report\n      </Typography>\n\n      {Object.entries(formData).map(([section, data]) => (\n        <Box key={section} sx={{ my: 3 }}>\n          <Typography variant=\"h6\" color=\"primary\">\n            {formatSectionTitle(section)}\n          </Typography>\n          <Divider sx={{ mb: 1 }} />\n\n          {Array.isArray(data) ? (\n            data.map((item, idx) => (\n              <Box key={idx} sx={{ pl: 2, mb: 1 }}>\n                {typeof item === 'object' ? (\n                  Object.entries(item).map(([key, value]) => (\n                    <Typography key={key}>\n                      <strong>{formatKey(key)}:</strong> {value?.toString() || 'N/A'}\n                    </Typography>\n                  ))\n                ) : (\n                  <Typography>{item?.toString() || 'N/A'}</Typography>\n                )}\n              </Box>\n            ))\n          ) : typeof data === 'object' && data !== null ? (\n            Object.entries(data).map(([key, value]) => (\n              <Typography key={key} sx={{ pl: 2 }}>\n                <strong>{formatKey(key)}:</strong> {value?.toString() || 'N/A'}\n              </Typography>\n            ))\n          ) : (\n            <Typography sx={{ pl: 2 }}>{JSON.stringify(data)}</Typography>\n          )}\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default ApplicationReportBPT;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}