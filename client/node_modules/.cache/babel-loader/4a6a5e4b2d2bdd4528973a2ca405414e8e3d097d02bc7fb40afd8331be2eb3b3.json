{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/BachelorofPhysiotherapyForms/FormComponentBPT.js\";\n// import React, { useEffect, useState } from 'react';\n// import { \n//   Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button \n// } from '@mui/material';\n// import { toWords } from 'number-to-words';\n\n// const FormComponentBPT = ({\n//   title,\n//   subjectsData,\n//   name = 'John Doe',\n//   soName = 'Richard Doe',\n//   idLabel = 'Roll Number',\n//   examDate = 'June 2025',\n//   submissionDate = '2025-06-24',\n\n//   sgpa,\n\n// }) => {\n\n//   const [subjects, setSubjects] = useState(subjectsData || []);\n//   const [grandTotal, setGrandTotal] = useState(0);\n//   const [totalInWords, setTotalInWords] = useState('');\n\n//   const [department,setDepartment]=useState('');\n//   const [semester, setSemester]=useState('');\n//   const [subjectid,setSubjectid]=useState('')\n// const [year,setYear]=useState('');\n//   useEffect(() => {\n//     const total = subjects.reduce((acc, subj) => {\n//       const theory = Number(subj.theorySecured || 0);\n//       const practical = subj.practicalMax === 'NA' ? 0 : Number(subj.practicalSecured || 0);\n//       return acc + theory + practical;\n//     }, 0);\n//     setGrandTotal(total);\n//     setTotalInWords(toWords(total));\n//   }, [subjects]);\n\n//   const handleFetch = () => {\n//     // Placeholder logic - replace with actual API call\n//     console.log('Fetching data for:', );\n//     // Example: fetch(`/api/student-marks/${rollNumber}`).then(...).then(data => setSubjects(data));\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       {/* Student Details Form */}\n//       <Box sx={{ mb: 3, display: 'flex', flexDirection: 'column', gap: 2 }}>\n//         <TextField \n//           label={idLabel} \n//           value={subjectid} \n//           onChange={(e) => setSubjectid(e.target.value)} \n//           fullWidth\n//         />\n\n//         <TextField \n//           label=\"Department\" \n//           value={department} \n//           onChange={(e) => setDepartment(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Semester\" \n//           value={semester} \n//           onChange={(e) => setSemester(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Year\" \n//           value={year} \n//           onChange={(e) => setYear(e.target.value)} \n//           fullWidth \n//         />\n//         <Button variant=\"outlined\" onClick={handleFetch}>Fetch</Button>\n//       </Box>\n\n//       {/* Student Information Display */}\n//       <Typography><strong>{idLabel}:</strong> {subjectid}</Typography>\n//       <Typography><strong>Name:</strong> {name}</Typography>\n//       <Typography><strong>S/o. / D/o.:</strong> {soName}</Typography>\n//       <Typography><strong>Month & Year of Exam:</strong> {examDate}</Typography>\n\n//       {/* Marks Table */}\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Subject</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Theory</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Practical / Viva</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Total</TableCell>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Result</TableCell>\n//             </TableRow>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell />\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subj, index) => {\n//               const totalSecured = subj.practicalMax === 'NA'\n//                 ? Number(subj.theorySecured || 0)\n//                 : Number(subj.theorySecured || 0) + Number(subj.practicalSecured || 0);\n\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell sx={{ wordBreak: 'break-word' }}>{subj.name}</TableCell>\n//                   <TableCell>{subj.theoryMax}</TableCell>\n//                   <TableCell>{subj.theoryMin}</TableCell>\n//                   <TableCell>{subj.theorySecured || 0}</TableCell>\n//                   <TableCell>{subj.practicalMax}</TableCell>\n//                   <TableCell>{subj.practicalMin}</TableCell>\n//                   <TableCell>{subj.practicalMax === 'NA' ? 'NA' : subj.practicalSecured || 0}</TableCell>\n//                   <TableCell>{subj.totalMax}</TableCell>\n//                   <TableCell>{subj.totalMin}</TableCell>\n//                   <TableCell>{totalSecured}</TableCell>\n//                   <TableCell>{subj.result || '-'}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n//             <TableRow>\n//               <TableCell colSpan={9} align=\"right\"><strong>Grand Total:</strong></TableCell>\n//               <TableCell><strong>{grandTotal}</strong></TableCell>\n//               <TableCell><strong>T.M</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Total in Words and Date */}\n//       <Box sx={{ mt: 3 }}>\n//         <Typography><strong>Aggregate marks (in words):</strong> {totalInWords.toUpperCase()}</Typography>\n//       </Box>\n//       <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n//         <Typography><strong>Dated:</strong> {submissionDate}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentBPT;\nimport React from 'react';\nimport { Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button } from '@mui/material';\nimport { toWords } from 'number-to-words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponentBPT = ({\n  title = \"BPT Semester Marks\",\n  subjectsData = [],\n  name = 'John Doe',\n  soName = 'Richard Doe',\n  idLabel = 'Roll Number',\n  examDate = 'June 2025',\n  submissionDate = '2025-06-24',\n  sgpa = '',\n  department = '',\n  semester = '',\n  subjectid = '',\n  year = '',\n  onDepartmentChange,\n  onSemesterChange,\n  onSubjectIdChange,\n  onYearChange,\n  onFetchClick\n}) => {\n  // Calculate totals (derived values, no state needed)\n  const {\n    grandTotal,\n    totalInWords\n  } = subjectsData.reduce((acc, subj) => {\n    const theory = Number(subj.theorySecured || 0);\n    const practical = subj.practicalMax === 'NA' ? 0 : Number(subj.practicalSecured || 0);\n    const total = acc.grandTotal + theory + practical;\n    return {\n      grandTotal: total,\n      totalInWords: toWords(total)\n    };\n  }, {\n    grandTotal: 0,\n    totalInWords: ''\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      pt: 9,\n      px: 6,\n      pb: 7\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: idLabel,\n        value: subjectid,\n        onChange: e => onSubjectIdChange(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Department\",\n        value: department,\n        onChange: e => onDepartmentChange(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Semester\",\n        value: semester,\n        onChange: e => onSemesterChange(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Year\",\n        value: year,\n        onChange: e => onYearChange(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onFetchClick,\n        disabled: !subjectid || !department || !semester || !year,\n        children: \"Fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [idLabel, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }, this), \" \", subjectid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }, this), \" \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"S/o. / D/o.:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }, this), \" \", soName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Month & Year of Exam:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }, this), \" \", examDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#dddddd'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              colSpan: 3,\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Theory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              colSpan: 3,\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Practical / Viva\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              colSpan: 3,\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#dddddd'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [subjectsData.map((subj, index) => {\n            const totalSecured = subj.practicalMax === 'NA' ? Number(subj.theorySecured || 0) : Number(subj.theorySecured || 0) + Number(subj.practicalSecured || 0);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  wordBreak: 'break-word'\n                },\n                children: subj.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.theoryMax\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.theoryMin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.theorySecured || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.practicalMax\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.practicalMin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.practicalMax === 'NA' ? 'NA' : subj.practicalSecured || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.totalMax\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.totalMin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: totalSecured\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: subj.result || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 9,\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Grand Total:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: grandTotal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"T.M\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Aggregate marks (in words):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), \" \", totalInWords.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3,\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dated:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), \" \", submissionDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_c = FormComponentBPT;\nexport default FormComponentBPT;\nvar _c;\n$RefreshReg$(_c, \"FormComponentBPT\");","map":{"version":3,"names":["React","Box","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Button","toWords","jsxDEV","_jsxDEV","FormComponentBPT","title","subjectsData","name","soName","idLabel","examDate","submissionDate","sgpa","department","semester","subjectid","year","onDepartmentChange","onSemesterChange","onSubjectIdChange","onYearChange","onFetchClick","grandTotal","totalInWords","reduce","acc","subj","theory","Number","theorySecured","practical","practicalMax","practicalSecured","total","sx","pt","px","pb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","display","flexDirection","gap","label","value","onChange","e","target","fullWidth","onClick","disabled","component","mt","backgroundColor","fontWeight","align","colSpan","map","index","totalSecured","wordBreak","theoryMax","theoryMin","practicalMin","totalMax","totalMin","result","toUpperCase","justifyContent","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/BachelorofPhysiotherapyForms/FormComponentBPT.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { \n//   Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button \n// } from '@mui/material';\n// import { toWords } from 'number-to-words';\n\n// const FormComponentBPT = ({\n//   title,\n//   subjectsData,\n//   name = 'John Doe',\n//   soName = 'Richard Doe',\n//   idLabel = 'Roll Number',\n//   examDate = 'June 2025',\n//   submissionDate = '2025-06-24',\n\n\n\n//   sgpa,\n\n\n\n\n// }) => {\n\n\n//   const [subjects, setSubjects] = useState(subjectsData || []);\n//   const [grandTotal, setGrandTotal] = useState(0);\n//   const [totalInWords, setTotalInWords] = useState('');\n\n//   const [department,setDepartment]=useState('');\n//   const [semester, setSemester]=useState('');\n//   const [subjectid,setSubjectid]=useState('')\n// const [year,setYear]=useState('');\n//   useEffect(() => {\n//     const total = subjects.reduce((acc, subj) => {\n//       const theory = Number(subj.theorySecured || 0);\n//       const practical = subj.practicalMax === 'NA' ? 0 : Number(subj.practicalSecured || 0);\n//       return acc + theory + practical;\n//     }, 0);\n//     setGrandTotal(total);\n//     setTotalInWords(toWords(total));\n//   }, [subjects]);\n\n//   const handleFetch = () => {\n//     // Placeholder logic - replace with actual API call\n//     console.log('Fetching data for:', );\n//     // Example: fetch(`/api/student-marks/${rollNumber}`).then(...).then(data => setSubjects(data));\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       {/* Student Details Form */}\n//       <Box sx={{ mb: 3, display: 'flex', flexDirection: 'column', gap: 2 }}>\n//         <TextField \n//           label={idLabel} \n//           value={subjectid} \n//           onChange={(e) => setSubjectid(e.target.value)} \n//           fullWidth\n//         />\n      \n//         <TextField \n//           label=\"Department\" \n//           value={department} \n//           onChange={(e) => setDepartment(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Semester\" \n//           value={semester} \n//           onChange={(e) => setSemester(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Year\" \n//           value={year} \n//           onChange={(e) => setYear(e.target.value)} \n//           fullWidth \n//         />\n//         <Button variant=\"outlined\" onClick={handleFetch}>Fetch</Button>\n//       </Box>\n\n//       {/* Student Information Display */}\n//       <Typography><strong>{idLabel}:</strong> {subjectid}</Typography>\n//       <Typography><strong>Name:</strong> {name}</Typography>\n//       <Typography><strong>S/o. / D/o.:</strong> {soName}</Typography>\n//       <Typography><strong>Month & Year of Exam:</strong> {examDate}</Typography>\n\n//       {/* Marks Table */}\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Subject</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Theory</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Practical / Viva</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Total</TableCell>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Result</TableCell>\n//             </TableRow>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell />\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subj, index) => {\n//               const totalSecured = subj.practicalMax === 'NA'\n//                 ? Number(subj.theorySecured || 0)\n//                 : Number(subj.theorySecured || 0) + Number(subj.practicalSecured || 0);\n\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell sx={{ wordBreak: 'break-word' }}>{subj.name}</TableCell>\n//                   <TableCell>{subj.theoryMax}</TableCell>\n//                   <TableCell>{subj.theoryMin}</TableCell>\n//                   <TableCell>{subj.theorySecured || 0}</TableCell>\n//                   <TableCell>{subj.practicalMax}</TableCell>\n//                   <TableCell>{subj.practicalMin}</TableCell>\n//                   <TableCell>{subj.practicalMax === 'NA' ? 'NA' : subj.practicalSecured || 0}</TableCell>\n//                   <TableCell>{subj.totalMax}</TableCell>\n//                   <TableCell>{subj.totalMin}</TableCell>\n//                   <TableCell>{totalSecured}</TableCell>\n//                   <TableCell>{subj.result || '-'}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n//             <TableRow>\n//               <TableCell colSpan={9} align=\"right\"><strong>Grand Total:</strong></TableCell>\n//               <TableCell><strong>{grandTotal}</strong></TableCell>\n//               <TableCell><strong>T.M</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Total in Words and Date */}\n//       <Box sx={{ mt: 3 }}>\n//         <Typography><strong>Aggregate marks (in words):</strong> {totalInWords.toUpperCase()}</Typography>\n//       </Box>\n//       <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n//         <Typography><strong>Dated:</strong> {submissionDate}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentBPT;\nimport React from 'react';\nimport { \n  Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button \n} from '@mui/material';\nimport { toWords } from 'number-to-words';\n\nconst FormComponentBPT = ({\n  title = \"BPT Semester Marks\",\n  subjectsData = [],\n  name = 'John Doe',\n  soName = 'Richard Doe',\n  idLabel = 'Roll Number',\n  examDate = 'June 2025',\n  submissionDate = '2025-06-24',\n  sgpa = '',\n  department = '',\n  semester = '',\n  subjectid = '',\n  year = '',\n  onDepartmentChange,\n  onSemesterChange,\n  onSubjectIdChange,\n  onYearChange,\n  onFetchClick\n}) => {\n  // Calculate totals (derived values, no state needed)\n  const { grandTotal, totalInWords } = subjectsData.reduce((acc, subj) => {\n    const theory = Number(subj.theorySecured || 0);\n    const practical = subj.practicalMax === 'NA' ? 0 : Number(subj.practicalSecured || 0);\n    const total = acc.grandTotal + theory + practical;\n    return {\n      grandTotal: total,\n      totalInWords: toWords(total)\n    };\n  }, { grandTotal: 0, totalInWords: '' });\n\n  return (\n    <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n      <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n      {/* Student Details Form */}\n      <Box sx={{ mb: 3, display: 'flex', flexDirection: 'column', gap: 2 }}>\n        <TextField \n          label={idLabel} \n          value={subjectid} \n          onChange={(e) => onSubjectIdChange(e.target.value)} \n          fullWidth\n        />\n        <TextField \n          label=\"Department\" \n          value={department} \n          onChange={(e) => onDepartmentChange(e.target.value)} \n          fullWidth \n        />\n        <TextField \n          label=\"Semester\" \n          value={semester} \n          onChange={(e) => onSemesterChange(e.target.value)} \n          fullWidth \n        />\n        <TextField \n          label=\"Year\" \n          value={year} \n          onChange={(e) => onYearChange(e.target.value)} \n          fullWidth \n        />\n        <Button \n          variant=\"outlined\" \n          onClick={onFetchClick}\n          disabled={!subjectid || !department || !semester || !year}\n        >\n          Fetch\n        </Button>\n      </Box>\n\n      {/* Student Information Display */}\n      <Typography><strong>{idLabel}:</strong> {subjectid}</Typography>\n      <Typography><strong>Name:</strong> {name}</Typography>\n      <Typography><strong>S/o. / D/o.:</strong> {soName}</Typography>\n      <Typography><strong>Month & Year of Exam:</strong> {examDate}</Typography>\n\n      {/* Marks Table */}\n      <TableContainer component={Paper} sx={{ mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow sx={{ backgroundColor: '#dddddd' }}>\n              <TableCell sx={{ fontWeight: 'bold' }}>Subject</TableCell>\n              <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Theory</TableCell>\n              <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Practical / Viva</TableCell>\n              <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Total</TableCell>\n              <TableCell sx={{ fontWeight: 'bold' }}>Result</TableCell>\n            </TableRow>\n            <TableRow sx={{ backgroundColor: '#dddddd' }}>\n              <TableCell />\n              <TableCell>Max</TableCell>\n              <TableCell>Min</TableCell>\n              <TableCell>Sec</TableCell>\n              <TableCell>Max</TableCell>\n              <TableCell>Min</TableCell>\n              <TableCell>Sec</TableCell>\n              <TableCell>Max</TableCell>\n              <TableCell>Min</TableCell>\n              <TableCell>Sec</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {subjectsData.map((subj, index) => {\n              const totalSecured = subj.practicalMax === 'NA'\n                ? Number(subj.theorySecured || 0)\n                : Number(subj.theorySecured || 0) + Number(subj.practicalSecured || 0);\n\n              return (\n                <TableRow key={index}>\n                  <TableCell sx={{ wordBreak: 'break-word' }}>{subj.name}</TableCell>\n                  <TableCell>{subj.theoryMax}</TableCell>\n                  <TableCell>{subj.theoryMin}</TableCell>\n                  <TableCell>{subj.theorySecured || 0}</TableCell>\n                  <TableCell>{subj.practicalMax}</TableCell>\n                  <TableCell>{subj.practicalMin}</TableCell>\n                  <TableCell>{subj.practicalMax === 'NA' ? 'NA' : subj.practicalSecured || 0}</TableCell>\n                  <TableCell>{subj.totalMax}</TableCell>\n                  <TableCell>{subj.totalMin}</TableCell>\n                  <TableCell>{totalSecured}</TableCell>\n                  <TableCell>{subj.result || '-'}</TableCell>\n                </TableRow>\n              );\n            })}\n            <TableRow>\n              <TableCell colSpan={9} align=\"right\"><strong>Grand Total:</strong></TableCell>\n              <TableCell><strong>{grandTotal}</strong></TableCell>\n              <TableCell><strong>T.M</strong></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Total in Words and Date */}\n      <Box sx={{ mt: 3 }}>\n        <Typography><strong>Aggregate marks (in words):</strong> {totalInWords.toUpperCase()}</Typography>\n      </Box>\n      <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n        <Typography><strong>Dated:</strong> {submissionDate}</Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default FormComponentBPT;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAKA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QACtG,eAAe;AACtB,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAC;EACxBC,KAAK,GAAG,oBAAoB;EAC5BC,YAAY,GAAG,EAAE;EACjBC,IAAI,GAAG,UAAU;EACjBC,MAAM,GAAG,aAAa;EACtBC,OAAO,GAAG,aAAa;EACvBC,QAAQ,GAAG,WAAW;EACtBC,cAAc,GAAG,YAAY;EAC7BC,IAAI,GAAG,EAAE;EACTC,UAAU,GAAG,EAAE;EACfC,QAAQ,GAAG,EAAE;EACbC,SAAS,GAAG,EAAE;EACdC,IAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}