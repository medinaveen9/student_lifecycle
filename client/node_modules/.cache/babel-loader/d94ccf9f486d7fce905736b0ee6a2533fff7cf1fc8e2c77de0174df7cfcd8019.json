{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/Application1.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     {subject :'Total Marks obtained in Intermediate/EquivalentExamination ', total:'', totalMax:'' },\n//     {subject: 'total  percentage'}\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={'92.8'}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//       disabled\n//     />\n//   </TableCell>\n// </TableRow>\n//               </TableRow>\n\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// // export default Application1;\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' }\n//   ]);\n\n//   const [totalMarks, setTotalMarks] = useState({ obtained: '', max: '' });\n// const [totalPercentage, setTotalPercentage] = useState('');\n// const [groupMarks, setGroupMarks] = useState({ obtained: '', max: '' });\n// const [groupPercentage, setGroupPercentage] = useState('');\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {/* Render input fields for each subject */}\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n\n//             {/* Total Marks Row */}\n//            {/* Total Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Intermediate/Equivalent Examination</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.obtained}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.max}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Total Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={totalPercentage}\n//       onChange={(e) => setTotalPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Group</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.obtained}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.max}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage in Group</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={groupPercentage}\n//       onChange={(e) => setGroupPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n//2//\n\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [educationData, setEducationData] = useState([\n//     { className: 'Inter 2nd Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: 'Inter 1st Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '10th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '9th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '8th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '7th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '6th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' }\n//   ]);\n//   const [eapcetData, setEapcetData] = useState({\n//     registrationNumber: '',\n//     hallTicketNumber: '',\n//     rank: ''\n//   });\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...educationData];\n//     updated[index][field] = value;\n//     setEducationData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Educational Details</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Class</TableCell>\n//               <TableCell>Year of Study</TableCell>\n//               <TableCell>Name of School / College</TableCell>\n//               <TableCell>Place</TableCell>\n//               <TableCell>State</TableCell>\n//               <TableCell>District</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {educationData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.className || '-'}</TableCell>\n\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.yearOfStudy}\n//                     onChange={(e) => handleChange(index, 'yearOfStudy', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.schoolName}\n//                     onChange={(e) => handleChange(index, 'schoolName', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.place}\n//                     onChange={(e) => handleChange(index, 'place', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.state}\n//                     onChange={(e) => handleChange(index, 'state', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.district}\n//                     onChange={(e) => handleChange(index, 'district', e.target.value)}\n//                   />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, my: 3 }}>\n//   <TextField\n//     label=\"TG EAPCET Registration Number\"\n//     value={eapcetData.registrationNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, registrationNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Hall Ticket Number\"\n//     value={eapcetData.hallTicketNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, hallTicketNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Rank\"\n//     value={eapcetData.rank}\n//     onChange={(e) => setEapcetData({ ...eapcetData, rank: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n// </Box>\n\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n//                    3           \n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box\n// } from '@mui/material';\n\n// const AddressForm = () => {\n//   const [formData, setFormData] = useState({\n//     correspondence: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     permanent: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     otherInfo: ''\n//   });\n\n//   const handleChange = (section, field, value) => {\n//     setFormData((prev) => ({\n//       ...prev,\n//       [section]: {\n//         ...prev[section],\n//         [field]: value\n//       }\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Correspondence Address */}\n//       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.correspondence.address} onChange={(e) => handleChange('correspondence', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.correspondence.country} onChange={(e) => handleChange('correspondence', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.correspondence.state} onChange={(e) => handleChange('correspondence', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.correspondence.district} onChange={(e) => handleChange('correspondence', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.correspondence.pinCode} onChange={(e) => handleChange('correspondence', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.correspondence.mobile} onChange={(e) => handleChange('correspondence', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.correspondence.email} onChange={(e) => handleChange('correspondence', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Permanent Address */}\n//       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.permanent.address} onChange={(e) => handleChange('permanent', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.permanent.country} onChange={(e) => handleChange('permanent', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.permanent.state} onChange={(e) => handleChange('permanent', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.permanent.district} onChange={(e) => handleChange('permanent', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.permanent.pinCode} onChange={(e) => handleChange('permanent', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.permanent.mobile} onChange={(e) => handleChange('permanent', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.permanent.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Other Info */}\n//       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n//       <TextField\n//         label=\"Any Other Relevant Information\"\n//         multiline\n//         rows={3}\n//         value={formData.otherInfo}\n//         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n//         size=\"small\"\n//         sx={{ width: '100%' }}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default AddressForm;\n\n///////444\n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const PaymentAndDocsSection = () => {\n//   const documents = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EAPCET-2025 RANK CARD'\n//   ];\n\n//   const [paymentData, setPaymentData] = useState({\n//     paymentType: 'Online Payment',\n//     transactionId: '136189873101',\n//     date: '2025-06-09',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '2500',\n//     remarks: 'Online Payment'\n//   });\n\n//   const [uploadedDocs, setUploadedDocs] = useState({});\n\n//   const handleFileChange = (index, file) => {\n//     setUploadedDocs(prev => ({\n//       ...prev,\n//       [index]: file\n//     }));\n//   };\n\n//   const handlePaymentChange = (field, value) => {\n//     setPaymentData(prev => ({\n//       ...prev,\n//       [field]: value\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 12, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Payment Details */}\n//       <Typography variant=\"h6\" gutterBottom>Payment Details</Typography>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Payment Type\"\n//           value={paymentData.paymentType}\n//           onChange={(e) => handlePaymentChange('paymentType', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Transaction ID\"\n//           value={paymentData.transactionId}\n//           onChange={(e) => handlePaymentChange('transactionId', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Date\"\n//           type=\"date\"\n//           value={paymentData.date}\n//           onChange={(e) => handlePaymentChange('date', e.target.value)}\n//           InputLabelProps={{ shrink: true }}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Name of Bank\"\n//           value={paymentData.bankName}\n//           onChange={(e) => handlePaymentChange('bankName', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Branch Details\"\n//           value={paymentData.branchDetails}\n//           onChange={(e) => handlePaymentChange('branchDetails', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Amount (Rs.)\"\n//           value={paymentData.amount}\n//           onChange={(e) => handlePaymentChange('amount', e.target.value)}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <TextField\n//         label=\"Remarks, If Any\"\n//         value={paymentData.remarks}\n//         onChange={(e) => handlePaymentChange('remarks', e.target.value)}\n//         size=\"small\"\n//         sx={{ mb: 3 }}\n//       />\n\n//       {/* Document Uploads */}\n//       <Typography variant=\"h6\" gutterBottom>Document Uploads</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No.</TableCell>\n//               <TableCell>Document Type</TableCell>\n//               <TableCell>Upload File</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {documents.map((doc, idx) => (\n//               <TableRow key={idx}>\n//                 <TableCell>{idx + 1}</TableCell>\n//                 <TableCell>{doc}</TableCell>\n//                 <TableCell>\n//                   <input\n//                     type=\"file\"\n//                     accept=\".pdf,.jpg,.png\"\n//                     onChange={(e) => handleFileChange(idx, e.target.files[0])}\n//                   />\n//                   {uploadedDocs[idx] && (\n//                     <Typography variant=\"caption\" color=\"primary\">\n//                       {uploadedDocs[idx].name}\n//                     </Typography>\n//                   )}\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default PaymentAndDocsSection;\n\n///////////5 55555555\n\nimport React, { useState } from 'react';\nimport { Typography, TextField, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvertisementDetails = () => {\n  _s();\n  const [adDetails, setAdDetails] = useState({\n    adNo: '',\n    adDate: '',\n    applicationNo: '',\n    courseCode: '',\n    courseName: '',\n    dateOfEntry: '',\n    lastDate: '',\n    department: '',\n    name: '',\n    fatherName: '',\n    dob: '',\n    age: '',\n    placeOfBirth: '',\n    socialStatus: '',\n    nationality: '',\n    maritalStatus: '',\n    gender: '',\n    differentlyAbled: '',\n    idMark1: '',\n    idMark2: '',\n    universityArea: '',\n    inService: '',\n    aadhar: '',\n    fatherEmail: ''\n  });\n  const handleChange = (field, value) => {\n    setAdDetails(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 6,\n      border: '1px solid #ccc',\n      borderRadius: 2,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Advertisement Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 1,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Ad. No.\",\n        value: adDetails.adNo,\n        onChange: e => handleChange('adNo', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Ad. Date\",\n        type: \"date\",\n        value: adDetails.adDate,\n        onChange: e => handleChange('adDate', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        },\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Application No.\",\n        value: adDetails.applicationNo,\n        onChange: e => handleChange('applicationNo', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Course Code\",\n        value: adDetails.courseCode,\n        onChange: e => handleChange('courseCode', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Course Name\",\n        value: adDetails.courseName,\n        onChange: e => handleChange('courseName', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Date of Entry\",\n        type: \"datetime-local\",\n        value: adDetails.dateOfEntry,\n        onChange: e => handleChange('dateOfEntry', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        },\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Last Date of Receiving Application\",\n        type: \"date\",\n        value: adDetails.lastDate,\n        onChange: e => handleChange('lastDate', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        },\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Department\",\n        value: adDetails.department,\n        onChange: e => handleChange('department', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Applicant's Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 1,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        value: adDetails.name,\n        onChange: e => handleChange('name', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Father's Name\",\n        value: adDetails.fatherName,\n        onChange: e => handleChange('fatherName', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Date of Birth\",\n        type: \"date\",\n        value: adDetails.dob,\n        onChange: e => handleChange('dob', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        },\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Age (as on last date)\",\n        value: adDetails.age,\n        onChange: e => handleChange('age', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Place of Birth\",\n        value: adDetails.placeOfBirth,\n        onChange: e => handleChange('placeOfBirth', e.target.value),\n        size: \"small\",\n        sx: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Social Status\",\n        value: adDetails.socialStatus,\n        onChange: e => handleChange('socialStatus', e.target.value),\n        size: \"small\",\n        sx: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Nationality\",\n        value: adDetails.nationality,\n        onChange: e => handleChange('nationality', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Marital Status\",\n        value: adDetails.maritalStatus,\n        onChange: e => handleChange('maritalStatus', e.target.value),\n        size: \"small\",\n        sx: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Gender\",\n        value: adDetails.gender,\n        onChange: e => handleChange('gender', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Differently Abled\",\n        value: adDetails.differentlyAbled,\n        onChange: e => handleChange('differentlyAbled', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Identification Mark 1\",\n        value: adDetails.idMark1,\n        onChange: e => handleChange('idMark1', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Identification Mark 2\",\n        value: adDetails.idMark2,\n        onChange: e => handleChange('idMark2', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"University Area\",\n        value: adDetails.universityArea,\n        onChange: e => handleChange('universityArea', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"In-service (Govt.)\",\n        value: adDetails.inService,\n        onChange: e => handleChange('inService', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Aadhar Number\",\n        value: adDetails.aadhar,\n        onChange: e => handleChange('aadhar', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Father's Email\",\n        value: adDetails.fatherEmail,\n        onChange: e => handleChange('fatherEmail', e.target.value),\n        size: \"small\",\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 684,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvertisementDetails, \"6PqjHfn+eZti0/A9jUzzzLzATY4=\");\n_c = AdvertisementDetails;\nexport default AdvertisementDetails;\nvar _c;\n$RefreshReg$(_c, \"AdvertisementDetails\");","map":{"version":3,"names":["React","useState","Typography","TextField","Box","jsxDEV","_jsxDEV","AdvertisementDetails","_s","adDetails","setAdDetails","adNo","adDate","applicationNo","courseCode","courseName","dateOfEntry","lastDate","department","name","fatherName","dob","age","placeOfBirth","socialStatus","nationality","maritalStatus","gender","differentlyAbled","idMark1","idMark2","universityArea","inService","aadhar","fatherEmail","handleChange","field","value","prev","sx","p","border","borderRadius","mb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","gap","label","onChange","e","target","size","flex","type","InputLabelProps","shrink","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/Application1.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     {subject :'Total Marks obtained in Intermediate/EquivalentExamination ', total:'', totalMax:'' },\n//     {subject: 'total  percentage'}\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={'92.8'}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//       disabled\n//     />\n//   </TableCell>\n// </TableRow>\n//               </TableRow>\n\n\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// // export default Application1;\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' }\n//   ]);\n\n//   const [totalMarks, setTotalMarks] = useState({ obtained: '', max: '' });\n// const [totalPercentage, setTotalPercentage] = useState('');\n// const [groupMarks, setGroupMarks] = useState({ obtained: '', max: '' });\n// const [groupPercentage, setGroupPercentage] = useState('');\n\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {/* Render input fields for each subject */}\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n\n//             {/* Total Marks Row */}\n//            {/* Total Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Intermediate/Equivalent Examination</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.obtained}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.max}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Total Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={totalPercentage}\n//       onChange={(e) => setTotalPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Group</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.obtained}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.max}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage in Group</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={groupPercentage}\n//       onChange={(e) => setGroupPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n                                //2//\n\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [educationData, setEducationData] = useState([\n//     { className: 'Inter 2nd Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: 'Inter 1st Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '10th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '9th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '8th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '7th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '6th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' }\n//   ]);\n//   const [eapcetData, setEapcetData] = useState({\n//     registrationNumber: '',\n//     hallTicketNumber: '',\n//     rank: ''\n//   });\n  \n//   const handleChange = (index, field, value) => {\n//     const updated = [...educationData];\n//     updated[index][field] = value;\n//     setEducationData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Educational Details</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Class</TableCell>\n//               <TableCell>Year of Study</TableCell>\n//               <TableCell>Name of School / College</TableCell>\n//               <TableCell>Place</TableCell>\n//               <TableCell>State</TableCell>\n//               <TableCell>District</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {educationData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.className || '-'}</TableCell>\n\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.yearOfStudy}\n//                     onChange={(e) => handleChange(index, 'yearOfStudy', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.schoolName}\n//                     onChange={(e) => handleChange(index, 'schoolName', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.place}\n//                     onChange={(e) => handleChange(index, 'place', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.state}\n//                     onChange={(e) => handleChange(index, 'state', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.district}\n//                     onChange={(e) => handleChange(index, 'district', e.target.value)}\n//                   />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, my: 3 }}>\n//   <TextField\n//     label=\"TG EAPCET Registration Number\"\n//     value={eapcetData.registrationNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, registrationNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Hall Ticket Number\"\n//     value={eapcetData.hallTicketNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, hallTicketNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Rank\"\n//     value={eapcetData.rank}\n//     onChange={(e) => setEapcetData({ ...eapcetData, rank: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n// </Box>\n\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n\n\n//                    3           \n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box\n// } from '@mui/material';\n\n// const AddressForm = () => {\n//   const [formData, setFormData] = useState({\n//     correspondence: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     permanent: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     otherInfo: ''\n//   });\n\n//   const handleChange = (section, field, value) => {\n//     setFormData((prev) => ({\n//       ...prev,\n//       [section]: {\n//         ...prev[section],\n//         [field]: value\n//       }\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Correspondence Address */}\n//       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.correspondence.address} onChange={(e) => handleChange('correspondence', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.correspondence.country} onChange={(e) => handleChange('correspondence', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.correspondence.state} onChange={(e) => handleChange('correspondence', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.correspondence.district} onChange={(e) => handleChange('correspondence', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.correspondence.pinCode} onChange={(e) => handleChange('correspondence', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.correspondence.mobile} onChange={(e) => handleChange('correspondence', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.correspondence.email} onChange={(e) => handleChange('correspondence', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Permanent Address */}\n//       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.permanent.address} onChange={(e) => handleChange('permanent', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.permanent.country} onChange={(e) => handleChange('permanent', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.permanent.state} onChange={(e) => handleChange('permanent', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.permanent.district} onChange={(e) => handleChange('permanent', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.permanent.pinCode} onChange={(e) => handleChange('permanent', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.permanent.mobile} onChange={(e) => handleChange('permanent', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.permanent.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Other Info */}\n//       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n//       <TextField\n//         label=\"Any Other Relevant Information\"\n//         multiline\n//         rows={3}\n//         value={formData.otherInfo}\n//         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n//         size=\"small\"\n//         sx={{ width: '100%' }}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default AddressForm;\n\n\n///////444\n\n\n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const PaymentAndDocsSection = () => {\n//   const documents = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EAPCET-2025 RANK CARD'\n//   ];\n\n//   const [paymentData, setPaymentData] = useState({\n//     paymentType: 'Online Payment',\n//     transactionId: '136189873101',\n//     date: '2025-06-09',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '2500',\n//     remarks: 'Online Payment'\n//   });\n\n//   const [uploadedDocs, setUploadedDocs] = useState({});\n\n//   const handleFileChange = (index, file) => {\n//     setUploadedDocs(prev => ({\n//       ...prev,\n//       [index]: file\n//     }));\n//   };\n\n//   const handlePaymentChange = (field, value) => {\n//     setPaymentData(prev => ({\n//       ...prev,\n//       [field]: value\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 12, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Payment Details */}\n//       <Typography variant=\"h6\" gutterBottom>Payment Details</Typography>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Payment Type\"\n//           value={paymentData.paymentType}\n//           onChange={(e) => handlePaymentChange('paymentType', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Transaction ID\"\n//           value={paymentData.transactionId}\n//           onChange={(e) => handlePaymentChange('transactionId', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Date\"\n//           type=\"date\"\n//           value={paymentData.date}\n//           onChange={(e) => handlePaymentChange('date', e.target.value)}\n//           InputLabelProps={{ shrink: true }}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Name of Bank\"\n//           value={paymentData.bankName}\n//           onChange={(e) => handlePaymentChange('bankName', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Branch Details\"\n//           value={paymentData.branchDetails}\n//           onChange={(e) => handlePaymentChange('branchDetails', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Amount (Rs.)\"\n//           value={paymentData.amount}\n//           onChange={(e) => handlePaymentChange('amount', e.target.value)}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <TextField\n//         label=\"Remarks, If Any\"\n//         value={paymentData.remarks}\n//         onChange={(e) => handlePaymentChange('remarks', e.target.value)}\n//         size=\"small\"\n//         sx={{ mb: 3 }}\n//       />\n\n//       {/* Document Uploads */}\n//       <Typography variant=\"h6\" gutterBottom>Document Uploads</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No.</TableCell>\n//               <TableCell>Document Type</TableCell>\n//               <TableCell>Upload File</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {documents.map((doc, idx) => (\n//               <TableRow key={idx}>\n//                 <TableCell>{idx + 1}</TableCell>\n//                 <TableCell>{doc}</TableCell>\n//                 <TableCell>\n//                   <input\n//                     type=\"file\"\n//                     accept=\".pdf,.jpg,.png\"\n//                     onChange={(e) => handleFileChange(idx, e.target.files[0])}\n//                   />\n//                   {uploadedDocs[idx] && (\n//                     <Typography variant=\"caption\" color=\"primary\">\n//                       {uploadedDocs[idx].name}\n//                     </Typography>\n//                   )}\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default PaymentAndDocsSection;\n\n\n\n///////////5 55555555\n\nimport React, { useState } from 'react';\nimport { Typography, TextField, Box } from '@mui/material';\n\nconst AdvertisementDetails = () => {\n  const [adDetails, setAdDetails] = useState({\n    adNo: '',\n    adDate: '',\n    applicationNo: '',\n    courseCode: '',\n    courseName: '',\n    dateOfEntry: '',\n    lastDate: '',\n    department: '',\n    name: '',\n    fatherName: '',\n    dob: '',\n    age: '',\n    placeOfBirth: '',\n    socialStatus: '',\n    nationality: '',\n    maritalStatus: '',\n    gender: '',\n    differentlyAbled: '',\n    idMark1: '',\n    idMark2: '',\n    universityArea: '',\n    inService: '',\n    aadhar: '',\n    fatherEmail: ''\n  });\n\n  const handleChange = (field, value) => {\n    setAdDetails(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <Box sx={{ p: 6, border: '1px solid #ccc', borderRadius: 2, mb: 4 }}>\n      {/* Advertisement Details */}\n      <Typography variant=\"h6\" gutterBottom>Advertisement Details</Typography>\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n        <TextField label=\"Ad. No.\" value={adDetails.adNo} onChange={(e) => handleChange('adNo', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Ad. Date\" type=\"date\" value={adDetails.adDate} onChange={(e) => handleChange('adDate', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} sx={{ flex: 1 }} />\n        <TextField label=\"Application No.\" value={adDetails.applicationNo} onChange={(e) => handleChange('applicationNo', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Course Code\" value={adDetails.courseCode} onChange={(e) => handleChange('courseCode', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Course Name\" value={adDetails.courseName} onChange={(e) => handleChange('courseName', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Date of Entry\" type=\"datetime-local\" value={adDetails.dateOfEntry} onChange={(e) => handleChange('dateOfEntry', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} sx={{ flex: 1 }} />\n        <TextField label=\"Last Date of Receiving Application\" type=\"date\" value={adDetails.lastDate} onChange={(e) => handleChange('lastDate', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} sx={{ flex: 1 }} />\n        <TextField label=\"Department\" value={adDetails.department} onChange={(e) => handleChange('department', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n      </Box>\n\n      {/* Applicant's Details */}\n      <Typography variant=\"h6\" gutterBottom>Applicant's Details</Typography>\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n\n        <TextField label=\"Name\" value={adDetails.name} onChange={(e) => handleChange('name', e.target.value)} size=\"small\"  />\n        <TextField label=\"Father's Name\" value={adDetails.fatherName} onChange={(e) => handleChange('fatherName', e.target.value)} size=\"small\"  />\n        <TextField label=\"Date of Birth\" type=\"date\" value={adDetails.dob} onChange={(e) => handleChange('dob', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} sx={{ flex: 1 }} />\n        <TextField label=\"Age (as on last date)\" value={adDetails.age} onChange={(e) => handleChange('age', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Place of Birth\" value={adDetails.placeOfBirth} onChange={(e) => handleChange('placeOfBirth', e.target.value)} size=\"small\" sx={{  }} />\n        <TextField label=\"Social Status\" value={adDetails.socialStatus} onChange={(e) => handleChange('socialStatus', e.target.value)} size=\"small\" sx={{ }} />\n        <TextField label=\"Nationality\" value={adDetails.nationality} onChange={(e) => handleChange('nationality', e.target.value)} size=\"small\" />\n        <TextField label=\"Marital Status\" value={adDetails.maritalStatus} onChange={(e) => handleChange('maritalStatus', e.target.value)} size=\"small\" sx={{ }} />\n        <TextField label=\"Gender\" value={adDetails.gender} onChange={(e) => handleChange('gender', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Differently Abled\" value={adDetails.differentlyAbled} onChange={(e) => handleChange('differentlyAbled', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Identification Mark 1\" value={adDetails.idMark1} onChange={(e) => handleChange('idMark1', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Identification Mark 2\" value={adDetails.idMark2} onChange={(e) => handleChange('idMark2', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"University Area\" value={adDetails.universityArea} onChange={(e) => handleChange('universityArea', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"In-service (Govt.)\" value={adDetails.inService} onChange={(e) => handleChange('inService', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Aadhar Number\" value={adDetails.aadhar} onChange={(e) => handleChange('aadhar', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n        <TextField label=\"Father's Email\" value={adDetails.fatherEmail} onChange={(e) => handleChange('fatherEmail', e.target.value)} size=\"small\" sx={{ flex: 1 }} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default AdvertisementDetails;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}