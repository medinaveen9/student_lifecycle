{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/components/FormComponent2.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData }) => {\n//   const [name, setName] = React.useState('');\n//   const [rollNumber, setRollNumber] = React.useState('');\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Roll Number\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={rollNumber}\n//         onChange={(e) => setRollNumber(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#e0e0e0' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;\n\n// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData, idLabel = 'Roll Number' }) => {\n//   const [name, setName] = React.useState('');\n//   const [idValue, setIdValue] = React.useState(''); // Single dynamic identifier\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n\n//       <TextField\n//         label={idLabel}\n//         fullWidth\n//         margin=\"normal\"\n//         value={idValue}\n//         onChange={(e) => setIdValue(e.target.value)}\n//       />\n\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;\n\nimport React from 'react';\nimport { Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponent2 = ({\n  title,\n  subjectsData,\n  idLabel = 'Roll Number'\n}) => {\n  _s();\n  const [name, setName] = React.useState('Naveen Kumar');\n  const [idValue, setIdValue] = React.useState('21P31A12A7');\n  const [dob, setDob] = React.useState('2002-07-14');\n  const subjects = subjectsData;\n  const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n  const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n  const totalSecuredMarks = subjects.reduce((sum, s) => sum + Number(s.secured || 0), 0);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      maxWidth: 800,\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [idLabel, \": \", idValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Date of Birth: \", dob]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#0a228a'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Max Marks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Min Marks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Marks Secured\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: subject.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: subject.maxMarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: subject.minMarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: subject.secured\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: subject.result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#0a228a'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Grand Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white'\n              },\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: totalMaxMarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white'\n              },\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: totalMinMarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white'\n              },\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: totalSecuredMarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(FormComponent2, \"/OulKfNGB4WaDsG9mNLblRqDPko=\");\n_c = FormComponent2;\nexport default FormComponent2;\nvar _c;\n$RefreshReg$(_c, \"FormComponent2\");","map":{"version":3,"names":["React","Box","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","jsxDEV","_jsxDEV","FormComponent2","title","subjectsData","idLabel","_s","name","setName","useState","idValue","setIdValue","dob","setDob","subjects","totalMaxMarks","reduce","sum","s","maxMarks","totalMinMarks","minMarks","totalSecuredMarks","Number","secured","sx","p","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","mt","backgroundColor","align","map","subject","index","result","color","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/components/FormComponent2.js"],"sourcesContent":["// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData }) => {\n//   const [name, setName] = React.useState('');\n//   const [rollNumber, setRollNumber] = React.useState('');\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Roll Number\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={rollNumber}\n//         onChange={(e) => setRollNumber(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#e0e0e0' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;\n\n\n// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData, idLabel = 'Roll Number' }) => {\n//   const [name, setName] = React.useState('');\n//   const [idValue, setIdValue] = React.useState(''); // Single dynamic identifier\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n      \n//       <TextField\n//         label={idLabel}\n//         fullWidth\n//         margin=\"normal\"\n//         value={idValue}\n//         onChange={(e) => setIdValue(e.target.value)}\n//       />\n\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;\n\nimport React from 'react';\nimport {\n  Box,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TextField\n} from '@mui/material';\n\nconst FormComponent2 = ({ title, subjectsData, idLabel = 'Roll Number' }) => {\n  const [name, setName] = React.useState('Naveen Kumar');\n  const [idValue, setIdValue] = React.useState('21P31A12A7');\n  const [dob, setDob] = React.useState('2002-07-14');\n\n  const subjects = subjectsData;\n\n  const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n  const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n  const totalSecuredMarks = subjects.reduce((sum, s) => sum + Number(s.secured || 0), 0);\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n      <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n      <Typography>Name: {name}</Typography>\n      <Typography>{idLabel}: {idValue}</Typography>\n      <Typography>Date of Birth: {dob}</Typography>\n\n      <TableContainer component={Paper} sx={{ mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow sx={{ backgroundColor: '#0a228a' }}>\n              <TableCell >Subject</TableCell>\n              <TableCell align=\"right\">Max Marks</TableCell>\n              <TableCell  align=\"right\">Min Marks</TableCell>\n              <TableCell  align=\"right\">Marks Secured</TableCell>\n              <TableCell >Result</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {subjects.map((subject, index) => (\n              <TableRow key={index}>\n                <TableCell>{subject.name}</TableCell>\n                <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n                <TableCell align=\"right\">{subject.minMarks}</TableCell>\n                <TableCell align=\"right\">{subject.secured}</TableCell>\n                <TableCell>{subject.result}</TableCell>\n              </TableRow>\n            ))}\n            <TableRow sx={{ backgroundColor: '#0a228a' }}>\n              <TableCell ><strong>Grand Total</strong></TableCell>\n              <TableCell sx={{ color: 'white' }} align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n              <TableCell sx={{ color: 'white' }} align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n              <TableCell sx={{ color: 'white' }} align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n              <TableCell />\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default FormComponent2;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,UAAU,EACVC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,SAAS,QACJ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,cAAc,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}