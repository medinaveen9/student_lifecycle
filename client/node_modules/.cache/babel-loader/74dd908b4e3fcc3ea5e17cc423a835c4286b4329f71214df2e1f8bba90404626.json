{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicalPgMedicalStudents/ExaminationAssessment.js\";\nimport React from 'react';\nimport FormComponent from './FormComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constfields = [{\n  type: 'heading',\n  text: 'IV. Examination & Assessment Phase (PG Specific)'\n}, {\n  type: 'heading',\n  text: 'Internal Assesment for PG'\n}, {\n  label: 'Internal Assessment Marks (Theory)',\n  name: 'internal_assessment_theory',\n  type: 'text',\n  required: false\n}, {\n  label: 'Internal Assessment Marks (Practical)',\n  name: 'internal_assessment_practical',\n  type: 'text',\n  required: false\n}, {\n  label: 'Internal Assessment Marks (Clinical)',\n  name: 'internal_assessment_clinical',\n  type: 'text',\n  required: false\n}, {\n  label: 'Periodical Assessment Dates',\n  name: 'periodical_assessment_dates',\n  type: 'date',\n  required: false\n}, {\n  type: 'heading',\n  text: 'PG Final Examination Details'\n}, {\n  label: 'Theory Papers Passed/Failed',\n  name: 'theory_exam_status',\n  type: 'select',\n  options: ['Passed', 'Failed'],\n  required: false\n}, {\n  label: 'Practical/Clinical Exam Status',\n  name: 'practical_exam_status',\n  type: 'select',\n  options: ['Passed', 'Failed'],\n  required: false\n}, {\n  label: 'Viva Voce Status',\n  name: 'viva_voce_status',\n  type: 'select',\n  options: ['Passed', 'Failed'],\n  required: false\n}, {\n  label: 'Eligibility for Final Exit Exam',\n  name: 'exit_exam_eligibility',\n  type: 'select',\n  options: ['Eligible', 'Not Eligible'],\n  required: false\n}, {\n  type: 'heading',\n  text: ''\n}, {\n  type: 'heading',\n  text: 'V. Post-Completion & Alumni Phase (PG Specific)'\n}, {\n  type: 'heading',\n  text: 'Speciality Certification'\n}, {\n  label: 'PG Degree Awarded (e.g., MD, MS, M.Ch., DM, DNB)',\n  name: 'pg_degree_awarded',\n  type: 'text',\n  required: false\n}, {\n  label: 'Date of Degree Award',\n  name: 'pg_degree_award_date',\n  type: 'date',\n  required: false\n}, {\n  type: 'heading',\n  text: 'post-PG Registration'\n}, {\n  label: 'Updated Medical Council Registration Number (with PG qualification)',\n  name: 'updated_medical_registration_number',\n  type: 'text',\n  required: false\n}, {\n  label: 'Updated Medical Council Registration Date',\n  name: 'updated_medical_registration_date',\n  type: 'date',\n  required: false\n}, {\n  type: 'heading',\n  text: 'VI. Employment & Further Education (Post-PG)'\n}, {\n  type: 'heading',\n  text: 'Employment Details (initial Post-PG)'\n},\n// Employment Details (Initial Post-PG)\n{\n  label: 'First Employer Name',\n  name: 'first_employer_name',\n  type: 'text',\n  required: false\n}, {\n  label: 'Position',\n  name: 'post_pg_position',\n  type: 'text',\n  required: false\n}, {\n  label: 'Start Date',\n  name: 'employment_start_date',\n  type: 'date',\n  required: false\n}, {\n  type: 'heading',\n  text: 'Further Fellowships/Super-Specialization'\n},\n// Further Fellowships/Super-Specialization\n{\n  label: 'Applied for Fellowship/Super-Specialization',\n  name: 'applied_for_fellowship',\n  type: 'select',\n  options: ['Yes', 'No'],\n  required: false\n}, {\n  label: 'Fellowship/Super-Specialization Program Name',\n  name: 'fellowship_program_name',\n  type: 'text',\n  required: false\n}];\nconst ExaminationAssessment = () => {\n  return /*#__PURE__*/_jsxDEV(FormComponent, {\n    formTitle: \"Admission & OnBoarding Phase (PG Specific)\",\n    formName: \"ExaminationAssessment\",\n    fields: constfields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_c = ExaminationAssessment;\nexport default ExaminationAssessment;\nvar _c;\n$RefreshReg$(_c, \"ExaminationAssessment\");","map":{"version":3,"names":["React","FormComponent","jsxDEV","_jsxDEV","constfields","type","text","label","name","required","options","ExaminationAssessment","formTitle","formName","fields","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicalPgMedicalStudents/ExaminationAssessment.js"],"sourcesContent":["import React from 'react';\nimport FormComponent from './FormComponent';\n\n\n\nconst constfields = [\n\n    { type: 'heading', text: 'IV. Examination & Assessment Phase (PG Specific)' },\n    { type: 'heading', text: 'Internal Assesment for PG' },\n    { label: 'Internal Assessment Marks (Theory)', name: 'internal_assessment_theory', type: 'text', required: false },\n    { label: 'Internal Assessment Marks (Practical)', name: 'internal_assessment_practical', type: 'text', required: false },\n    { label: 'Internal Assessment Marks (Clinical)', name: 'internal_assessment_clinical', type: 'text', required: false },\n    \n{ label: 'Periodical Assessment Dates', name: 'periodical_assessment_dates', type: 'date', required: false },\n{ type: 'heading', text: 'PG Final Examination Details' },\n{ label: 'Theory Papers Passed/Failed', name: 'theory_exam_status', type: 'select', options: ['Passed', 'Failed'], required: false },\n{ label: 'Practical/Clinical Exam Status', name: 'practical_exam_status', type: 'select', options: ['Passed', 'Failed'], required: false },\n{ label: 'Viva Voce Status', name: 'viva_voce_status', type: 'select', options: ['Passed', 'Failed'], required: false },\n{ label: 'Eligibility for Final Exit Exam', name: 'exit_exam_eligibility', type: 'select', options: ['Eligible', 'Not Eligible'], required: false },\n{ type: 'heading', text: '' },\n{ type: 'heading', text: 'V. Post-Completion & Alumni Phase (PG Specific)' },\n{ type: 'heading', text: 'Speciality Certification' },\n{ label: 'PG Degree Awarded (e.g., MD, MS, M.Ch., DM, DNB)', name: 'pg_degree_awarded', type: 'text', required: false },\n\n{ label: 'Date of Degree Award', name: 'pg_degree_award_date', type: 'date', required: false },\n{ type: 'heading', text: 'post-PG Registration' },\n{ label: 'Updated Medical Council Registration Number (with PG qualification)', name: 'updated_medical_registration_number', type: 'text', required: false },\n{ label: 'Updated Medical Council Registration Date', name: 'updated_medical_registration_date', type: 'date', required: false },\n\n{ type: 'heading', text: 'VI. Employment & Further Education (Post-PG)' },\n{ type: 'heading', text: 'Employment Details (initial Post-PG)' },\n// Employment Details (Initial Post-PG)\n{ label: 'First Employer Name', name: 'first_employer_name', type: 'text', required: false },\n{ label: 'Position', name: 'post_pg_position', type: 'text', required: false },\n{ label: 'Start Date', name: 'employment_start_date', type: 'date', required: false },\n{ type: 'heading', text: 'Further Fellowships/Super-Specialization' },\n// Further Fellowships/Super-Specialization\n{ label: 'Applied for Fellowship/Super-Specialization', name: 'applied_for_fellowship', type: 'select', options: ['Yes', 'No'], required: false },\n{ label: 'Fellowship/Super-Specialization Program Name', name: 'fellowship_program_name', type: 'text', required: false },\n]\n\nconst  ExaminationAssessment = () => {\n    return (\n      <FormComponent\n        formTitle=\"Admission & OnBoarding Phase (PG Specific)\"\n        formName=\"ExaminationAssessment\"\n        fields={constfields}\n      />\n    );\n  };\n  \n  export default ExaminationAssessment;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}