{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { \n//   Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button \n// } from '@mui/material';\n// import { toWords } from 'number-to-words';\n\n// const FormComponentBPT = ({\n//   title,\n//   subjectsData,\n//   name = 'John Doe',\n//   soName = 'Richard Doe',\n//   idLabel = 'Roll Number',\n//   examDate = 'June 2025',\n//   submissionDate = '2025-06-24',\n\n//   sgpa,\n\n// }) => {\n\n//   const [subjects, setSubjects] = useState(subjectsData || []);\n//   const [grandTotal, setGrandTotal] = useState(0);\n//   const [totalInWords, setTotalInWords] = useState('');\n\n//   const [department,setDepartment]=useState('');\n//   const [semester, setSemester]=useState('');\n//   const [subjectid,setSubjectid]=useState('')\n// const [year,setYear]=useState('');\n//   useEffect(() => {\n//     const total = subjects.reduce((acc, subj) => {\n//       const theory = Number(subj.theorySecured || 0);\n//       const practical = subj.practicalMax === 'NA' ? 0 : Number(subj.practicalSecured || 0);\n//       return acc + theory + practical;\n//     }, 0);\n//     setGrandTotal(total);\n//     setTotalInWords(toWords(total));\n//   }, [subjects]);\n\n//   const handleFetch = () => {\n//     // Placeholder logic - replace with actual API call\n//     console.log('Fetching data for:', );\n//     // Example: fetch(`/api/student-marks/${rollNumber}`).then(...).then(data => setSubjects(data));\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       {/* Student Details Form */}\n//       <Box sx={{ mb: 3, display: 'flex', flexDirection: 'column', gap: 2 }}>\n//         <TextField \n//           label={idLabel} \n//           value={subjectid} \n//           onChange={(e) => setSubjectid(e.target.value)} \n//           fullWidth\n//         />\n\n//         <TextField \n//           label=\"Department\" \n//           value={department} \n//           onChange={(e) => setDepartment(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Semester\" \n//           value={semester} \n//           onChange={(e) => setSemester(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Year\" \n//           value={year} \n//           onChange={(e) => setYear(e.target.value)} \n//           fullWidth \n//         />\n//         <Button variant=\"outlined\" onClick={handleFetch}>Fetch</Button>\n//       </Box>\n\n//       {/* Student Information Display */}\n//       <Typography><strong>{idLabel}:</strong> {subjectid}</Typography>\n//       <Typography><strong>Name:</strong> {name}</Typography>\n//       <Typography><strong>S/o. / D/o.:</strong> {soName}</Typography>\n//       <Typography><strong>Month & Year of Exam:</strong> {examDate}</Typography>\n\n//       {/* Marks Table */}\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Subject</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Theory</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Practical / Viva</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Total</TableCell>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Result</TableCell>\n//             </TableRow>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell />\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subj, index) => {\n//               const totalSecured = subj.practicalMax === 'NA'\n//                 ? Number(subj.theorySecured || 0)\n//                 : Number(subj.theorySecured || 0) + Number(subj.practicalSecured || 0);\n\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell sx={{ wordBreak: 'break-word' }}>{subj.name}</TableCell>\n//                   <TableCell>{subj.theoryMax}</TableCell>\n//                   <TableCell>{subj.theoryMin}</TableCell>\n//                   <TableCell>{subj.theorySecured || 0}</TableCell>\n//                   <TableCell>{subj.practicalMax}</TableCell>\n//                   <TableCell>{subj.practicalMin}</TableCell>\n//                   <TableCell>{subj.practicalMax === 'NA' ? 'NA' : subj.practicalSecured || 0}</TableCell>\n//                   <TableCell>{subj.totalMax}</TableCell>\n//                   <TableCell>{subj.totalMin}</TableCell>\n//                   <TableCell>{totalSecured}</TableCell>\n//                   <TableCell>{subj.result || '-'}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n//             <TableRow>\n//               <TableCell colSpan={9} align=\"right\"><strong>Grand Total:</strong></TableCell>\n//               <TableCell><strong>{grandTotal}</strong></TableCell>\n//               <TableCell><strong>T.M</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Total in Words and Date */}\n//       <Box sx={{ mt: 3 }}>\n//         <Typography><strong>Aggregate marks (in words):</strong> {totalInWords.toUpperCase()}</Typography>\n//       </Box>\n//       <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n//         <Typography><strong>Dated:</strong> {submissionDate}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentBPT;","map":{"version":3,"names":[],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/BachelorofPhysiotherapyForms/FormComponentBPT.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { \n//   Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button \n// } from '@mui/material';\n// import { toWords } from 'number-to-words';\n\n// const FormComponentBPT = ({\n//   title,\n//   subjectsData,\n//   name = 'John Doe',\n//   soName = 'Richard Doe',\n//   idLabel = 'Roll Number',\n//   examDate = 'June 2025',\n//   submissionDate = '2025-06-24',\n\n\n\n//   sgpa,\n\n\n\n\n// }) => {\n\n\n//   const [subjects, setSubjects] = useState(subjectsData || []);\n//   const [grandTotal, setGrandTotal] = useState(0);\n//   const [totalInWords, setTotalInWords] = useState('');\n\n//   const [department,setDepartment]=useState('');\n//   const [semester, setSemester]=useState('');\n//   const [subjectid,setSubjectid]=useState('')\n// const [year,setYear]=useState('');\n//   useEffect(() => {\n//     const total = subjects.reduce((acc, subj) => {\n//       const theory = Number(subj.theorySecured || 0);\n//       const practical = subj.practicalMax === 'NA' ? 0 : Number(subj.practicalSecured || 0);\n//       return acc + theory + practical;\n//     }, 0);\n//     setGrandTotal(total);\n//     setTotalInWords(toWords(total));\n//   }, [subjects]);\n\n//   const handleFetch = () => {\n//     // Placeholder logic - replace with actual API call\n//     console.log('Fetching data for:', );\n//     // Example: fetch(`/api/student-marks/${rollNumber}`).then(...).then(data => setSubjects(data));\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       {/* Student Details Form */}\n//       <Box sx={{ mb: 3, display: 'flex', flexDirection: 'column', gap: 2 }}>\n//         <TextField \n//           label={idLabel} \n//           value={subjectid} \n//           onChange={(e) => setSubjectid(e.target.value)} \n//           fullWidth\n//         />\n      \n//         <TextField \n//           label=\"Department\" \n//           value={department} \n//           onChange={(e) => setDepartment(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Semester\" \n//           value={semester} \n//           onChange={(e) => setSemester(e.target.value)} \n//           fullWidth \n//         />\n//         <TextField \n//           label=\"Year\" \n//           value={year} \n//           onChange={(e) => setYear(e.target.value)} \n//           fullWidth \n//         />\n//         <Button variant=\"outlined\" onClick={handleFetch}>Fetch</Button>\n//       </Box>\n\n//       {/* Student Information Display */}\n//       <Typography><strong>{idLabel}:</strong> {subjectid}</Typography>\n//       <Typography><strong>Name:</strong> {name}</Typography>\n//       <Typography><strong>S/o. / D/o.:</strong> {soName}</Typography>\n//       <Typography><strong>Month & Year of Exam:</strong> {examDate}</Typography>\n\n//       {/* Marks Table */}\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Subject</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Theory</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Practical / Viva</TableCell>\n//               <TableCell align=\"center\" colSpan={3} sx={{ fontWeight: 'bold' }}>Total</TableCell>\n//               <TableCell sx={{ fontWeight: 'bold' }}>Result</TableCell>\n//             </TableRow>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell />\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Min</TableCell>\n//               <TableCell>Sec</TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subj, index) => {\n//               const totalSecured = subj.practicalMax === 'NA'\n//                 ? Number(subj.theorySecured || 0)\n//                 : Number(subj.theorySecured || 0) + Number(subj.practicalSecured || 0);\n\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell sx={{ wordBreak: 'break-word' }}>{subj.name}</TableCell>\n//                   <TableCell>{subj.theoryMax}</TableCell>\n//                   <TableCell>{subj.theoryMin}</TableCell>\n//                   <TableCell>{subj.theorySecured || 0}</TableCell>\n//                   <TableCell>{subj.practicalMax}</TableCell>\n//                   <TableCell>{subj.practicalMin}</TableCell>\n//                   <TableCell>{subj.practicalMax === 'NA' ? 'NA' : subj.practicalSecured || 0}</TableCell>\n//                   <TableCell>{subj.totalMax}</TableCell>\n//                   <TableCell>{subj.totalMin}</TableCell>\n//                   <TableCell>{totalSecured}</TableCell>\n//                   <TableCell>{subj.result || '-'}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n//             <TableRow>\n//               <TableCell colSpan={9} align=\"right\"><strong>Grand Total:</strong></TableCell>\n//               <TableCell><strong>{grandTotal}</strong></TableCell>\n//               <TableCell><strong>T.M</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Total in Words and Date */}\n//       <Box sx={{ mt: 3 }}>\n//         <Typography><strong>Aggregate marks (in words):</strong> {totalInWords.toUpperCase()}</Typography>\n//       </Box>\n//       <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\n//         <Typography><strong>Dated:</strong> {submissionDate}</Typography>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentBPT;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAKA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}