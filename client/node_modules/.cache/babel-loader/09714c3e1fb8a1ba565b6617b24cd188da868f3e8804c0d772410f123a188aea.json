{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationPdfReport.js\",\n  _s = $RefreshSig$();\n// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n\n//     </Box>\n\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n\n// const FamilyDetailsForm = () => {\n//   const [familyDetails, setFamilyDetails] = useState([\n//     { relation: 'Father', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Mother', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Spouse', name: '', age: '', occupation: '', income: '' }\n//   ]);\n\n//   const fields = [\n//     { name: 'name', label: 'Name' },\n//     { name: 'age', label: 'Age (in years)' },\n//     { name: 'occupation', label: 'Occupation' },\n//     { name: 'income', label: 'Gross Monthly Income (Rs.)' }\n//   ];\n\n//   const handleFamilyChange = (index, field, value) => {\n//     const updated = [...familyDetails];\n//     updated[index][field] = value;\n//     setFamilyDetails(updated);\n//   };\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         Details of Parents / Spouse\n//       </Typography>\n\n//       {familyDetails.map((person, index) => (\n//         <Box key={index} sx={{ mb: 3 }}>\n//           <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n//             {person.relation}\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//             {fields.map(({ name, label }) => (\n//               <TextField\n//                 key={name}\n//                 label={`${person.relation} ${label}`}\n//                 value={person[name]}\n//                 onChange={(e) => handleFamilyChange(index, name, e.target.value)}\n//                 size=\"small\"\n//                 sx={{ flex: 1 }}\n//               />\n//             ))}\n//           </Box>\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default FamilyDetailsForm;\n\n// import React, { useState } from 'react';\n\n// const AcademicRecordForm = () => {\n//   const [courseSubjects, setCourseSubjects] = useState([\n//     {\n//       course_name: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       subject_code: '',\n//       subject_name: '',\n//       paper_code: '',\n//       exam_code: '',\n//       max_marks: ''\n//     }\n//   ]);\n\n//   const [studentRecords, setStudentRecords] = useState([\n//     {\n//       applicant_code: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       exam_code: '',\n//       subject_code: '',\n//       paper_code: '',\n//       marks_obtained: ''\n//     }\n//   ]);\n\n//   // --- Handlers for E.1: Course Subject Master ---\n//   const handleSubjectChange = (index, field, value) => {\n//     const updated = [...courseSubjects];\n//     updated[index][field] = value;\n//     setCourseSubjects(updated);\n//   };\n\n//   const addSubjectRow = () => {\n//     setCourseSubjects([\n//       ...courseSubjects,\n//       {\n//         course_name: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         subject_code: '',\n//         subject_name: '',\n//         paper_code: '',\n//         exam_code: '',\n//         max_marks: ''\n//       }\n//     ]);\n//   };\n\n//   // --- Handlers for E.2: Student Marks Obtained ---\n//   const handleRecordChange = (index, field, value) => {\n//     const updated = [...studentRecords];\n//     updated[index][field] = value;\n//     setStudentRecords(updated);\n//   };\n\n//   const addRecordRow = () => {\n//     setStudentRecords([\n//       ...studentRecords,\n//       {\n//         applicant_code: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         exam_code: '',\n//         subject_code: '',\n//         paper_code: '',\n//         marks_obtained: ''\n//       }\n//     ]);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('E.1 Course Subjects:', courseSubjects);\n//     console.log('E.2 Student Records:', studentRecords);\n//     alert('Data captured in console!');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"p-4 max-w-5xl mx-auto space-y-8 bg-white shadow rounded\">\n//       <h2 className=\"text-xl font-bold\">E.1 - Course Subject Master Details</h2>\n//       {courseSubjects.map((subject, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code (MidTerm/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Max Marks\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addSubjectRow} className=\"bg-blue-500 text-white px-4 py-2 rounded\">+ Add Subject</button>\n\n//       <h2 className=\"text-xl font-bold pt-8\">E.2 - Student Academic Records</h2>\n//       {studentRecords.map((record, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Marks Obtained\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addRecordRow} className=\"bg-green-500 text-white px-4 py-2 rounded\">+ Add Record</button>\n\n//       <div className=\"pt-6\">\n//         <button type=\"submit\" className=\"bg-indigo-600 text-white px-6 py-2 rounded\">Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default AcademicRecordForm;\n\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AcademicRecordForm = () => {\n  _s();\n  const [courseSubjects, setCourseSubjects] = useState([{\n    course_name: '',\n    course_code: '',\n    year: '',\n    semester: '',\n    subject_code: '',\n    subject_name: '',\n    paper_code: '',\n    exam_code: '',\n    max_marks: ''\n  }]);\n  const [studentRecords, setStudentRecords] = useState([{\n    applicant_code: '',\n    course_code: '',\n    year: '',\n    semester: '',\n    exam_code: '',\n    subject_code: '',\n    paper_code: '',\n    marks_obtained: ''\n  }]);\n  const [eapcetData, setEapcetData] = useState({\n    registrationNumber: '',\n    hallTicketNumber: '',\n    rank: ''\n  });\n  // Handlers for Course Subjects\n  const handleSubjectChange = (index, field, value) => {\n    const updated = [...courseSubjects];\n    updated[index][field] = value;\n    setCourseSubjects(updated);\n  };\n  const addSubjectRow = () => {\n    setCourseSubjects([...courseSubjects, {\n      course_name: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      subject_code: '',\n      subject_name: '',\n      paper_code: '',\n      exam_code: '',\n      max_marks: ''\n    }]);\n  };\n\n  // Handlers for Student Records\n  const handleRecordChange = (index, field, value) => {\n    const updated = [...studentRecords];\n    updated[index][field] = value;\n    setStudentRecords(updated);\n  };\n  const addRecordRow = () => {\n    setStudentRecords([...studentRecords, {\n      applicant_code: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      exam_code: '',\n      subject_code: '',\n      paper_code: '',\n      marks_obtained: ''\n    }]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('E.1 Course Subjects:', courseSubjects);\n    console.log('E.2 Student Records:', studentRecords);\n    alert('Data captured in console!');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4,\n      border: '1px solid #ccc',\n      borderRadius: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 3,\n            my: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"TG EAPCET Registration Number\",\n            value: eapcetData.registrationNumber,\n            onChange: e => setEapcetData({\n              ...eapcetData,\n              registrationNumber: e.target.value\n            }),\n            size: \"small\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"TG EAPCET Hall Ticket Number\",\n            value: eapcetData.hallTicketNumber,\n            onChange: e => setEapcetData({\n              ...eapcetData,\n              hallTicketNumber: e.target.value\n            }),\n            size: \"small\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"TG EAPCET Rank\",\n            value: eapcetData.rank,\n            onChange: e => setEapcetData({\n              ...eapcetData,\n              rank: e.target.value\n            }),\n            size: \"small\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this), \"E.1 - Course Subject Master Details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), courseSubjects.map((subject, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 2,\n          mb: 3,\n          border: '1px solid #ccc',\n          borderRadius: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Course Name\",\n          value: subject.course_name,\n          onChange: e => handleSubjectChange(index, 'course_name', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Course Code\",\n          value: subject.course_code,\n          onChange: e => handleSubjectChange(index, 'course_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Year\",\n          type: \"number\",\n          value: subject.year,\n          onChange: e => handleSubjectChange(index, 'year', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Semester (I/II)\",\n          value: subject.semester,\n          onChange: e => handleSubjectChange(index, 'semester', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Subject Code\",\n          value: subject.subject_code,\n          onChange: e => handleSubjectChange(index, 'subject_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Subject Name\",\n          value: subject.subject_name,\n          onChange: e => handleSubjectChange(index, 'subject_name', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Paper Code (Theory/Practical)\",\n          value: subject.paper_code,\n          onChange: e => handleSubjectChange(index, 'paper_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Exam Code (Mid/End)\",\n          value: subject.exam_code,\n          onChange: e => handleSubjectChange(index, 'exam_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Max Marks\",\n          type: \"number\",\n          value: subject.max_marks,\n          onChange: e => handleSubjectChange(index, 'max_marks', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: addSubjectRow,\n        sx: {\n          mb: 4\n        },\n        children: \"+ Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"E.2 - Student Academic Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), studentRecords.map((record, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 2,\n          mb: 3,\n          border: '1px solid #ccc',\n          borderRadius: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Applicant Code\",\n          value: record.applicant_code,\n          onChange: e => handleRecordChange(index, 'applicant_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Course Code\",\n          value: record.course_code,\n          onChange: e => handleRecordChange(index, 'course_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Year\",\n          type: \"number\",\n          value: record.year,\n          onChange: e => handleRecordChange(index, 'year', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Semester\",\n          value: record.semester,\n          onChange: e => handleRecordChange(index, 'semester', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Exam Code\",\n          value: record.exam_code,\n          onChange: e => handleRecordChange(index, 'exam_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Subject Code\",\n          value: record.subject_code,\n          onChange: e => handleRecordChange(index, 'subject_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Paper Code\",\n          value: record.paper_code,\n          onChange: e => handleRecordChange(index, 'paper_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Marks Obtained\",\n          type: \"number\",\n          value: record.marks_obtained,\n          onChange: e => handleRecordChange(index, 'marks_obtained', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: addRecordRow,\n        sx: {\n          mb: 4\n        },\n        children: \"+ Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 2\n  }, this);\n};\n_s(AcademicRecordForm, \"jag2RE4t0QWQWVm6jD42tIqCsPQ=\");\n_c = AcademicRecordForm;\nexport default AcademicRecordForm;\nvar _c;\n$RefreshReg$(_c, \"AcademicRecordForm\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","Button","jsxDEV","_jsxDEV","AcademicRecordForm","_s","courseSubjects","setCourseSubjects","course_name","course_code","year","semester","subject_code","subject_name","paper_code","exam_code","max_marks","studentRecords","setStudentRecords","applicant_code","marks_obtained","eapcetData","setEapcetData","registrationNumber","hallTicketNumber","rank","handleSubjectChange","index","field","value","updated","addSubjectRow","handleRecordChange","addRecordRow","handleSubmit","e","preventDefault","console","log","alert","sx","p","border","borderRadius","children","onSubmit","variant","gutterBottom","display","flexWrap","gap","my","label","onChange","target","size","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","subject","mb","type","onClick","record","textAlign","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationPdfReport.js"],"sourcesContent":["// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n      \n//     </Box>\n\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n\n// const FamilyDetailsForm = () => {\n//   const [familyDetails, setFamilyDetails] = useState([\n//     { relation: 'Father', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Mother', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Spouse', name: '', age: '', occupation: '', income: '' }\n//   ]);\n\n//   const fields = [\n//     { name: 'name', label: 'Name' },\n//     { name: 'age', label: 'Age (in years)' },\n//     { name: 'occupation', label: 'Occupation' },\n//     { name: 'income', label: 'Gross Monthly Income (Rs.)' }\n//   ];\n\n//   const handleFamilyChange = (index, field, value) => {\n//     const updated = [...familyDetails];\n//     updated[index][field] = value;\n//     setFamilyDetails(updated);\n//   };\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         Details of Parents / Spouse\n//       </Typography>\n\n//       {familyDetails.map((person, index) => (\n//         <Box key={index} sx={{ mb: 3 }}>\n//           <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n//             {person.relation}\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//             {fields.map(({ name, label }) => (\n//               <TextField\n//                 key={name}\n//                 label={`${person.relation} ${label}`}\n//                 value={person[name]}\n//                 onChange={(e) => handleFamilyChange(index, name, e.target.value)}\n//                 size=\"small\"\n//                 sx={{ flex: 1 }}\n//               />\n//             ))}\n//           </Box>\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default FamilyDetailsForm;\n\n\n// import React, { useState } from 'react';\n\n// const AcademicRecordForm = () => {\n//   const [courseSubjects, setCourseSubjects] = useState([\n//     {\n//       course_name: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       subject_code: '',\n//       subject_name: '',\n//       paper_code: '',\n//       exam_code: '',\n//       max_marks: ''\n//     }\n//   ]);\n\n//   const [studentRecords, setStudentRecords] = useState([\n//     {\n//       applicant_code: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       exam_code: '',\n//       subject_code: '',\n//       paper_code: '',\n//       marks_obtained: ''\n//     }\n//   ]);\n\n//   // --- Handlers for E.1: Course Subject Master ---\n//   const handleSubjectChange = (index, field, value) => {\n//     const updated = [...courseSubjects];\n//     updated[index][field] = value;\n//     setCourseSubjects(updated);\n//   };\n\n//   const addSubjectRow = () => {\n//     setCourseSubjects([\n//       ...courseSubjects,\n//       {\n//         course_name: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         subject_code: '',\n//         subject_name: '',\n//         paper_code: '',\n//         exam_code: '',\n//         max_marks: ''\n//       }\n//     ]);\n//   };\n\n//   // --- Handlers for E.2: Student Marks Obtained ---\n//   const handleRecordChange = (index, field, value) => {\n//     const updated = [...studentRecords];\n//     updated[index][field] = value;\n//     setStudentRecords(updated);\n//   };\n\n//   const addRecordRow = () => {\n//     setStudentRecords([\n//       ...studentRecords,\n//       {\n//         applicant_code: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         exam_code: '',\n//         subject_code: '',\n//         paper_code: '',\n//         marks_obtained: ''\n//       }\n//     ]);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('E.1 Course Subjects:', courseSubjects);\n//     console.log('E.2 Student Records:', studentRecords);\n//     alert('Data captured in console!');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"p-4 max-w-5xl mx-auto space-y-8 bg-white shadow rounded\">\n//       <h2 className=\"text-xl font-bold\">E.1 - Course Subject Master Details</h2>\n//       {courseSubjects.map((subject, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code (MidTerm/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Max Marks\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addSubjectRow} className=\"bg-blue-500 text-white px-4 py-2 rounded\">+ Add Subject</button>\n\n//       <h2 className=\"text-xl font-bold pt-8\">E.2 - Student Academic Records</h2>\n//       {studentRecords.map((record, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Marks Obtained\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addRecordRow} className=\"bg-green-500 text-white px-4 py-2 rounded\">+ Add Record</button>\n\n//       <div className=\"pt-6\">\n//         <button type=\"submit\" className=\"bg-indigo-600 text-white px-6 py-2 rounded\">Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default AcademicRecordForm;\n\n\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, Button } from '@mui/material';\n\nconst AcademicRecordForm = () => {\n  const [courseSubjects, setCourseSubjects] = useState([\n    {\n      course_name: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      subject_code: '',\n      subject_name: '',\n      paper_code: '',\n      exam_code: '',\n      max_marks: ''\n    }\n  ]);\n\n  const [studentRecords, setStudentRecords] = useState([\n    {\n      applicant_code: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      exam_code: '',\n      subject_code: '',\n      paper_code: '',\n      marks_obtained: ''\n    }\n  ]);\n  const [eapcetData, setEapcetData] = useState({\n    registrationNumber: '',\n    hallTicketNumber: '',\n    rank: ''\n  });\n  // Handlers for Course Subjects\n  const handleSubjectChange = (index, field, value) => {\n    const updated = [...courseSubjects];\n    updated[index][field] = value;\n    setCourseSubjects(updated);\n  };\n\n  const addSubjectRow = () => {\n    setCourseSubjects([\n      ...courseSubjects,\n      {\n        course_name: '',\n        course_code: '',\n        year: '',\n        semester: '',\n        subject_code: '',\n        subject_name: '',\n        paper_code: '',\n        exam_code: '',\n        max_marks: ''\n      }\n    ]);\n  };\n\n  // Handlers for Student Records\n  const handleRecordChange = (index, field, value) => {\n    const updated = [...studentRecords];\n    updated[index][field] = value;\n    setStudentRecords(updated);\n  };\n\n  const addRecordRow = () => {\n    setStudentRecords([\n      ...studentRecords,\n      {\n        applicant_code: '',\n        course_code: '',\n        year: '',\n        semester: '',\n        exam_code: '',\n        subject_code: '',\n        paper_code: '',\n        marks_obtained: ''\n      }\n    ]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('E.1 Course Subjects:', courseSubjects);\n    console.log('E.2 Student Records:', studentRecords);\n    alert('Data captured in console!');\n  };\n\n  return (\n <Box sx={{ p: 4, border: '1px solid #ccc', borderRadius: 2 }}>\n      <form onSubmit={handleSubmit}>\n        {/* E.1 Section */}\n        <Typography variant=\"h6\" gutterBottom>\n\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, my: 3 }}>\n            <TextField\n              label=\"TG EAPCET Registration Number\"\n              value={eapcetData.registrationNumber}\n              onChange={(e) => setEapcetData({ ...eapcetData, registrationNumber: e.target.value })}\n              size=\"small\"\n              fullWidth\n            />\n            <TextField\n              label=\"TG EAPCET Hall Ticket Number\"\n              value={eapcetData.hallTicketNumber}\n              onChange={(e) => setEapcetData({ ...eapcetData, hallTicketNumber: e.target.value })}\n              size=\"small\"\n              fullWidth\n            />\n            <TextField\n              label=\"TG EAPCET Rank\"\n              value={eapcetData.rank}\n              onChange={(e) => setEapcetData({ ...eapcetData, rank: e.target.value })}\n              size=\"small\"\n              fullWidth\n            />\n          </Box>\n          E.1 - Course Subject Master Details\n        </Typography>\n        {courseSubjects.map((subject, index) => (\n          <Box key={index} sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3, border: '1px solid #ccc', borderRadius: 2, p: 2 }}>\n            <TextField label=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} size=\"small\" />\n            <TextField label=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Year\" type=\"number\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} size=\"small\" />\n            <TextField label=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} size=\"small\" />\n            <TextField label=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} size=\"small\" />\n            <TextField label=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Exam Code (Mid/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Max Marks\" type=\"number\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} size=\"small\" />\n          </Box>\n        ))}\n        <Button variant=\"outlined\" onClick={addSubjectRow} sx={{ mb: 4 }}>\n          + Add Subject\n        </Button>\n\n        {/* E.2 Section */}\n        <Typography variant=\"h6\" gutterBottom>\n          E.2 - Student Academic Records\n        </Typography>\n        {studentRecords.map((record, index) => (\n          <Box key={index} sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3, border: '1px solid #ccc', borderRadius: 2, p: 2 }}>\n            <TextField label=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Year\" type=\"number\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} size=\"small\" />\n            <TextField label=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} size=\"small\" />\n            <TextField label=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Marks Obtained\" type=\"number\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} size=\"small\" />\n          </Box>\n        ))}\n        <Button variant=\"outlined\" onClick={addRecordRow} sx={{ mb: 4 }}>\n          + Add Record\n        </Button>\n\n        {/* Submit Button */}\n        <Box sx={{ textAlign: 'right' }}>\n          <Button type=\"submit\" variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default AcademicRecordForm;\n"],"mappings":";;AAAA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}