{"ast":null,"code":"// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData }) => {\n//   const [name, setName] = React.useState('');\n//   const [rollNumber, setRollNumber] = React.useState('');\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Roll Number\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={rollNumber}\n//         onChange={(e) => setRollNumber(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#e0e0e0' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;\n\n// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData, idLabel = 'Roll Number' }) => {\n//   const [name, setName] = React.useState('');\n//   const [idValue, setIdValue] = React.useState(''); // Single dynamic identifier\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n\n//       <TextField\n//         label={idLabel}\n//         fullWidth\n//         margin=\"normal\"\n//         value={idValue}\n//         onChange={(e) => setIdValue(e.target.value)}\n//       />\n\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;","map":{"version":3,"names":[],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/components/FormComponent2.js"],"sourcesContent":["// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData }) => {\n//   const [name, setName] = React.useState('');\n//   const [rollNumber, setRollNumber] = React.useState('');\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Roll Number\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={rollNumber}\n//         onChange={(e) => setRollNumber(e.target.value)}\n//       />\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#e0e0e0' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;\n\n\n// import React from 'react';\n// import {\n//   Box, Typography, Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Paper, TextField\n// } from '@mui/material';\n\n// const FormComponent2 = ({ title, subjectsData, idLabel = 'Roll Number' }) => {\n//   const [name, setName] = React.useState('');\n//   const [idValue, setIdValue] = React.useState(''); // Single dynamic identifier\n//   const [dob, setDob] = React.useState('');\n//   const [subjects, setSubjects] = React.useState(subjectsData);\n\n//   const handleMarksChange = (index, value) => {\n//     const updated = [...subjects];\n//     const numericValue = Number(value);\n//     updated[index].secured = value;\n\n//     if (value === '') {\n//       updated[index].result = '';\n//     } else {\n//       updated[index].result =\n//         numericValue >= updated[index].minMarks ? 'PASS' : 'FAIL';\n//     }\n\n//     setSubjects(updated);\n//   };\n\n//   const totalMaxMarks = subjects.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjects.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjects.reduce((sum, s) => {\n//     const secured = Number(s.secured);\n//     return sum + (isNaN(secured) ? 0 : secured);\n//   }, 0);\n\n//   return (\n//     <Box sx={{ p: 3, maxWidth: 800, margin: '0 auto' }}>\n//       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n//       <TextField\n//         label=\"Name\"\n//         fullWidth\n//         margin=\"normal\"\n//         value={name}\n//         onChange={(e) => setName(e.target.value)}\n//       />\n      \n//       <TextField\n//         label={idLabel}\n//         fullWidth\n//         margin=\"normal\"\n//         value={idValue}\n//         onChange={(e) => setIdValue(e.target.value)}\n//       />\n\n//       <TextField\n//         label=\"Date of Birth\"\n//         type=\"date\"\n//         fullWidth\n//         margin=\"normal\"\n//         InputLabelProps={{ shrink: true }}\n//         value={dob}\n//         onChange={(e) => setDob(e.target.value)}\n//       />\n\n//       <TableContainer component={Paper} sx={{ mt: 3 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell>Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjects.map((subject, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{subject.name}</TableCell>\n//                 <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                 <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                 <TableCell align=\"right\">\n//                   <TextField\n//                     type=\"number\"\n//                     size=\"small\"\n//                     value={subject.secured}\n//                     onChange={(e) => handleMarksChange(index, e.target.value)}\n//                     sx={{ width: 80 }}\n//                     inputProps={{ max: subject.maxMarks, min: 0 }}\n//                   />\n//                 </TableCell>\n//                 <TableCell>{subject.result}</TableCell>\n//               </TableRow>\n//             ))}\n//             <TableRow sx={{ backgroundColor: '#0a228a;' }}>\n//               <TableCell><strong>Grand Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell />\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponent2;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}