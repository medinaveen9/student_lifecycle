{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/Application1.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     {subject :'Total Marks obtained in Intermediate/EquivalentExamination ', total:'', totalMax:'' },\n//     {subject: 'total  percentage'}\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={'92.8'}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//       disabled\n//     />\n//   </TableCell>\n// </TableRow>\n//               </TableRow>\n\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// // export default Application1;\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' }\n//   ]);\n\n//   const [totalMarks, setTotalMarks] = useState({ obtained: '', max: '' });\n// const [totalPercentage, setTotalPercentage] = useState('');\n// const [groupMarks, setGroupMarks] = useState({ obtained: '', max: '' });\n// const [groupPercentage, setGroupPercentage] = useState('');\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {/* Render input fields for each subject */}\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n\n//             {/* Total Marks Row */}\n//            {/* Total Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Intermediate/Equivalent Examination</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.obtained}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.max}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Total Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={totalPercentage}\n//       onChange={(e) => setTotalPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Group</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.obtained}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.max}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage in Group</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={groupPercentage}\n//       onChange={(e) => setGroupPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n//2//\n\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [educationData, setEducationData] = useState([\n//     { className: 'Inter 2nd Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: 'Inter 1st Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '10th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '9th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '8th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '7th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '6th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' }\n//   ]);\n//   const [eapcetData, setEapcetData] = useState({\n//     registrationNumber: '',\n//     hallTicketNumber: '',\n//     rank: ''\n//   });\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...educationData];\n//     updated[index][field] = value;\n//     setEducationData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Educational Details</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Class</TableCell>\n//               <TableCell>Year of Study</TableCell>\n//               <TableCell>Name of School / College</TableCell>\n//               <TableCell>Place</TableCell>\n//               <TableCell>State</TableCell>\n//               <TableCell>District</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {educationData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.className || '-'}</TableCell>\n\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.yearOfStudy}\n//                     onChange={(e) => handleChange(index, 'yearOfStudy', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.schoolName}\n//                     onChange={(e) => handleChange(index, 'schoolName', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.place}\n//                     onChange={(e) => handleChange(index, 'place', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.state}\n//                     onChange={(e) => handleChange(index, 'state', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.district}\n//                     onChange={(e) => handleChange(index, 'district', e.target.value)}\n//                   />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, my: 3 }}>\n//   <TextField\n//     label=\"TG EAPCET Registration Number\"\n//     value={eapcetData.registrationNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, registrationNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Hall Ticket Number\"\n//     value={eapcetData.hallTicketNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, hallTicketNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Rank\"\n//     value={eapcetData.rank}\n//     onChange={(e) => setEapcetData({ ...eapcetData, rank: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n// </Box>\n\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n//                    3           \n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box\n// } from '@mui/material';\n\n// const AddressForm = () => {\n//   const [formData, setFormData] = useState({\n//     correspondence: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     permanent: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     otherInfo: ''\n//   });\n\n//   const handleChange = (section, field, value) => {\n//     setFormData((prev) => ({\n//       ...prev,\n//       [section]: {\n//         ...prev[section],\n//         [field]: value\n//       }\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Correspondence Address */}\n//       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.correspondence.address} onChange={(e) => handleChange('correspondence', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.correspondence.country} onChange={(e) => handleChange('correspondence', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.correspondence.state} onChange={(e) => handleChange('correspondence', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.correspondence.district} onChange={(e) => handleChange('correspondence', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.correspondence.pinCode} onChange={(e) => handleChange('correspondence', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.correspondence.mobile} onChange={(e) => handleChange('correspondence', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.correspondence.email} onChange={(e) => handleChange('correspondence', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Permanent Address */}\n//       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.permanent.address} onChange={(e) => handleChange('permanent', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.permanent.country} onChange={(e) => handleChange('permanent', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.permanent.state} onChange={(e) => handleChange('permanent', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.permanent.district} onChange={(e) => handleChange('permanent', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.permanent.pinCode} onChange={(e) => handleChange('permanent', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.permanent.mobile} onChange={(e) => handleChange('permanent', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.permanent.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Other Info */}\n//       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n//       <TextField\n//         label=\"Any Other Relevant Information\"\n//         multiline\n//         rows={3}\n//         value={formData.otherInfo}\n//         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n//         size=\"small\"\n//         sx={{ width: '100%' }}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default AddressForm;\n\n///////444\n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const PaymentAndDocsSection = () => {\n//   const documents = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EAPCET-2025 RANK CARD'\n//   ];\n\n//   const [paymentData, setPaymentData] = useState({\n//     paymentType: 'Online Payment',\n//     transactionId: '136189873101',\n//     date: '2025-06-09',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '2500',\n//     remarks: 'Online Payment'\n//   });\n\n//   const [uploadedDocs, setUploadedDocs] = useState({});\n\n//   const handleFileChange = (index, file) => {\n//     setUploadedDocs(prev => ({\n//       ...prev,\n//       [index]: file\n//     }));\n//   };\n\n//   const handlePaymentChange = (field, value) => {\n//     setPaymentData(prev => ({\n//       ...prev,\n//       [field]: value\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 12, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Payment Details */}\n//       <Typography variant=\"h6\" gutterBottom>Payment Details</Typography>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Payment Type\"\n//           value={paymentData.paymentType}\n//           onChange={(e) => handlePaymentChange('paymentType', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Transaction ID\"\n//           value={paymentData.transactionId}\n//           onChange={(e) => handlePaymentChange('transactionId', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Date\"\n//           type=\"date\"\n//           value={paymentData.date}\n//           onChange={(e) => handlePaymentChange('date', e.target.value)}\n//           InputLabelProps={{ shrink: true }}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Name of Bank\"\n//           value={paymentData.bankName}\n//           onChange={(e) => handlePaymentChange('bankName', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Branch Details\"\n//           value={paymentData.branchDetails}\n//           onChange={(e) => handlePaymentChange('branchDetails', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Amount (Rs.)\"\n//           value={paymentData.amount}\n//           onChange={(e) => handlePaymentChange('amount', e.target.value)}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <TextField\n//         label=\"Remarks, If Any\"\n//         value={paymentData.remarks}\n//         onChange={(e) => handlePaymentChange('remarks', e.target.value)}\n//         size=\"small\"\n//         sx={{ mb: 3 }}\n//       />\n\n//       {/* Document Uploads */}\n//       <Typography variant=\"h6\" gutterBottom>Document Uploads</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No.</TableCell>\n//               <TableCell>Document Type</TableCell>\n//               <TableCell>Upload File</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {documents.map((doc, idx) => (\n//               <TableRow key={idx}>\n//                 <TableCell>{idx + 1}</TableCell>\n//                 <TableCell>{doc}</TableCell>\n//                 <TableCell>\n//                   <input\n//                     type=\"file\"\n//                     accept=\".pdf,.jpg,.png\"\n//                     onChange={(e) => handleFileChange(idx, e.target.files[0])}\n//                   />\n//                   {uploadedDocs[idx] && (\n//                     <Typography variant=\"caption\" color=\"primary\">\n//                       {uploadedDocs[idx].name}\n//                     </Typography>\n//                   )}\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default PaymentAndDocsSection;\n\n///////////5 55555555\n\nimport React, { useState } from 'react';\nimport { Typography, TextField, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdvertisementDetails = () => {\n  _s();\n  const [adDetails, setAdDetails] = useState({\n    adNo: '',\n    adDate: '',\n    applicationNo: '',\n    courseCode: '',\n    courseName: '',\n    dateOfEntry: '',\n    lastDate: '',\n    department: '',\n    name: '',\n    fatherName: '',\n    dob: '',\n    age: '',\n    placeOfBirth: '',\n    socialStatus: '',\n    nationality: '',\n    maritalStatus: '',\n    gender: '',\n    differentlyAbled: '',\n    idMark1: '',\n    idMark2: '',\n    universityArea: '',\n    inService: '',\n    aadhar: '',\n    fatherEmail: ''\n  });\n  const [familyDetails, setFamilyDetails] = useState([{\n    relation: '',\n    name: '',\n    age: '',\n    occupation: '',\n    income: ''\n  }, {\n    relation: '',\n    name: '',\n    age: '',\n    occupation: '',\n    income: ''\n  }]);\n  const handleAdDetailsChange = (field, value) => {\n    setAdDetails(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleFamilyChange = (index, field, value) => {\n    const updated = [...familyDetails];\n    updated[index][field] = value;\n    setFamilyDetails(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 6,\n      border: '1px solid #ccc',\n      borderRadius: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Advertisement Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Ad. No.\",\n        value: adDetails.adNo,\n        onChange: e => handleAdDetailsChange('adNo', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Ad. Date\",\n        type: \"date\",\n        value: adDetails.adDate,\n        onChange: e => handleAdDetailsChange('adDate', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Application No.\",\n        value: adDetails.applicationNo,\n        onChange: e => handleAdDetailsChange('applicationNo', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Course Code\",\n        value: adDetails.courseCode,\n        onChange: e => handleAdDetailsChange('courseCode', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Course Name\",\n        value: adDetails.courseName,\n        onChange: e => handleAdDetailsChange('courseName', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Date of Entry\",\n        type: \"datetime-local\",\n        value: adDetails.dateOfEntry,\n        onChange: e => handleAdDetailsChange('dateOfEntry', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Last Date of Receiving Application\",\n        type: \"date\",\n        value: adDetails.lastDate,\n        onChange: e => handleAdDetailsChange('lastDate', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Department\",\n        value: adDetails.department,\n        onChange: e => handleAdDetailsChange('department', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Applicant's Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Name\",\n        value: adDetails.name,\n        onChange: e => handleAdDetailsChange('name', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Father's Name\",\n        value: adDetails.fatherName,\n        onChange: e => handleAdDetailsChange('fatherName', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Date of Birth\",\n        type: \"date\",\n        value: adDetails.dob,\n        onChange: e => handleAdDetailsChange('dob', e.target.value),\n        size: \"small\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Age (as on last date)\",\n        value: adDetails.age,\n        onChange: e => handleAdDetailsChange('age', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Place of Birth\",\n        value: adDetails.placeOfBirth,\n        onChange: e => handleAdDetailsChange('placeOfBirth', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Social Status\",\n        value: adDetails.socialStatus,\n        onChange: e => handleAdDetailsChange('socialStatus', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Nationality\",\n        value: adDetails.nationality,\n        onChange: e => handleAdDetailsChange('nationality', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Marital Status\",\n        value: adDetails.maritalStatus,\n        onChange: e => handleAdDetailsChange('maritalStatus', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Gender\",\n        value: adDetails.gender,\n        onChange: e => handleAdDetailsChange('gender', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Differently Abled\",\n        value: adDetails.differentlyAbled,\n        onChange: e => handleAdDetailsChange('differentlyAbled', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Identification Mark 1\",\n        value: adDetails.idMark1,\n        onChange: e => handleAdDetailsChange('idMark1', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Identification Mark 2\",\n        value: adDetails.idMark2,\n        onChange: e => handleAdDetailsChange('idMark2', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"University Area\",\n        value: adDetails.universityArea,\n        onChange: e => handleAdDetailsChange('universityArea', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"In-service (Govt.)\",\n        value: adDetails.inService,\n        onChange: e => handleAdDetailsChange('inService', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Aadhar Number\",\n        value: adDetails.aadhar,\n        onChange: e => handleAdDetailsChange('aadhar', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Father's Email\",\n        value: adDetails.fatherEmail,\n        onChange: e => handleAdDetailsChange('fatherEmail', e.target.value),\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 4,\n        border: '1px solid #ccc',\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Details of Parents / Spouse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 9\n      }, this), familyDetails.map((person, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            mb: 1\n          },\n          children: person.relation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            value: person.name,\n            onChange: e => handleFamilyChange(index, 'name', e.target.value),\n            size: \"small\",\n            sx: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Age (in years)\",\n            value: person.age,\n            onChange: e => handleFamilyChange(index, 'age', e.target.value),\n            size: \"small\",\n            sx: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Occupation\",\n            value: person.occupation,\n            onChange: e => handleFamilyChange(index, 'occupation', e.target.value),\n            size: \"small\",\n            sx: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Gross Monthly Income (Rs.)\",\n            value: person.income,\n            onChange: e => handleFamilyChange(index, 'income', e.target.value),\n            size: \"small\",\n            sx: {\n              flex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 698,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvertisementDetails, \"Iirswib6Hohj0VZh4Bi3ffSbOf8=\");\n_c = AdvertisementDetails;\nexport default AdvertisementDetails;\nvar _c;\n$RefreshReg$(_c, \"AdvertisementDetails\");","map":{"version":3,"names":["React","useState","Typography","TextField","Box","jsxDEV","_jsxDEV","AdvertisementDetails","_s","adDetails","setAdDetails","adNo","adDate","applicationNo","courseCode","courseName","dateOfEntry","lastDate","department","name","fatherName","dob","age","placeOfBirth","socialStatus","nationality","maritalStatus","gender","differentlyAbled","idMark1","idMark2","universityArea","inService","aadhar","fatherEmail","familyDetails","setFamilyDetails","relation","occupation","income","handleAdDetailsChange","field","value","prev","handleFamilyChange","index","updated","sx","p","border","borderRadius","children","mb","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","label","onChange","e","target","size","type","InputLabelProps","shrink","map","person","display","flexWrap","gap","flex","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/Application1.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     {subject :'Total Marks obtained in Intermediate/EquivalentExamination ', total:'', totalMax:'' },\n//     {subject: 'total  percentage'}\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={'92.8'}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//       disabled\n//     />\n//   </TableCell>\n// </TableRow>\n//               </TableRow>\n\n\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// // export default Application1;\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' }\n//   ]);\n\n//   const [totalMarks, setTotalMarks] = useState({ obtained: '', max: '' });\n// const [totalPercentage, setTotalPercentage] = useState('');\n// const [groupMarks, setGroupMarks] = useState({ obtained: '', max: '' });\n// const [groupPercentage, setGroupPercentage] = useState('');\n\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {/* Render input fields for each subject */}\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n\n//             {/* Total Marks Row */}\n//            {/* Total Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Intermediate/Equivalent Examination</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.obtained}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.max}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Total Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={totalPercentage}\n//       onChange={(e) => setTotalPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Group</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.obtained}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.max}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage in Group</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={groupPercentage}\n//       onChange={(e) => setGroupPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n                                //2//\n\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [educationData, setEducationData] = useState([\n//     { className: 'Inter 2nd Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: 'Inter 1st Year', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '10th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '9th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '8th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '7th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' },\n//     { className: '6th Class', yearOfStudy: '', schoolName: '', place: '', state: '', district: '' }\n//   ]);\n//   const [eapcetData, setEapcetData] = useState({\n//     registrationNumber: '',\n//     hallTicketNumber: '',\n//     rank: ''\n//   });\n  \n//   const handleChange = (index, field, value) => {\n//     const updated = [...educationData];\n//     updated[index][field] = value;\n//     setEducationData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Educational Details</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Class</TableCell>\n//               <TableCell>Year of Study</TableCell>\n//               <TableCell>Name of School / College</TableCell>\n//               <TableCell>Place</TableCell>\n//               <TableCell>State</TableCell>\n//               <TableCell>District</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {educationData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.className || '-'}</TableCell>\n\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.yearOfStudy}\n//                     onChange={(e) => handleChange(index, 'yearOfStudy', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.schoolName}\n//                     onChange={(e) => handleChange(index, 'schoolName', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.place}\n//                     onChange={(e) => handleChange(index, 'place', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.state}\n//                     onChange={(e) => handleChange(index, 'state', e.target.value)}\n//                   />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField\n//                     size=\"small\"\n//                     value={row.district}\n//                     onChange={(e) => handleChange(index, 'district', e.target.value)}\n//                   />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 3, my: 3 }}>\n//   <TextField\n//     label=\"TG EAPCET Registration Number\"\n//     value={eapcetData.registrationNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, registrationNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Hall Ticket Number\"\n//     value={eapcetData.hallTicketNumber}\n//     onChange={(e) => setEapcetData({ ...eapcetData, hallTicketNumber: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n//   <TextField\n//     label=\"TG EAPCET Rank\"\n//     value={eapcetData.rank}\n//     onChange={(e) => setEapcetData({ ...eapcetData, rank: e.target.value })}\n//     size=\"small\"\n//     fullWidth\n//   />\n// </Box>\n\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n\n\n\n//                    3           \n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box\n// } from '@mui/material';\n\n// const AddressForm = () => {\n//   const [formData, setFormData] = useState({\n//     correspondence: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     permanent: {\n//       address: '',\n//       country: '',\n//       state: '',\n//       district: '',\n//       pinCode: '',\n//       mobile: '',\n//       email: ''\n//     },\n//     otherInfo: ''\n//   });\n\n//   const handleChange = (section, field, value) => {\n//     setFormData((prev) => ({\n//       ...prev,\n//       [section]: {\n//         ...prev[section],\n//         [field]: value\n//       }\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Correspondence Address */}\n//       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.correspondence.address} onChange={(e) => handleChange('correspondence', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.correspondence.country} onChange={(e) => handleChange('correspondence', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.correspondence.state} onChange={(e) => handleChange('correspondence', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.correspondence.district} onChange={(e) => handleChange('correspondence', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.correspondence.pinCode} onChange={(e) => handleChange('correspondence', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.correspondence.mobile} onChange={(e) => handleChange('correspondence', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.correspondence.email} onChange={(e) => handleChange('correspondence', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Permanent Address */}\n//       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         <TextField label=\"Address\" value={formData.permanent.address} onChange={(e) => handleChange('permanent', 'address', e.target.value)} size=\"small\" />\n//         <TextField label=\"Country\" value={formData.permanent.country} onChange={(e) => handleChange('permanent', 'country', e.target.value)} size=\"small\" />\n//         <TextField label=\"State\" value={formData.permanent.state} onChange={(e) => handleChange('permanent', 'state', e.target.value)} size=\"small\" />\n//         <TextField label=\"District\" value={formData.permanent.district} onChange={(e) => handleChange('permanent', 'district', e.target.value)} size=\"small\" />\n//         <TextField label=\"Pin Code\" value={formData.permanent.pinCode} onChange={(e) => handleChange('permanent', 'pinCode', e.target.value)} size=\"small\" />\n//         <TextField label=\"Mobile No.\" value={formData.permanent.mobile} onChange={(e) => handleChange('permanent', 'mobile', e.target.value)} size=\"small\" />\n//         <TextField label=\"Email ID\" value={formData.permanent.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n//       </Box>\n\n//       {/* Other Info */}\n//       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n//       <TextField\n//         label=\"Any Other Relevant Information\"\n//         multiline\n//         rows={3}\n//         value={formData.otherInfo}\n//         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n//         size=\"small\"\n//         sx={{ width: '100%' }}\n//       />\n//     </Box>\n//   );\n// };\n\n// export default AddressForm;\n\n\n///////444\n\n\n\n// import React, { useState } from 'react';\n// import {\n//   Typography,\n//   TextField,\n//   Box,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const PaymentAndDocsSection = () => {\n//   const documents = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EAPCET-2025 RANK CARD'\n//   ];\n\n//   const [paymentData, setPaymentData] = useState({\n//     paymentType: 'Online Payment',\n//     transactionId: '136189873101',\n//     date: '2025-06-09',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '2500',\n//     remarks: 'Online Payment'\n//   });\n\n//   const [uploadedDocs, setUploadedDocs] = useState({});\n\n//   const handleFileChange = (index, file) => {\n//     setUploadedDocs(prev => ({\n//       ...prev,\n//       [index]: file\n//     }));\n//   };\n\n//   const handlePaymentChange = (field, value) => {\n//     setPaymentData(prev => ({\n//       ...prev,\n//       [field]: value\n//     }));\n//   };\n\n//   return (\n//     <Box sx={{ p: 12, border: '1px solid #ccc', borderRadius: 2 }}>\n//       {/* Payment Details */}\n//       <Typography variant=\"h6\" gutterBottom>Payment Details</Typography>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Payment Type\"\n//           value={paymentData.paymentType}\n//           onChange={(e) => handlePaymentChange('paymentType', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Transaction ID\"\n//           value={paymentData.transactionId}\n//           onChange={(e) => handlePaymentChange('transactionId', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Date\"\n//           type=\"date\"\n//           value={paymentData.date}\n//           onChange={(e) => handlePaymentChange('date', e.target.value)}\n//           InputLabelProps={{ shrink: true }}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 2 }}>\n//         <TextField\n//           label=\"Name of Bank\"\n//           value={paymentData.bankName}\n//           onChange={(e) => handlePaymentChange('bankName', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Branch Details\"\n//           value={paymentData.branchDetails}\n//           onChange={(e) => handlePaymentChange('branchDetails', e.target.value)}\n//           size=\"small\"\n//         />\n//         <TextField\n//           label=\"Amount (Rs.)\"\n//           value={paymentData.amount}\n//           onChange={(e) => handlePaymentChange('amount', e.target.value)}\n//           size=\"small\"\n//         />\n//       </Box>\n\n//       <TextField\n//         label=\"Remarks, If Any\"\n//         value={paymentData.remarks}\n//         onChange={(e) => handlePaymentChange('remarks', e.target.value)}\n//         size=\"small\"\n//         sx={{ mb: 3 }}\n//       />\n\n//       {/* Document Uploads */}\n//       <Typography variant=\"h6\" gutterBottom>Document Uploads</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>S.No.</TableCell>\n//               <TableCell>Document Type</TableCell>\n//               <TableCell>Upload File</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {documents.map((doc, idx) => (\n//               <TableRow key={idx}>\n//                 <TableCell>{idx + 1}</TableCell>\n//                 <TableCell>{doc}</TableCell>\n//                 <TableCell>\n//                   <input\n//                     type=\"file\"\n//                     accept=\".pdf,.jpg,.png\"\n//                     onChange={(e) => handleFileChange(idx, e.target.files[0])}\n//                   />\n//                   {uploadedDocs[idx] && (\n//                     <Typography variant=\"caption\" color=\"primary\">\n//                       {uploadedDocs[idx].name}\n//                     </Typography>\n//                   )}\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default PaymentAndDocsSection;\n\n\n\n///////////5 55555555\n\nimport React, { useState } from 'react';\nimport { Typography, TextField, Box } from '@mui/material';\n\nconst AdvertisementDetails = () => {\n  const [adDetails, setAdDetails] = useState({\n    adNo: '',\n    adDate: '',\n    applicationNo: '',\n    courseCode: '',\n    courseName: '',\n    dateOfEntry: '',\n    lastDate: '',\n    department: '',\n    name: '',\n    fatherName: '',\n    dob: '',\n    age: '',\n    placeOfBirth: '',\n    socialStatus: '',\n    nationality: '',\n    maritalStatus: '',\n    gender: '',\n    differentlyAbled: '',\n    idMark1: '',\n    idMark2: '',\n    universityArea: '',\n    inService: '',\n    aadhar: '',\n    fatherEmail: ''\n  });\n\n  const [familyDetails, setFamilyDetails] = useState([\n    { relation: '', name: '', age: '', occupation: '', income: '' },\n    { relation: '', name: '', age: '', occupation: '', income: '' }\n  ]);\n\n  const handleAdDetailsChange = (field, value) => {\n    setAdDetails(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleFamilyChange = (index, field, value) => {\n    const updated = [...familyDetails];\n    updated[index][field] = value;\n    setFamilyDetails(updated);\n  };\n\n  return (\n    <Box sx={{ p: 6, border: '1px solid #ccc', borderRadius: 2 }}>\n      {/* Advertisement Details */}\n      <Box sx={{ mb: 6 }}>\n        <Typography variant=\"h6\" gutterBottom>Advertisement Details</Typography>\n\n        <TextField fullWidth margin=\"normal\" label=\"Ad. No.\" value={adDetails.adNo} onChange={(e) => handleAdDetailsChange('adNo', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Ad. Date\" type=\"date\" value={adDetails.adDate} onChange={(e) => handleAdDetailsChange('adDate', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} />\n        <TextField fullWidth margin=\"normal\" label=\"Application No.\" value={adDetails.applicationNo} onChange={(e) => handleAdDetailsChange('applicationNo', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Course Code\" value={adDetails.courseCode} onChange={(e) => handleAdDetailsChange('courseCode', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Course Name\" value={adDetails.courseName} onChange={(e) => handleAdDetailsChange('courseName', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Date of Entry\" type=\"datetime-local\" value={adDetails.dateOfEntry} onChange={(e) => handleAdDetailsChange('dateOfEntry', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} />\n        <TextField fullWidth margin=\"normal\" label=\"Last Date of Receiving Application\" type=\"date\" value={adDetails.lastDate} onChange={(e) => handleAdDetailsChange('lastDate', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} />\n        <TextField fullWidth margin=\"normal\" label=\"Department\" value={adDetails.department} onChange={(e) => handleAdDetailsChange('department', e.target.value)} size=\"small\" />\n      </Box>\n\n      {/* Applicant's Details */}\n      <Box sx={{ mb: 6 }}>\n        <Typography variant=\"h6\" gutterBottom>Applicant's Details</Typography>\n\n        <TextField fullWidth margin=\"normal\" label=\"Name\" value={adDetails.name} onChange={(e) => handleAdDetailsChange('name', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Father's Name\" value={adDetails.fatherName} onChange={(e) => handleAdDetailsChange('fatherName', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Date of Birth\" type=\"date\" value={adDetails.dob} onChange={(e) => handleAdDetailsChange('dob', e.target.value)} size=\"small\" InputLabelProps={{ shrink: true }} />\n        <TextField fullWidth margin=\"normal\" label=\"Age (as on last date)\" value={adDetails.age} onChange={(e) => handleAdDetailsChange('age', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Place of Birth\" value={adDetails.placeOfBirth} onChange={(e) => handleAdDetailsChange('placeOfBirth', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Social Status\" value={adDetails.socialStatus} onChange={(e) => handleAdDetailsChange('socialStatus', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Nationality\" value={adDetails.nationality} onChange={(e) => handleAdDetailsChange('nationality', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Marital Status\" value={adDetails.maritalStatus} onChange={(e) => handleAdDetailsChange('maritalStatus', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Gender\" value={adDetails.gender} onChange={(e) => handleAdDetailsChange('gender', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Differently Abled\" value={adDetails.differentlyAbled} onChange={(e) => handleAdDetailsChange('differentlyAbled', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Identification Mark 1\" value={adDetails.idMark1} onChange={(e) => handleAdDetailsChange('idMark1', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Identification Mark 2\" value={adDetails.idMark2} onChange={(e) => handleAdDetailsChange('idMark2', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"University Area\" value={adDetails.universityArea} onChange={(e) => handleAdDetailsChange('universityArea', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"In-service (Govt.)\" value={adDetails.inService} onChange={(e) => handleAdDetailsChange('inService', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Aadhar Number\" value={adDetails.aadhar} onChange={(e) => handleAdDetailsChange('aadhar', e.target.value)} size=\"small\" />\n        <TextField fullWidth margin=\"normal\" label=\"Father's Email\" value={adDetails.fatherEmail} onChange={(e) => handleAdDetailsChange('fatherEmail', e.target.value)} size=\"small\" />\n      </Box>\n\n      {/* Parents / Spouse Section */}\n      <Box sx={{ p: 4, border: '1px solid #ccc', borderRadius: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n        {familyDetails.map((person, index) => (\n          <Box key={index} sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n              <TextField\n                label=\"Name\"\n                value={person.name}\n                onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n                size=\"small\"\n                sx={{ flex: 1 }}\n              />\n              <TextField\n                label=\"Age (in years)\"\n                value={person.age}\n                onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n                size=\"small\"\n                sx={{ flex: 1 }}\n              />\n              <TextField\n                label=\"Occupation\"\n                value={person.occupation}\n                onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n                size=\"small\"\n                sx={{ flex: 1 }}\n              />\n              <TextField\n                label=\"Gross Monthly Income (Rs.)\"\n                value={person.income}\n                onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n                size=\"small\"\n                sx={{ flex: 1 }}\n              />\n            </Box>\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default AdvertisementDetails;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}