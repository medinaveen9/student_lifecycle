{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationTable.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const ApplicationTable1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationTable1;\n// BPTApplication.js\n\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport PersonalDetails from './PersonalDetails';\nimport IdentityDetails from './IdentityDetails';\nimport IntermediateDetails from './IntermediateDetails';\nimport AcademicRecord from './AcademicRecord';\nimport CourseDetails from './CourseDetails';\nimport ContactInformation from './ContactInformation';\nimport DocumentsUpload from './DocumentsUpload';\nimport ApplicationReportBPT from './ApplicationReportBPT';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationTable = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    administrativeDetails: {},\n    applicationFeeDetails: {},\n    personalDetails: {},\n    identityDetails: {},\n    contactInformation: {},\n    intermediateDetails: {},\n    courseDetails: {},\n    academicRecord: {},\n    documentsUpload: {}\n  });\n  return /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplicationTable, \"rEmsj4mspAx+XqwWP3+HLgr2NAI=\");\n_c = ApplicationTable;\nexport default ApplicationTable;\nvar _c;\n$RefreshReg$(_c, \"ApplicationTable\");","map":{"version":3,"names":["React","useState","Routes","Route","PersonalDetails","IdentityDetails","IntermediateDetails","AcademicRecord","CourseDetails","ContactInformation","DocumentsUpload","ApplicationReportBPT","jsxDEV","_jsxDEV","ApplicationTable","_s","formData","setFormData","administrativeDetails","applicationFeeDetails","personalDetails","identityDetails","contactInformation","intermediateDetails","courseDetails","academicRecord","documentsUpload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationTable.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const ApplicationTable1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationTable1;\n// BPTApplication.js\n\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport PersonalDetails from './PersonalDetails';\nimport IdentityDetails from './IdentityDetails'\nimport IntermediateDetails from './IntermediateDetails';\nimport AcademicRecord from './AcademicRecord';\nimport CourseDetails from './CourseDetails'\nimport ContactInformation from './ContactInformation';\nimport DocumentsUpload from './DocumentsUpload';\nimport ApplicationReportBPT from './ApplicationReportBPT';\n\nconst ApplicationTable = () => {\n  const [formData, setFormData] = useState({\n    administrativeDetails: {},\n    applicationFeeDetails: {},\n    personalDetails: {},\n    identityDetails: {},\n    contactInformation: {},\n    intermediateDetails: {},\n    courseDetails: {},\n    academicRecord: {},\n    documentsUpload: {}\n  });\n\n  return (\n    <Routes>\n     \n     \n      {/* <Route path=\"personal\" element={<PersonalDetails formData={formData} setFormData={setFormData} />} />\n      <Route path=\"identity\" element={<IdentityDetails formData={formData} setFormData={setFormData} />} />\n      <Route path=\"contact\" element={<ContactInformation formData={formData} setFormData={setFormData} />} />\n      <Route path=\"intermediate\" element={<IntermediateDetails formData={formData} setFormData={setFormData} />} />\n      <Route path=\"course\" element={<CourseDetails formData={formData} setFormData={setFormData} />} />\n      <Route path=\"record\" element={<AcademicRecord formData={formData} setFormData={setFormData} />} />\n      <Route path=\"upload\" element={<DocumentsUpload formData={formData} setFormData={setFormData} />} />\n      <Route path=\"report\" element={<ApplicationReportBPT formData={formData} />} /> */}\n    </Routes>\n  );\n};\n\nexport default ApplicationTable;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,qBAAqB,EAAE,CAAC,CAAC;IACzBC,qBAAqB,EAAE,CAAC,CAAC;IACzBC,eAAe,EAAE,CAAC,CAAC;IACnBC,eAAe,EAAE,CAAC,CAAC;IACnBC,kBAAkB,EAAE,CAAC,CAAC;IACtBC,mBAAmB,EAAE,CAAC,CAAC;IACvBC,aAAa,EAAE,CAAC,CAAC;IACjBC,cAAc,EAAE,CAAC,CAAC;IAClBC,eAAe,EAAE,CAAC;EACpB,CAAC,CAAC;EAEF,oBACEb,OAAA,CAACX,MAAM;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWC,CAAC;AAEb,CAAC;AAACf,EAAA,CA3BID,gBAAgB;AAAAiB,EAAA,GAAhBjB,gBAAgB;AA6BtB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}