{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationReportBPT.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import {\n//   Box, Typography, TextField, Grid, Paper, Table, TableBody, \n//   TableCell, TableContainer, TableHead, TableRow, Checkbox, Button\n// } from '@mui/material';\n\n// const ApplicationReportBPT = () => {\n//   // Constants for repeated values\n//   const SUBJECTS = ['Botany', 'Zoology', 'Physics', 'Chemistry', 'English', 'Second Language'];\n//   const DOCUMENTS = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EXPECT-2025 RANK CARD'\n//   ];\n\n//   // Initial form state\n//   const initialFormData = {\n//     // Advertisement Details\n//     adNo: '',\n//     adDate: '',\n//     applicationNo: '',\n//     courseName: '',\n//     courseCode: '',\n//     dateOfEntry: '',\n//     lastDate: '',\n//     department: '',\n\n//     // Applicant's Details\n//     name: '',\n//     fatherName: '',\n//     dob: '',\n//     age: '',\n//     placeOfBirth: '',\n//     socialStatus: '',\n//     nationality: '',\n//     maritalStatus: '',\n//     gender: '',\n//     differentlyAbled: '',\n//     mark1: '',\n//     mark2: '',\n//     universityArea: '',\n//     inService: '',\n//     aadhar: '',\n//     fatherEmail: '',\n\n//     // Address Details\n//     correspondenceAddress: '',\n//     correspondenceCountry: 'India',\n//     correspondenceState: '',\n//     correspondenceDistrict: '',\n//     correspondencePincode: '',\n//     correspondenceMobile: '',\n//     correspondenceEmail: '',\n//     sameAsCorrespondence: true,\n//     permanentAddress: '',\n//     permanentCountry: 'India',\n//     permanentState: '',\n//     permanentDistrict: '',\n//     permanentPincode: '',\n//     permanentMobile: '',\n//     permanentEmail: '',\n\n//     // Parents' Details\n//     fatherNameParent: '',\n//     fatherAge: '',\n//     fatherOccupation: '',\n//     motherName: '',\n//     motherAge: '',\n//     motherOccupation: '',\n\n//     // Intermediate Marks\n//     subjects: SUBJECTS.map(subject => ({\n//       subject,\n//       y1: '',\n//       y2: '',\n//       practical: ['Botany', 'Zoology', 'Physics', 'Chemistry'].includes(subject) ? '' : '-',\n//       total: '',\n//       max: ''\n//     })),\n//     totalMarks: '',\n//     totalPercentage: '',\n//     groupTotal: '',\n//     groupPercentage: '',\n\n//     // Educational History (7 years)\n//     educationHistory: Array(7).fill().map(() => ({\n//       class: '',\n//       year: '',\n//       school: '',\n//       place: ''\n//     })),\n\n//     // EAPCET Details\n//     eapcetRegNo: '',\n//     hallTicketNo: '',\n//     rank: '',\n\n//     // Payment Details\n//     paymentType: '',\n//     transactionId: '',\n//     paymentDate: '',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '',\n//     paymentRemarks: '',\n\n//     // Declaration\n//     signature: '',\n//     declarationDate: '',\n//     officeRemarks: ''\n//   };\n\n//   const [formData, setFormData] = React.useState(initialFormData);\n\n//   // Memoized handler for better performance\n//   const handleChange = React.useCallback((e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   }, []);\n\n//   const handleSubjectChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedSubjects = [...prev.subjects];\n//       updatedSubjects[index] = { ...updatedSubjects[index], [field]: value };\n//       return { ...prev, subjects: updatedSubjects };\n//     });\n//   }, []);\n\n//   const handleEducationChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedEducation = [...prev.educationHistory];\n//       updatedEducation[index] = { ...updatedEducation[index], [field]: value };\n//       return { ...prev, educationHistory: updatedEducation };\n//     });\n//   }, []);\n\n//   const handleSameAddressChange = React.useCallback((e) => {\n//     const checked = e.target.checked;\n//     setFormData(prev => ({\n//       ...prev,\n//       sameAsCorrespondence: checked,\n//       permanentAddress: checked ? prev.correspondenceAddress : '',\n//       permanentCountry: checked ? prev.correspondenceCountry : '',\n//       permanentState: checked ? prev.correspondenceState : '',\n//       permanentDistrict: checked ? prev.correspondenceDistrict : '',\n//       permanentPincode: checked ? prev.correspondencePincode : '',\n//       permanentMobile: checked ? prev.correspondenceMobile : '',\n//       permanentEmail: checked ? prev.correspondenceEmail : ''\n//     }));\n//   }, []);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('Form submitted:', formData);\n//     // Add your form submission logic here\n//   };\n\n//   // Reusable form section component\n//   const FormSection = ({ title, children }) => (\n//     <Grid item xs={12}>\n//       <Paper elevation={2} sx={{ p: 2 }}>\n//         <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\n//           {title}\n//         </Typography>\n//         {children}\n//       </Paper>\n//     </Grid>\n//   );\n\n//   // Reusable text field component\n//   const FormTextField = ({ name, label, ...props }) => (\n//     <TextField\n//       name={name}\n//       label={label}\n//       value={formData[name]}\n//       onChange={handleChange}\n//       fullWidth\n//       {...props}\n//     />\n//   );\n\n//   return (\n//     <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n//       <Typography variant=\"h5\" gutterBottom align=\"center\">\n//         APPLICATION FORM - Bachelor of Physiotherapy - 2025\n//       </Typography>\n\n//       <Grid container spacing={3}>\n//         {/* Advertisement Details */}\n//         <FormSection title=\"Advertisement Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"adNo\" label=\"Ad. No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"adDate\" label=\"Ad. Date\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"applicationNo\" label=\"Application No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseName\" label=\"Course Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseCode\" label=\"Course Code\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dateOfEntry\" label=\"Date of Entry\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"lastDate\" label=\"Last Date of Application\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"department\" label=\"Department\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Applicant's Details */}\n//         <FormSection title=\"Applicant's Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"name\" label=\"Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherName\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dob\" label=\"Date of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"age\" label=\"Age (on last date)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"placeOfBirth\" label=\"Place of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"socialStatus\" label=\"Social Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"nationality\" label=\"Nationality\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"maritalStatus\" label=\"Marital Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"gender\" label=\"Gender\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"differentlyAbled\" label=\"Differently Abled\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark1\" label=\"Identification Mark 1\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark2\" label=\"Identification Mark 2\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"universityArea\" label=\"University Area\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"inService\" label=\"In-service (Govt.)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"aadhar\" label=\"Aadhar\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherEmail\" label=\"Father's Email\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Address Details */}\n//         <FormSection title=\"Address Details\">\n//           {/* Correspondence Address */}\n//           <Box sx={{ mb: 3 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Correspondence Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <FormTextField \n//                   name=\"correspondenceAddress\"\n//                   label=\"Address\" \n//                   multiline\n//                   rows={2}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceCountry\" label=\"Country\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceState\" label=\"State\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceDistrict\" label=\"District\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondencePincode\" label=\"Pin Code\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceMobile\" label=\"Mobile No.\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceEmail\" label=\"E-mail Id\" /></Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Permanent Address */}\n//           <Box sx={{ mb: 2 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Permanent Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <TextField \n//                   name=\"permanentAddress\"\n//                   label=\"Address\" \n//                   value={formData.permanentAddress}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   multiline\n//                   rows={2}\n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentCountry\"\n//                   label=\"Country\" \n//                   value={formData.permanentCountry}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentState\"\n//                   label=\"State\" \n//                   value={formData.permanentState}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentDistrict\"\n//                   label=\"District\" \n//                   value={formData.permanentDistrict}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentPincode\"\n//                   label=\"Pin Code\" \n//                   value={formData.permanentPincode}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentMobile\"\n//                   label=\"Mobile No.\" \n//                   value={formData.permanentMobile}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentEmail\"\n//                   label=\"E-mail Id\" \n//                   value={formData.permanentEmail}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Checkbox for same address */}\n//           <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//             <Checkbox \n//               checked={formData.sameAsCorrespondence} \n//               onChange={handleSameAddressChange} \n//             />\n//             <Typography variant=\"body2\">Same as Correspondence Address</Typography>\n//           </Box>\n//         </FormSection>\n\n//         {/* Parents' Details */}\n//         <FormSection title=\"Parents' Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"fatherNameParent\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherOccupation\" label=\"Occupation\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherName\" label=\"Mother's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherOccupation\" label=\"Occupation\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Intermediate Marks */}\n//         <FormSection title=\"Intermediate Marks (Telangana State)\">\n//           <Grid container spacing={1}>\n//             {formData.subjects.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Subject\" \n//                     value={item.subject} \n//                     fullWidth \n//                     InputProps={{ readOnly: true }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"1st Year\" \n//                     value={item.y1}\n//                     onChange={(e) => handleSubjectChange(index, 'y1', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"2nd Year\" \n//                     value={item.y2}\n//                     onChange={(e) => handleSubjectChange(index, 'y2', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"Practical\" \n//                     value={item.practical}\n//                     onChange={item.practical !== '-' ? \n//                       (e) => handleSubjectChange(index, 'practical', e.target.value) : undefined}\n//                     fullWidth \n//                     InputProps={{ readOnly: item.practical === '-' }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Total\" \n//                     value={item.total}\n//                     onChange={(e) => handleSubjectChange(index, 'total', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Max Marks\" \n//                     value={item.max}\n//                     onChange={(e) => handleSubjectChange(index, 'max', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n\n//           <Box mt={2}>\n//             <FormTextField name=\"totalMarks\" label=\"Total Marks\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"totalPercentage\" label=\"Total Percentage\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupTotal\" label=\"Group Total\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupPercentage\" label=\"Group Percentage\" />\n//           </Box>\n//         </FormSection>\n\n//         {/* Educational History */}\n//         <FormSection title=\"Educational History\">\n//           <Grid container spacing={2}>\n//             {formData.educationHistory.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Class\" \n//                     value={item.class}\n//                     onChange={(e) => handleEducationChange(index, 'class', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Year\" \n//                     value={item.year}\n//                     onChange={(e) => handleEducationChange(index, 'year', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={4}>\n//                   <TextField \n//                     label=\"School\" \n//                     value={item.school}\n//                     onChange={(e) => handleEducationChange(index, 'school', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Place\" \n//                     value={item.place}\n//                     onChange={(e) => handleEducationChange(index, 'place', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n//         </FormSection>\n\n//         {/* EAPCET Details */}\n//         <FormSection title=\"EAPCET Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"eapcetRegNo\" label=\"TG EAPCET Reg No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"hallTicketNo\" label=\"Hall Ticket No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"rank\" label=\"Rank\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Payment Details */}\n//         <FormSection title=\"Payment Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"paymentType\" label=\"Payment Type\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"transactionId\" label=\"Transaction ID\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"paymentDate\" label=\"Payment Date\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"bankName\" label=\"Bank Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"branchDetails\" label=\"Branch Details\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"amount\" label=\"Amount (Rs.)\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"paymentRemarks\" label=\"Remarks\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Document Details */}\n//         <FormSection title=\"Document Details\">\n//           <TableContainer>\n//             <Table>\n//               <TableHead>\n//                 <TableRow>\n//                   <TableCell>S.No.</TableCell>\n//                   <TableCell>Document Type</TableCell>\n//                 </TableRow>\n//               </TableHead>\n//               <TableBody>\n//                 {DOCUMENTS.map((type, index) => (\n//                   <TableRow key={index}>\n//                     <TableCell>{index + 1}</TableCell>\n//                     <TableCell>{type}</TableCell>\n//                   </TableRow>\n//                 ))}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//         </FormSection>\n\n//         {/* Declaration */}\n//         <FormSection title=\"Declaration\">\n//           <Typography paragraph>\n//             I declare that the particulars given above are correct. I agree to abide by the admission prospectus issued by the Institute. I also declare that in the event that information provided is incorrect or false. I may be prosecuted as per law.\n//           </Typography>\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"signature\" label=\"Signature\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"declarationDate\" label=\"Date\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"officeRemarks\" label=\"Remarks (For office use only)\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Submit Button */}\n//         <Grid item xs={12}>\n//           <Button \n//             type=\"submit\" \n//             variant=\"contained\" \n//             color=\"primary\" \n//             size=\"large\"\n//             fullWidth\n//           >\n//             Submit Application\n//           </Button>\n//         </Grid>\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\nimport ReactToPrint from 'react-to-print';\nimport React, { useState, useRef } from 'react';\nimport { Box, Typography, TextField, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Checkbox, Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material';\nimport { useReactToPrint } from 'react-to-print';\nimport ReviewerReport from '../ApplicationBPT/ReportView'; // Adjust path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationReportBPT = () => {\n  _s();\n  form;\n  // ... (keep all your existing constants and initial state)\n\n  const [showReport, setShowReport] = useState(false);\n  const reportRef = useRef();\n\n  // Print handler\n  const handlePrint = useReactToPrint({\n    content: () => reportRef.current,\n    pageStyle: `\n      @media print {\n        body { -webkit-print-color-adjust: exact; }\n        .no-print { display: none !important; }\n        @page { size: A4; margin: 10mm; }\n      }\n    `\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    setShowReport(true);\n  };\n  const handleCloseReport = () => {\n    setShowReport(false);\n  };\n\n  // Render the form\n  if (!showReport) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        pt: 4,\n        px: 6,\n        pb: 7\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 7\n    }, this);\n  }\n  const handleBackToForm = () => {\n    setShowReport(false);\n  };\n  if (showReport) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: reportRef,\n      children: /*#__PURE__*/_jsxDEV(ReviewerReport, {\n        formData: formData,\n        onBack: handleBackToForm,\n        onPrint: handlePrint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this);\n  }\n  // Render the report\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    ref: reportRef,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        mb: 4\n      },\n      children: \"APPLICATION FORM REPORT - Bachelor of Physiotherapy - 2025\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Advertisement Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ad. No.:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 45\n                }, this), \" \", formData.adNo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ad. Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 45\n                }, this), \" \", formData.adDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Applicant's Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 45\n                }, this), \" \", formData.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Father's Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 45\n                }, this), \" \", formData.fatherName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Intermediate Marks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"1st Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"2nd Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Practical\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Max Marks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: formData.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.subject\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.y1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 659,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.y2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.practical\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.max\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sx: {\n          mt: 4,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        className: \"no-print\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCloseReport,\n          sx: {\n            mr: 2\n          },\n          children: \"Back to Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handlePrint,\n          children: \"Print Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 606,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplicationReportBPT, \"yp8rw5NUKANERbD5mGhIZeQ9nEI=\", false, function () {\n  return [useReactToPrint];\n});\n_c = ApplicationReportBPT;\nexport default ApplicationReportBPT;\nvar _c;\n$RefreshReg$(_c, \"ApplicationReportBPT\");","map":{"version":3,"names":["ReactToPrint","React","useState","useRef","Box","Typography","TextField","Grid","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Checkbox","Button","Dialog","DialogActions","DialogContent","DialogTitle","useReactToPrint","ReviewerReport","jsxDEV","_jsxDEV","ApplicationReportBPT","_s","form","showReport","setShowReport","reportRef","handlePrint","content","current","pageStyle","handleSubmit","e","preventDefault","handleCloseReport","component","onSubmit","sx","pt","px","pb","children","container","spacing","fileName","_jsxFileName","lineNumber","columnNumber","handleBackToForm","ref","formData","onBack","onPrint","p","variant","align","gutterBottom","mb","item","xs","elevation","adNo","adDate","name","fatherName","subjects","map","subject","index","y1","y2","practical","total","max","mt","display","justifyContent","className","color","onClick","mr","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationReportBPT.js"],"sourcesContent":["// import React from 'react';\n// import {\n//   Box, Typography, TextField, Grid, Paper, Table, TableBody, \n//   TableCell, TableContainer, TableHead, TableRow, Checkbox, Button\n// } from '@mui/material';\n\n// const ApplicationReportBPT = () => {\n//   // Constants for repeated values\n//   const SUBJECTS = ['Botany', 'Zoology', 'Physics', 'Chemistry', 'English', 'Second Language'];\n//   const DOCUMENTS = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EXPECT-2025 RANK CARD'\n//   ];\n\n//   // Initial form state\n//   const initialFormData = {\n//     // Advertisement Details\n//     adNo: '',\n//     adDate: '',\n//     applicationNo: '',\n//     courseName: '',\n//     courseCode: '',\n//     dateOfEntry: '',\n//     lastDate: '',\n//     department: '',\n\n//     // Applicant's Details\n//     name: '',\n//     fatherName: '',\n//     dob: '',\n//     age: '',\n//     placeOfBirth: '',\n//     socialStatus: '',\n//     nationality: '',\n//     maritalStatus: '',\n//     gender: '',\n//     differentlyAbled: '',\n//     mark1: '',\n//     mark2: '',\n//     universityArea: '',\n//     inService: '',\n//     aadhar: '',\n//     fatherEmail: '',\n\n//     // Address Details\n//     correspondenceAddress: '',\n//     correspondenceCountry: 'India',\n//     correspondenceState: '',\n//     correspondenceDistrict: '',\n//     correspondencePincode: '',\n//     correspondenceMobile: '',\n//     correspondenceEmail: '',\n//     sameAsCorrespondence: true,\n//     permanentAddress: '',\n//     permanentCountry: 'India',\n//     permanentState: '',\n//     permanentDistrict: '',\n//     permanentPincode: '',\n//     permanentMobile: '',\n//     permanentEmail: '',\n\n//     // Parents' Details\n//     fatherNameParent: '',\n//     fatherAge: '',\n//     fatherOccupation: '',\n//     motherName: '',\n//     motherAge: '',\n//     motherOccupation: '',\n\n//     // Intermediate Marks\n//     subjects: SUBJECTS.map(subject => ({\n//       subject,\n//       y1: '',\n//       y2: '',\n//       practical: ['Botany', 'Zoology', 'Physics', 'Chemistry'].includes(subject) ? '' : '-',\n//       total: '',\n//       max: ''\n//     })),\n//     totalMarks: '',\n//     totalPercentage: '',\n//     groupTotal: '',\n//     groupPercentage: '',\n\n//     // Educational History (7 years)\n//     educationHistory: Array(7).fill().map(() => ({\n//       class: '',\n//       year: '',\n//       school: '',\n//       place: ''\n//     })),\n\n//     // EAPCET Details\n//     eapcetRegNo: '',\n//     hallTicketNo: '',\n//     rank: '',\n\n//     // Payment Details\n//     paymentType: '',\n//     transactionId: '',\n//     paymentDate: '',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '',\n//     paymentRemarks: '',\n\n//     // Declaration\n//     signature: '',\n//     declarationDate: '',\n//     officeRemarks: ''\n//   };\n\n//   const [formData, setFormData] = React.useState(initialFormData);\n\n//   // Memoized handler for better performance\n//   const handleChange = React.useCallback((e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   }, []);\n\n//   const handleSubjectChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedSubjects = [...prev.subjects];\n//       updatedSubjects[index] = { ...updatedSubjects[index], [field]: value };\n//       return { ...prev, subjects: updatedSubjects };\n//     });\n//   }, []);\n\n//   const handleEducationChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedEducation = [...prev.educationHistory];\n//       updatedEducation[index] = { ...updatedEducation[index], [field]: value };\n//       return { ...prev, educationHistory: updatedEducation };\n//     });\n//   }, []);\n\n//   const handleSameAddressChange = React.useCallback((e) => {\n//     const checked = e.target.checked;\n//     setFormData(prev => ({\n//       ...prev,\n//       sameAsCorrespondence: checked,\n//       permanentAddress: checked ? prev.correspondenceAddress : '',\n//       permanentCountry: checked ? prev.correspondenceCountry : '',\n//       permanentState: checked ? prev.correspondenceState : '',\n//       permanentDistrict: checked ? prev.correspondenceDistrict : '',\n//       permanentPincode: checked ? prev.correspondencePincode : '',\n//       permanentMobile: checked ? prev.correspondenceMobile : '',\n//       permanentEmail: checked ? prev.correspondenceEmail : ''\n//     }));\n//   }, []);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('Form submitted:', formData);\n//     // Add your form submission logic here\n//   };\n\n//   // Reusable form section component\n//   const FormSection = ({ title, children }) => (\n//     <Grid item xs={12}>\n//       <Paper elevation={2} sx={{ p: 2 }}>\n//         <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\n//           {title}\n//         </Typography>\n//         {children}\n//       </Paper>\n//     </Grid>\n//   );\n\n//   // Reusable text field component\n//   const FormTextField = ({ name, label, ...props }) => (\n//     <TextField\n//       name={name}\n//       label={label}\n//       value={formData[name]}\n//       onChange={handleChange}\n//       fullWidth\n//       {...props}\n//     />\n//   );\n\n//   return (\n//     <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n//       <Typography variant=\"h5\" gutterBottom align=\"center\">\n//         APPLICATION FORM - Bachelor of Physiotherapy - 2025\n//       </Typography>\n\n//       <Grid container spacing={3}>\n//         {/* Advertisement Details */}\n//         <FormSection title=\"Advertisement Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"adNo\" label=\"Ad. No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"adDate\" label=\"Ad. Date\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"applicationNo\" label=\"Application No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseName\" label=\"Course Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseCode\" label=\"Course Code\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dateOfEntry\" label=\"Date of Entry\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"lastDate\" label=\"Last Date of Application\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"department\" label=\"Department\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Applicant's Details */}\n//         <FormSection title=\"Applicant's Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"name\" label=\"Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherName\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dob\" label=\"Date of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"age\" label=\"Age (on last date)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"placeOfBirth\" label=\"Place of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"socialStatus\" label=\"Social Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"nationality\" label=\"Nationality\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"maritalStatus\" label=\"Marital Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"gender\" label=\"Gender\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"differentlyAbled\" label=\"Differently Abled\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark1\" label=\"Identification Mark 1\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark2\" label=\"Identification Mark 2\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"universityArea\" label=\"University Area\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"inService\" label=\"In-service (Govt.)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"aadhar\" label=\"Aadhar\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherEmail\" label=\"Father's Email\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Address Details */}\n//         <FormSection title=\"Address Details\">\n//           {/* Correspondence Address */}\n//           <Box sx={{ mb: 3 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Correspondence Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <FormTextField \n//                   name=\"correspondenceAddress\"\n//                   label=\"Address\" \n//                   multiline\n//                   rows={2}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceCountry\" label=\"Country\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceState\" label=\"State\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceDistrict\" label=\"District\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondencePincode\" label=\"Pin Code\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceMobile\" label=\"Mobile No.\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceEmail\" label=\"E-mail Id\" /></Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Permanent Address */}\n//           <Box sx={{ mb: 2 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Permanent Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <TextField \n//                   name=\"permanentAddress\"\n//                   label=\"Address\" \n//                   value={formData.permanentAddress}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   multiline\n//                   rows={2}\n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentCountry\"\n//                   label=\"Country\" \n//                   value={formData.permanentCountry}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentState\"\n//                   label=\"State\" \n//                   value={formData.permanentState}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentDistrict\"\n//                   label=\"District\" \n//                   value={formData.permanentDistrict}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentPincode\"\n//                   label=\"Pin Code\" \n//                   value={formData.permanentPincode}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentMobile\"\n//                   label=\"Mobile No.\" \n//                   value={formData.permanentMobile}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentEmail\"\n//                   label=\"E-mail Id\" \n//                   value={formData.permanentEmail}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Checkbox for same address */}\n//           <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//             <Checkbox \n//               checked={formData.sameAsCorrespondence} \n//               onChange={handleSameAddressChange} \n//             />\n//             <Typography variant=\"body2\">Same as Correspondence Address</Typography>\n//           </Box>\n//         </FormSection>\n\n//         {/* Parents' Details */}\n//         <FormSection title=\"Parents' Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"fatherNameParent\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherOccupation\" label=\"Occupation\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherName\" label=\"Mother's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherOccupation\" label=\"Occupation\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Intermediate Marks */}\n//         <FormSection title=\"Intermediate Marks (Telangana State)\">\n//           <Grid container spacing={1}>\n//             {formData.subjects.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Subject\" \n//                     value={item.subject} \n//                     fullWidth \n//                     InputProps={{ readOnly: true }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"1st Year\" \n//                     value={item.y1}\n//                     onChange={(e) => handleSubjectChange(index, 'y1', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"2nd Year\" \n//                     value={item.y2}\n//                     onChange={(e) => handleSubjectChange(index, 'y2', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"Practical\" \n//                     value={item.practical}\n//                     onChange={item.practical !== '-' ? \n//                       (e) => handleSubjectChange(index, 'practical', e.target.value) : undefined}\n//                     fullWidth \n//                     InputProps={{ readOnly: item.practical === '-' }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Total\" \n//                     value={item.total}\n//                     onChange={(e) => handleSubjectChange(index, 'total', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Max Marks\" \n//                     value={item.max}\n//                     onChange={(e) => handleSubjectChange(index, 'max', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n\n//           <Box mt={2}>\n//             <FormTextField name=\"totalMarks\" label=\"Total Marks\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"totalPercentage\" label=\"Total Percentage\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupTotal\" label=\"Group Total\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupPercentage\" label=\"Group Percentage\" />\n//           </Box>\n//         </FormSection>\n\n//         {/* Educational History */}\n//         <FormSection title=\"Educational History\">\n//           <Grid container spacing={2}>\n//             {formData.educationHistory.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Class\" \n//                     value={item.class}\n//                     onChange={(e) => handleEducationChange(index, 'class', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Year\" \n//                     value={item.year}\n//                     onChange={(e) => handleEducationChange(index, 'year', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={4}>\n//                   <TextField \n//                     label=\"School\" \n//                     value={item.school}\n//                     onChange={(e) => handleEducationChange(index, 'school', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Place\" \n//                     value={item.place}\n//                     onChange={(e) => handleEducationChange(index, 'place', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n//         </FormSection>\n\n//         {/* EAPCET Details */}\n//         <FormSection title=\"EAPCET Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"eapcetRegNo\" label=\"TG EAPCET Reg No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"hallTicketNo\" label=\"Hall Ticket No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"rank\" label=\"Rank\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Payment Details */}\n//         <FormSection title=\"Payment Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"paymentType\" label=\"Payment Type\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"transactionId\" label=\"Transaction ID\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"paymentDate\" label=\"Payment Date\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"bankName\" label=\"Bank Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"branchDetails\" label=\"Branch Details\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"amount\" label=\"Amount (Rs.)\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"paymentRemarks\" label=\"Remarks\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Document Details */}\n//         <FormSection title=\"Document Details\">\n//           <TableContainer>\n//             <Table>\n//               <TableHead>\n//                 <TableRow>\n//                   <TableCell>S.No.</TableCell>\n//                   <TableCell>Document Type</TableCell>\n//                 </TableRow>\n//               </TableHead>\n//               <TableBody>\n//                 {DOCUMENTS.map((type, index) => (\n//                   <TableRow key={index}>\n//                     <TableCell>{index + 1}</TableCell>\n//                     <TableCell>{type}</TableCell>\n//                   </TableRow>\n//                 ))}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//         </FormSection>\n\n//         {/* Declaration */}\n//         <FormSection title=\"Declaration\">\n//           <Typography paragraph>\n//             I declare that the particulars given above are correct. I agree to abide by the admission prospectus issued by the Institute. I also declare that in the event that information provided is incorrect or false. I may be prosecuted as per law.\n//           </Typography>\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"signature\" label=\"Signature\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"declarationDate\" label=\"Date\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"officeRemarks\" label=\"Remarks (For office use only)\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Submit Button */}\n//         <Grid item xs={12}>\n//           <Button \n//             type=\"submit\" \n//             variant=\"contained\" \n//             color=\"primary\" \n//             size=\"large\"\n//             fullWidth\n//           >\n//             Submit Application\n//           </Button>\n//         </Grid>\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\nimport ReactToPrint from 'react-to-print';\n\nimport React, { useState, useRef } from 'react';\nimport {\n  Box, Typography, TextField, Grid, Paper, Table, TableBody,\n  TableCell, TableContainer, TableHead, TableRow, Checkbox, Button,\n  Dialog, DialogActions, DialogContent, DialogTitle\n} from '@mui/material';\nimport { useReactToPrint } from 'react-to-print';\nimport ReviewerReport from '../ApplicationBPT/ReportView'; // Adjust path as needed\nconst ApplicationReportBPT = () => {form\n  // ... (keep all your existing constants and initial state)\n\n  const [showReport, setShowReport] = useState(false);\n  const reportRef = useRef();\n\n  // Print handler\n  const handlePrint = useReactToPrint({\n    content: () => reportRef.current,\n    pageStyle: `\n      @media print {\n        body { -webkit-print-color-adjust: exact; }\n        .no-print { display: none !important; }\n        @page { size: A4; margin: 10mm; }\n      }\n    `\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setShowReport(true);\n  };\n\n  const handleCloseReport = () => {\n    setShowReport(false);\n  };\n\n  // Render the form\n  if (!showReport) {\n    return (\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n        {/* Keep all your existing form JSX */}\n        <Grid container spacing={3}>\n          {/* All your form sections */}\n        </Grid>\n      </Box>\n    );\n  }\n\n  const handleBackToForm = () => {\n    setShowReport(false);\n  };\n\n  if (showReport) {\n    return (\n      <div ref={reportRef}>\n        <ReviewerReport \n          formData={formData}\n          onBack={handleBackToForm}\n          onPrint={handlePrint}\n        />\n      </div>\n    );\n  }\n  // Render the report\n  return (\n    <Box sx={{ p: 4 }} ref={reportRef}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom sx={{ mb: 4 }}>\n        APPLICATION FORM REPORT - Bachelor of Physiotherapy - 2025\n      </Typography>\n\n      {/* Report Content - Display all form data */}\n      <Grid container spacing={3}>\n        {/* Advertisement Details */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Advertisement Details</Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={6}><Typography><strong>Ad. No.:</strong> {formData.adNo}</Typography></Grid>\n              <Grid item xs={6}><Typography><strong>Ad. Date:</strong> {formData.adDate}</Typography></Grid>\n              {/* Add all other fields similarly */}\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {/* Applicant's Details */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Applicant's Details</Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={6}><Typography><strong>Name:</strong> {formData.name}</Typography></Grid>\n              <Grid item xs={6}><Typography><strong>Father's Name:</strong> {formData.fatherName}</Typography></Grid>\n              {/* Add all other applicant details */}\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {/* Continue with all other sections in similar fashion */}\n\n        {/* Intermediate Marks */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Intermediate Marks</Typography>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Subject</TableCell>\n                    <TableCell>1st Year</TableCell>\n                    <TableCell>2nd Year</TableCell>\n                    <TableCell>Practical</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Max Marks</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {formData.subjects.map((subject, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subject.subject}</TableCell>\n                      <TableCell>{subject.y1}</TableCell>\n                      <TableCell>{subject.y2}</TableCell>\n                      <TableCell>{subject.practical}</TableCell>\n                      <TableCell>{subject.total}</TableCell>\n                      <TableCell>{subject.max}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Grid>\n\n        {/* Action Buttons */}\n        <Grid item xs={12} sx={{ mt: 4, display: 'flex', justifyContent: 'space-between' }} className=\"no-print\">\n          <Button \n            variant=\"contained\" \n            color=\"secondary\"\n            onClick={handleCloseReport}\n            sx={{ mr: 2 }}\n          >\n            Back to Form\n          </Button>\n          <Button \n            variant=\"contained\" \n            color=\"primary\"\n            onClick={handlePrint}\n          >\n            Print Report\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ApplicationReportBPT;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}