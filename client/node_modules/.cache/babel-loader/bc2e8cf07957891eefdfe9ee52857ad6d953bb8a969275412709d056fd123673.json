{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationPdfReport.js\",\n  _s = $RefreshSig$();\n// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n\n//     </Box>\n\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n\n// const FamilyDetailsForm = () => {\n//   const [familyDetails, setFamilyDetails] = useState([\n//     { relation: 'Father', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Mother', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Spouse', name: '', age: '', occupation: '', income: '' }\n//   ]);\n\n//   const fields = [\n//     { name: 'name', label: 'Name' },\n//     { name: 'age', label: 'Age (in years)' },\n//     { name: 'occupation', label: 'Occupation' },\n//     { name: 'income', label: 'Gross Monthly Income (Rs.)' }\n//   ];\n\n//   const handleFamilyChange = (index, field, value) => {\n//     const updated = [...familyDetails];\n//     updated[index][field] = value;\n//     setFamilyDetails(updated);\n//   };\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         Details of Parents / Spouse\n//       </Typography>\n\n//       {familyDetails.map((person, index) => (\n//         <Box key={index} sx={{ mb: 3 }}>\n//           <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n//             {person.relation}\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//             {fields.map(({ name, label }) => (\n//               <TextField\n//                 key={name}\n//                 label={`${person.relation} ${label}`}\n//                 value={person[name]}\n//                 onChange={(e) => handleFamilyChange(index, name, e.target.value)}\n//                 size=\"small\"\n//                 sx={{ flex: 1 }}\n//               />\n//             ))}\n//           </Box>\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default FamilyDetailsForm;\n\n// import React, { useState } from 'react';\n\n// const AcademicRecordForm = () => {\n//   const [courseSubjects, setCourseSubjects] = useState([\n//     {\n//       course_name: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       subject_code: '',\n//       subject_name: '',\n//       paper_code: '',\n//       exam_code: '',\n//       max_marks: ''\n//     }\n//   ]);\n\n//   const [studentRecords, setStudentRecords] = useState([\n//     {\n//       applicant_code: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       exam_code: '',\n//       subject_code: '',\n//       paper_code: '',\n//       marks_obtained: ''\n//     }\n//   ]);\n\n//   // --- Handlers for E.1: Course Subject Master ---\n//   const handleSubjectChange = (index, field, value) => {\n//     const updated = [...courseSubjects];\n//     updated[index][field] = value;\n//     setCourseSubjects(updated);\n//   };\n\n//   const addSubjectRow = () => {\n//     setCourseSubjects([\n//       ...courseSubjects,\n//       {\n//         course_name: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         subject_code: '',\n//         subject_name: '',\n//         paper_code: '',\n//         exam_code: '',\n//         max_marks: ''\n//       }\n//     ]);\n//   };\n\n//   // --- Handlers for E.2: Student Marks Obtained ---\n//   const handleRecordChange = (index, field, value) => {\n//     const updated = [...studentRecords];\n//     updated[index][field] = value;\n//     setStudentRecords(updated);\n//   };\n\n//   const addRecordRow = () => {\n//     setStudentRecords([\n//       ...studentRecords,\n//       {\n//         applicant_code: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         exam_code: '',\n//         subject_code: '',\n//         paper_code: '',\n//         marks_obtained: ''\n//       }\n//     ]);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('E.1 Course Subjects:', courseSubjects);\n//     console.log('E.2 Student Records:', studentRecords);\n//     alert('Data captured in console!');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"p-4 max-w-5xl mx-auto space-y-8 bg-white shadow rounded\">\n//       <h2 className=\"text-xl font-bold\">E.1 - Course Subject Master Details</h2>\n//       {courseSubjects.map((subject, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code (MidTerm/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Max Marks\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addSubjectRow} className=\"bg-blue-500 text-white px-4 py-2 rounded\">+ Add Subject</button>\n\n//       <h2 className=\"text-xl font-bold pt-8\">E.2 - Student Academic Records</h2>\n//       {studentRecords.map((record, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Marks Obtained\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addRecordRow} className=\"bg-green-500 text-white px-4 py-2 rounded\">+ Add Record</button>\n\n//       <div className=\"pt-6\">\n//         <button type=\"submit\" className=\"bg-indigo-600 text-white px-6 py-2 rounded\">Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default AcademicRecordForm;\n\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AcademicRecordForm = () => {\n  _s();\n  const [courseSubjects, setCourseSubjects] = useState([{\n    course_name: '',\n    course_code: '',\n    year: '',\n    semester: '',\n    subject_code: '',\n    subject_name: '',\n    paper_code: '',\n    exam_code: '',\n    max_marks: ''\n  }]);\n  const [studentRecords, setStudentRecords] = useState([{\n    applicant_code: '',\n    course_code: '',\n    year: '',\n    semester: '',\n    exam_code: '',\n    subject_code: '',\n    paper_code: '',\n    marks_obtained: ''\n  }]);\n\n  // Handlers for Course Subjects\n  const handleSubjectChange = (index, field, value) => {\n    const updated = [...courseSubjects];\n    updated[index][field] = value;\n    setCourseSubjects(updated);\n  };\n  const addSubjectRow = () => {\n    setCourseSubjects([...courseSubjects, {\n      course_name: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      subject_code: '',\n      subject_name: '',\n      paper_code: '',\n      exam_code: '',\n      max_marks: ''\n    }]);\n  };\n\n  // Handlers for Student Records\n  const handleRecordChange = (index, field, value) => {\n    const updated = [...studentRecords];\n    updated[index][field] = value;\n    setStudentRecords(updated);\n  };\n  const addRecordRow = () => {\n    setStudentRecords([...studentRecords, {\n      applicant_code: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      exam_code: '',\n      subject_code: '',\n      paper_code: '',\n      marks_obtained: ''\n    }]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('E.1 Course Subjects:', courseSubjects);\n    console.log('E.2 Student Records:', studentRecords);\n    alert('Data captured in console!');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 13,\n      maxWidth: '1000px',\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"E.1 - Course Subject Master Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), courseSubjects.map((subject, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 2,\n          mb: 3,\n          border: '1px solid #ccc',\n          borderRadius: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Course Name\",\n          value: subject.course_name,\n          onChange: e => handleSubjectChange(index, 'course_name', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Course Code\",\n          value: subject.course_code,\n          onChange: e => handleSubjectChange(index, 'course_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Year\",\n          type: \"number\",\n          value: subject.year,\n          onChange: e => handleSubjectChange(index, 'year', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Semester (I/II)\",\n          value: subject.semester,\n          onChange: e => handleSubjectChange(index, 'semester', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Subject Code\",\n          value: subject.subject_code,\n          onChange: e => handleSubjectChange(index, 'subject_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Subject Name\",\n          value: subject.subject_name,\n          onChange: e => handleSubjectChange(index, 'subject_name', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Paper Code (Theory/Practical)\",\n          value: subject.paper_code,\n          onChange: e => handleSubjectChange(index, 'paper_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Exam Code (Mid/End)\",\n          value: subject.exam_code,\n          onChange: e => handleSubjectChange(index, 'exam_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Max Marks\",\n          type: \"number\",\n          value: subject.max_marks,\n          onChange: e => handleSubjectChange(index, 'max_marks', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: addSubjectRow,\n        sx: {\n          mb: 4\n        },\n        children: \"+ Add Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"E.2 - Student Academic Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), studentRecords.map((record, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 2,\n          mb: 3,\n          border: '1px solid #ccc',\n          borderRadius: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Applicant Code\",\n          value: record.applicant_code,\n          onChange: e => handleRecordChange(index, 'applicant_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Course Code\",\n          value: record.course_code,\n          onChange: e => handleRecordChange(index, 'course_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Year\",\n          type: \"number\",\n          value: record.year,\n          onChange: e => handleRecordChange(index, 'year', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Semester\",\n          value: record.semester,\n          onChange: e => handleRecordChange(index, 'semester', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Exam Code\",\n          value: record.exam_code,\n          onChange: e => handleRecordChange(index, 'exam_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Subject Code\",\n          value: record.subject_code,\n          onChange: e => handleRecordChange(index, 'subject_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Paper Code\",\n          value: record.paper_code,\n          onChange: e => handleRecordChange(index, 'paper_code', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Marks Obtained\",\n          type: \"number\",\n          value: record.marks_obtained,\n          onChange: e => handleRecordChange(index, 'marks_obtained', e.target.value),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: addRecordRow,\n        sx: {\n          mb: 4\n        },\n        children: \"+ Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n};\n_s(AcademicRecordForm, \"fuxIAWbCetunzj7Iyo/FYeaPKKo=\");\n_c = AcademicRecordForm;\nexport default AcademicRecordForm;\nvar _c;\n$RefreshReg$(_c, \"AcademicRecordForm\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","Button","jsxDEV","_jsxDEV","AcademicRecordForm","_s","courseSubjects","setCourseSubjects","course_name","course_code","year","semester","subject_code","subject_name","paper_code","exam_code","max_marks","studentRecords","setStudentRecords","applicant_code","marks_obtained","handleSubjectChange","index","field","value","updated","addSubjectRow","handleRecordChange","addRecordRow","handleSubmit","e","preventDefault","console","log","alert","sx","p","maxWidth","margin","children","onSubmit","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","subject","display","flexWrap","gap","mb","border","borderRadius","label","onChange","target","size","type","onClick","record","textAlign","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationPdfReport.js"],"sourcesContent":["// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n      \n//     </Box>\n\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n\n// const FamilyDetailsForm = () => {\n//   const [familyDetails, setFamilyDetails] = useState([\n//     { relation: 'Father', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Mother', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Spouse', name: '', age: '', occupation: '', income: '' }\n//   ]);\n\n//   const fields = [\n//     { name: 'name', label: 'Name' },\n//     { name: 'age', label: 'Age (in years)' },\n//     { name: 'occupation', label: 'Occupation' },\n//     { name: 'income', label: 'Gross Monthly Income (Rs.)' }\n//   ];\n\n//   const handleFamilyChange = (index, field, value) => {\n//     const updated = [...familyDetails];\n//     updated[index][field] = value;\n//     setFamilyDetails(updated);\n//   };\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         Details of Parents / Spouse\n//       </Typography>\n\n//       {familyDetails.map((person, index) => (\n//         <Box key={index} sx={{ mb: 3 }}>\n//           <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n//             {person.relation}\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//             {fields.map(({ name, label }) => (\n//               <TextField\n//                 key={name}\n//                 label={`${person.relation} ${label}`}\n//                 value={person[name]}\n//                 onChange={(e) => handleFamilyChange(index, name, e.target.value)}\n//                 size=\"small\"\n//                 sx={{ flex: 1 }}\n//               />\n//             ))}\n//           </Box>\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default FamilyDetailsForm;\n\n\n// import React, { useState } from 'react';\n\n// const AcademicRecordForm = () => {\n//   const [courseSubjects, setCourseSubjects] = useState([\n//     {\n//       course_name: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       subject_code: '',\n//       subject_name: '',\n//       paper_code: '',\n//       exam_code: '',\n//       max_marks: ''\n//     }\n//   ]);\n\n//   const [studentRecords, setStudentRecords] = useState([\n//     {\n//       applicant_code: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       exam_code: '',\n//       subject_code: '',\n//       paper_code: '',\n//       marks_obtained: ''\n//     }\n//   ]);\n\n//   // --- Handlers for E.1: Course Subject Master ---\n//   const handleSubjectChange = (index, field, value) => {\n//     const updated = [...courseSubjects];\n//     updated[index][field] = value;\n//     setCourseSubjects(updated);\n//   };\n\n//   const addSubjectRow = () => {\n//     setCourseSubjects([\n//       ...courseSubjects,\n//       {\n//         course_name: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         subject_code: '',\n//         subject_name: '',\n//         paper_code: '',\n//         exam_code: '',\n//         max_marks: ''\n//       }\n//     ]);\n//   };\n\n//   // --- Handlers for E.2: Student Marks Obtained ---\n//   const handleRecordChange = (index, field, value) => {\n//     const updated = [...studentRecords];\n//     updated[index][field] = value;\n//     setStudentRecords(updated);\n//   };\n\n//   const addRecordRow = () => {\n//     setStudentRecords([\n//       ...studentRecords,\n//       {\n//         applicant_code: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         exam_code: '',\n//         subject_code: '',\n//         paper_code: '',\n//         marks_obtained: ''\n//       }\n//     ]);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('E.1 Course Subjects:', courseSubjects);\n//     console.log('E.2 Student Records:', studentRecords);\n//     alert('Data captured in console!');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"p-4 max-w-5xl mx-auto space-y-8 bg-white shadow rounded\">\n//       <h2 className=\"text-xl font-bold\">E.1 - Course Subject Master Details</h2>\n//       {courseSubjects.map((subject, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code (MidTerm/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Max Marks\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addSubjectRow} className=\"bg-blue-500 text-white px-4 py-2 rounded\">+ Add Subject</button>\n\n//       <h2 className=\"text-xl font-bold pt-8\">E.2 - Student Academic Records</h2>\n//       {studentRecords.map((record, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Marks Obtained\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addRecordRow} className=\"bg-green-500 text-white px-4 py-2 rounded\">+ Add Record</button>\n\n//       <div className=\"pt-6\">\n//         <button type=\"submit\" className=\"bg-indigo-600 text-white px-6 py-2 rounded\">Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default AcademicRecordForm;\n\n\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, Button } from '@mui/material';\n\nconst AcademicRecordForm = () => {\n  const [courseSubjects, setCourseSubjects] = useState([\n    {\n      course_name: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      subject_code: '',\n      subject_name: '',\n      paper_code: '',\n      exam_code: '',\n      max_marks: ''\n    }\n  ]);\n\n  const [studentRecords, setStudentRecords] = useState([\n    {\n      applicant_code: '',\n      course_code: '',\n      year: '',\n      semester: '',\n      exam_code: '',\n      subject_code: '',\n      paper_code: '',\n      marks_obtained: ''\n    }\n  ]);\n\n  // Handlers for Course Subjects\n  const handleSubjectChange = (index, field, value) => {\n    const updated = [...courseSubjects];\n    updated[index][field] = value;\n    setCourseSubjects(updated);\n  };\n\n  const addSubjectRow = () => {\n    setCourseSubjects([\n      ...courseSubjects,\n      {\n        course_name: '',\n        course_code: '',\n        year: '',\n        semester: '',\n        subject_code: '',\n        subject_name: '',\n        paper_code: '',\n        exam_code: '',\n        max_marks: ''\n      }\n    ]);\n  };\n\n  // Handlers for Student Records\n  const handleRecordChange = (index, field, value) => {\n    const updated = [...studentRecords];\n    updated[index][field] = value;\n    setStudentRecords(updated);\n  };\n\n  const addRecordRow = () => {\n    setStudentRecords([\n      ...studentRecords,\n      {\n        applicant_code: '',\n        course_code: '',\n        year: '',\n        semester: '',\n        exam_code: '',\n        subject_code: '',\n        paper_code: '',\n        marks_obtained: ''\n      }\n    ]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('E.1 Course Subjects:', courseSubjects);\n    console.log('E.2 Student Records:', studentRecords);\n    alert('Data captured in console!');\n  };\n\n  return (\n    <Box sx={{ p: 13, maxWidth: '1000px', margin: '0 auto' }}>\n      <form onSubmit={handleSubmit}>\n        {/* E.1 Section */}\n        <Typography variant=\"h6\" gutterBottom>\n          E.1 - Course Subject Master Details\n        </Typography>\n        {courseSubjects.map((subject, index) => (\n          <Box key={index} sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3, border: '1px solid #ccc', borderRadius: 2, p: 2 }}>\n            <TextField label=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} size=\"small\" />\n            <TextField label=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Year\" type=\"number\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} size=\"small\" />\n            <TextField label=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} size=\"small\" />\n            <TextField label=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} size=\"small\" />\n            <TextField label=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Exam Code (Mid/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Max Marks\" type=\"number\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} size=\"small\" />\n          </Box>\n        ))}\n        <Button variant=\"outlined\" onClick={addSubjectRow} sx={{ mb: 4 }}>\n          + Add Subject\n        </Button>\n\n        {/* E.2 Section */}\n        <Typography variant=\"h6\" gutterBottom>\n          E.2 - Student Academic Records\n        </Typography>\n        {studentRecords.map((record, index) => (\n          <Box key={index} sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3, border: '1px solid #ccc', borderRadius: 2, p: 2 }}>\n            <TextField label=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Year\" type=\"number\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} size=\"small\" />\n            <TextField label=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} size=\"small\" />\n            <TextField label=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} size=\"small\" />\n            <TextField label=\"Marks Obtained\" type=\"number\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} size=\"small\" />\n          </Box>\n        ))}\n        <Button variant=\"outlined\" onClick={addRecordRow} sx={{ mb: 4 }}>\n          + Add Record\n        </Button>\n\n        {/* Submit Button */}\n        <Box sx={{ textAlign: 'right' }}>\n          <Button type=\"submit\" variant=\"contained\">\n            Submit\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default AcademicRecordForm;\n"],"mappings":";;AAAA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}