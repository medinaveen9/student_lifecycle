{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/components/FormComponentAnesthesia.js\";\nimport React from 'react';\nimport { Box, Typography, Table, TableHead, TableRow, TableCell, TableBody, Paper, TableContainer } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormComponentAnesthesia = ({\n  title,\n  studentInfo,\n  subjectsData\n}) => {\n  const {\n    rollNumber,\n    name,\n    soName,\n    date\n  } = studentInfo || {};\n  const formattedDate = date ? new Date(date).toLocaleDateString() : '-';\n\n  // Calculate totals\n  const totalMaxMarks = subjectsData.reduce((sum, subject) => sum + (subject.maxMarks || 0), 0);\n  const totalMinMarks = subjectsData.reduce((sum, subject) => sum + (subject.minMarks || 0), 0);\n  const totalSecuredMarks = subjectsData.reduce((sum, subject) => sum + (subject.marksSecured || 0), 0);\n\n  // Determine overall result\n  const overallResult = subjectsData.every(subject => (subject.marksSecured || 0) >= (subject.minMarks || 0)) ? 'Pass' : 'Fail';\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      maxWidth: 1200,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Roll Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), \" \", rollNumber || '-']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), \" \", name || '-']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"S/O or D/O:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), \" \", soName || '-']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), \" \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#eeeeee'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Paper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Max Marks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Min Marks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Marks Secured\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [subjectsData.map((subject, index) => {\n            const result = (subject.marksSecured || 0) >= (subject.minMarks || 0) ? 'Pass' : 'Fail';\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  wordBreak: 'break-word'\n                },\n                children: subject.subject || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: subject.maxMarks || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: subject.minMarks || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: subject.marksSecured || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#f5f5f5'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 2,\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Grand Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: totalMaxMarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: totalMinMarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: totalSecuredMarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: overallResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      textAlign: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Date: \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sd/-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Executive Registrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = FormComponentAnesthesia;\nexport default FormComponentAnesthesia;\n// import React from 'react';\n// import {\n//   Box,\n//   Typography,\n//   Table,\n//   TableHead,\n//   TableRow,\n//   TableCell,\n//   TableBody,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const FormComponentAnesthesia = ({ title, subjectsData }) => {\n//   const totalMaxMarks = subjectsData.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjectsData.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjectsData.reduce((sum, s) => sum + s.marksSecured, 0);\n\n//   const overallResult = subjectsData.every(subject => subject.marksSecured >= subject.minMarks)\n//     ? 'Pass'\n//     : 'Fail';\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         {title}\n//       </Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#eeeeee' }}>\n//               <TableCell>Paper</TableCell>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell align=\"center\">Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((subject, index) => {\n//               const result = subject.marksSecured >= subject.minMarks ? 'Pass' : 'Fail';\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell>{index + 1}</TableCell>\n//                   <TableCell>{subject.subject}</TableCell>\n//                   <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.marksSecured}</TableCell>\n//                   <TableCell align=\"center\">{result}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n\n//             <TableRow sx={{ backgroundColor: '#f0f0f0' }}>\n//               <TableCell colSpan={2}><strong>Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell align=\"center\"><strong>{overallResult}</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentAnesthesia;\n// import React, { useState } from 'react';\n// import {\n//   Box,\n//   Typography,\n//   Table,\n//   TableHead,\n//   TableRow,\n//   TableCell,\n//   TableBody,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const FormComponentAnesthesia = ({ title, subjectsData }) => {\n//   const [rollNumber] = useState('ANA12345');\n//   const [name] = useState('Jane Smith');\n//   const [sod] = useState('Robert Smith'); // S/o or D/o\n\n//   const totalMaxMarks = subjectsData.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjectsData.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjectsData.reduce((sum, s) => sum + s.marksSecured, 0);\n\n//   const overallResult = subjectsData.every(subject => subject.marksSecured >= subject.minMarks)\n//     ? 'Pass'\n//     : 'Fail';\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         {title}\n//       </Typography>\n\n//       {/* Personal Info Section */}\n//       <Typography><strong>Roll Number:</strong> {rollNumber}</Typography>\n//       <Typography><strong>Name:</strong> {name}</Typography>\n//       <Typography><strong>S/o. / D/o.:</strong> {sod}</Typography>\n\n//       <TableContainer component={Paper} sx={{ mt: 2 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#eeeeee' }}>\n//               <TableCell>Paper</TableCell>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell align=\"center\">Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((subject, index) => {\n//               const result = subject.marksSecured >= subject.minMarks ? 'Pass' : 'Fail';\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell>{index + 1}</TableCell>\n//                   <TableCell>{subject.subject}</TableCell>\n//                   <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.marksSecured}</TableCell>\n//                   <TableCell align=\"center\">{result}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n\n//             <TableRow sx={{ backgroundColor: '#f0f0f0' }}>\n//               <TableCell colSpan={2}><strong>Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell align=\"center\"><strong>{overallResult}</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentAnesthesia;\n\n// // import React, { useState, useEffect } from 'react';\n// // import {\n// //   Box,\n// //   Typography,\n// //   Table,\n// //   TableHead,\n// //   TableRow,\n// //   TableCell,\n// //   TableBody,\n// //   Paper,\n// //   TableContainer\n// // } from '@mui/material';\n// // import { toWords } from 'number-to-words';\n\n// // const FormComponentAnesthesia = ({ title, subjectsData }) => {\n// //   const [rollNumber] = useState('ANA12345');\n// //   const [name] = useState('Jane Smith');\n// //   const [sod] = useState('Robert Smith'); // S/o or D/o\n// //   const [date] = useState('June 26, 2025');\n// //   const [totalInWords, setTotalInWords] = useState('');\n\n// //   const totalMaxMarks = subjectsData.reduce((sum, s) => sum + s.maxMarks, 0);\n// //   const totalMinMarks = subjectsData.reduce((sum, s) => sum + s.minMarks, 0);\n// //   const totalSecuredMarks = subjectsData.reduce((sum, s) => sum + s.marksSecured, 0);\n\n// //   const overallResult = subjectsData.every(subject => subject.marksSecured >= subject.minMarks)\n// //     ? 'Pass'\n// //     : 'Fail';\n\n// //   useEffect(() => {\n// //     setTotalInWords(toWords(totalSecuredMarks));\n// //   }, [totalSecuredMarks]);\n\n// //   return (\n// //     <Box sx={{ p: 3 }}>\n// //       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n// //       {/* Personal Info Section */}\n// //       <Typography><strong>Roll Number:</strong> {rollNumber}</Typography>\n// //       <Typography><strong>Name:</strong> {name}</Typography>\n// //       <Typography><strong>S/o. / D/o.:</strong> {sod}</Typography>\n// //       <Typography><strong>Date:</strong> {date}</Typography>\n\n// //       <TableContainer component={Paper} sx={{ mt: 3 }}>\n// //         <Table>\n// //           <TableHead>\n// //             <TableRow sx={{ backgroundColor: '#eeeeee' }}>\n// //               <TableCell>Paper</TableCell>\n// //               <TableCell>Subject</TableCell>\n// //               <TableCell align=\"right\">Max Marks</TableCell>\n// //               <TableCell align=\"right\">Min Marks</TableCell>\n// //               <TableCell align=\"right\">Marks Secured</TableCell>\n// //               <TableCell align=\"center\">Result</TableCell>\n// //             </TableRow>\n// //           </TableHead>\n// //           <TableBody>\n// //             {subjectsData.map((subject, index) => {\n// //               const result = subject.marksSecured >= subject.minMarks ? 'Pass' : 'Fail';\n// //               return (\n// //                 <TableRow key={index}>\n// //                   <TableCell>{index + 1}</TableCell>\n// //                   <TableCell>{subject.subject}</TableCell>\n// //                   <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n// //                   <TableCell align=\"right\">{subject.minMarks}</TableCell>\n// //                   <TableCell align=\"right\">{subject.marksSecured}</TableCell>\n// //                   <TableCell align=\"center\">{result}</TableCell>\n// //                 </TableRow>\n// //               );\n// //             })}\n\n// //             <TableRow sx={{ backgroundColor: '#f0f0f0' }}>\n// //               <TableCell colSpan={2}><strong>Total</strong></TableCell>\n// //               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n// //               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n// //               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n// //               <TableCell align=\"center\"><strong>{overallResult}</strong></TableCell>\n// //             </TableRow>\n// //           </TableBody>\n// //         </Table>\n// //       </TableContainer>\n\n// //       {/* Total in Words */}\n// //       <Box sx={{ mt: 3 }}>\n// //         <Typography><strong>Total Marks in Words:</strong> {totalInWords.toUpperCase()}</Typography>\n// //       </Box>\n// //     </Box>\n// //   );\n// // };\n\n// // export default FormComponentAnesthesia;\n// // FormComponentAnesthesia2.js\n// import React from 'react';\n// import {\n//   Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Typography, Paper\n// } from '@mui/material';\n\n// const FormComponentAnesthesia2 = ({ formData }) => {\n//   return (\n//     <TableContainer component={Paper} sx={{ my: 4 }}>\n//       <Typography variant=\"h6\" align=\"center\" sx={{ mt: 2 }}>\n//         Second Year Final Examination Marks (Anesthesia)\n//       </Typography>\n//       <Table>\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>Paper</TableCell>\n//             <TableCell>Subject</TableCell>\n//             <TableCell>Internal Max</TableCell>\n//             <TableCell>Internal Secured</TableCell>\n//             <TableCell>Theory Max</TableCell>\n//             <TableCell>Theory Secured</TableCell>\n//             <TableCell>Practicals Max</TableCell>\n//             <TableCell>Practicals Secured</TableCell>\n//             <TableCell>Result</TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {Subjects.map((row, index) => (\n//             <TableRow key={index}>\n//               <TableCell>{index + 1}</TableCell>\n//               <TableCell>{row.subject}</TableCell>\n//               <TableCell>{row.internalMax}</TableCell>\n//               <TableCell>{row.internalSecured}</TableCell>\n//               <TableCell>{row.theoryMax}</TableCell>\n//               <TableCell>{row.theorySecured}</TableCell>\n//               <TableCell>{row.practicalMax}</TableCell>\n//               <TableCell>{row.practicalSecured}</TableCell>\n//               <TableCell>{row.result}</TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//     </TableContainer>\n//   );\n// };\n\n// export default FormComponentAnesthesia2;\nvar _c;\n$RefreshReg$(_c, \"FormComponentAnesthesia\");","map":{"version":3,"names":["React","Box","Typography","Table","TableHead","TableRow","TableCell","TableBody","Paper","TableContainer","jsxDEV","_jsxDEV","FormComponentAnesthesia","title","studentInfo","subjectsData","rollNumber","name","soName","date","formattedDate","Date","toLocaleDateString","totalMaxMarks","reduce","sum","subject","maxMarks","totalMinMarks","minMarks","totalSecuredMarks","marksSecured","overallResult","every","sx","p","maxWidth","mx","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mt","mb","component","backgroundColor","map","index","result","wordBreak","colSpan","textAlign","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/components/FormComponentAnesthesia.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Paper,\n  TableContainer\n} from '@mui/material';\n\nconst FormComponentAnesthesia = ({ title, studentInfo, subjectsData }) => {\n  const { rollNumber, name, soName, date } = studentInfo || {};\n  const formattedDate = date ? new Date(date).toLocaleDateString() : '-';\n\n  // Calculate totals\n  const totalMaxMarks = subjectsData.reduce((sum, subject) => sum + (subject.maxMarks || 0), 0);\n  const totalMinMarks = subjectsData.reduce((sum, subject) => sum + (subject.minMarks || 0), 0);\n  const totalSecuredMarks = subjectsData.reduce((sum, subject) => sum + (subject.marksSecured || 0), 0);\n\n  // Determine overall result\n  const overallResult = subjectsData.every(subject => \n    (subject.marksSecured || 0) >= (subject.minMarks || 0)\n  ) ? 'Pass' : 'Fail';\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 1200, mx: 'auto' }}>\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\n        {title}\n      </Typography>\n\n      {/* Student Information */}\n      <Box mt={3} mb={4}>\n        <Typography><strong>Roll Number:</strong> {rollNumber || '-'}</Typography>\n        <Typography><strong>Name:</strong> {name || '-'}</Typography>\n        <Typography><strong>S/O or D/O:</strong> {soName || '-'}</Typography>\n        <Typography><strong>Date:</strong> {formattedDate}</Typography>\n      </Box>\n\n      {/* Marks Table */}\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow sx={{ backgroundColor: '#eeeeee' }}>\n              <TableCell>Paper</TableCell>\n              <TableCell>Subject</TableCell>\n              <TableCell align=\"right\">Max Marks</TableCell>\n              <TableCell align=\"right\">Min Marks</TableCell>\n              <TableCell align=\"right\">Marks Secured</TableCell>\n              <TableCell align=\"center\">Result</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {subjectsData.map((subject, index) => {\n              const result = (subject.marksSecured || 0) >= (subject.minMarks || 0) ? 'Pass' : 'Fail';\n              return (\n                <TableRow key={index}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell sx={{ wordBreak: 'break-word' }}>{subject.subject || '-'}</TableCell>\n                  <TableCell align=\"right\">{subject.maxMarks || 0}</TableCell>\n                  <TableCell align=\"right\">{subject.minMarks || 0}</TableCell>\n                  <TableCell align=\"right\">{subject.marksSecured || 0}</TableCell>\n                  <TableCell align=\"center\">{result}</TableCell>\n                </TableRow>\n              );\n            })}\n\n            {/* Grand Total Row */}\n            <TableRow sx={{ backgroundColor: '#f5f5f5' }}>\n              <TableCell colSpan={2} align=\"right\"><strong>Grand Total</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n              <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n              <TableCell align=\"center\"><strong>{overallResult}</strong></TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Signature Section */}\n      <Box mt={5} textAlign=\"right\">\n        <Typography>Date: {formattedDate}</Typography>\n        <Typography sx={{ mt: 4 }}><strong>Sd/-</strong></Typography>\n        <Typography><strong>Executive Registrar</strong></Typography>\n      </Box>\n    </Box>\n  );\n};\n\nexport default FormComponentAnesthesia;\n// import React from 'react';\n// import {\n//   Box,\n//   Typography,\n//   Table,\n//   TableHead,\n//   TableRow,\n//   TableCell,\n//   TableBody,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const FormComponentAnesthesia = ({ title, subjectsData }) => {\n//   const totalMaxMarks = subjectsData.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjectsData.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjectsData.reduce((sum, s) => sum + s.marksSecured, 0);\n\n//   const overallResult = subjectsData.every(subject => subject.marksSecured >= subject.minMarks)\n//     ? 'Pass'\n//     : 'Fail';\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         {title}\n//       </Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#eeeeee' }}>\n//               <TableCell>Paper</TableCell>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell align=\"center\">Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((subject, index) => {\n//               const result = subject.marksSecured >= subject.minMarks ? 'Pass' : 'Fail';\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell>{index + 1}</TableCell>\n//                   <TableCell>{subject.subject}</TableCell>\n//                   <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.marksSecured}</TableCell>\n//                   <TableCell align=\"center\">{result}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n\n//             <TableRow sx={{ backgroundColor: '#f0f0f0' }}>\n//               <TableCell colSpan={2}><strong>Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell align=\"center\"><strong>{overallResult}</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentAnesthesia;\n// import React, { useState } from 'react';\n// import {\n//   Box,\n//   Typography,\n//   Table,\n//   TableHead,\n//   TableRow,\n//   TableCell,\n//   TableBody,\n//   Paper,\n//   TableContainer\n// } from '@mui/material';\n\n// const FormComponentAnesthesia = ({ title, subjectsData }) => {\n//   const [rollNumber] = useState('ANA12345');\n//   const [name] = useState('Jane Smith');\n//   const [sod] = useState('Robert Smith'); // S/o or D/o\n\n//   const totalMaxMarks = subjectsData.reduce((sum, s) => sum + s.maxMarks, 0);\n//   const totalMinMarks = subjectsData.reduce((sum, s) => sum + s.minMarks, 0);\n//   const totalSecuredMarks = subjectsData.reduce((sum, s) => sum + s.marksSecured, 0);\n\n//   const overallResult = subjectsData.every(subject => subject.marksSecured >= subject.minMarks)\n//     ? 'Pass'\n//     : 'Fail';\n\n//   return (\n//     <Box sx={{ p: 3 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         {title}\n//       </Typography>\n\n//       {/* Personal Info Section */}\n//       <Typography><strong>Roll Number:</strong> {rollNumber}</Typography>\n//       <Typography><strong>Name:</strong> {name}</Typography>\n//       <Typography><strong>S/o. / D/o.:</strong> {sod}</Typography>\n\n//       <TableContainer component={Paper} sx={{ mt: 2 }}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#eeeeee' }}>\n//               <TableCell>Paper</TableCell>\n//               <TableCell>Subject</TableCell>\n//               <TableCell align=\"right\">Max Marks</TableCell>\n//               <TableCell align=\"right\">Min Marks</TableCell>\n//               <TableCell align=\"right\">Marks Secured</TableCell>\n//               <TableCell align=\"center\">Result</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((subject, index) => {\n//               const result = subject.marksSecured >= subject.minMarks ? 'Pass' : 'Fail';\n//               return (\n//                 <TableRow key={index}>\n//                   <TableCell>{index + 1}</TableCell>\n//                   <TableCell>{subject.subject}</TableCell>\n//                   <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.minMarks}</TableCell>\n//                   <TableCell align=\"right\">{subject.marksSecured}</TableCell>\n//                   <TableCell align=\"center\">{result}</TableCell>\n//                 </TableRow>\n//               );\n//             })}\n\n//             <TableRow sx={{ backgroundColor: '#f0f0f0' }}>\n//               <TableCell colSpan={2}><strong>Total</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n//               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n//               <TableCell align=\"center\"><strong>{overallResult}</strong></TableCell>\n//             </TableRow>\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default FormComponentAnesthesia;\n\n// // import React, { useState, useEffect } from 'react';\n// // import {\n// //   Box,\n// //   Typography,\n// //   Table,\n// //   TableHead,\n// //   TableRow,\n// //   TableCell,\n// //   TableBody,\n// //   Paper,\n// //   TableContainer\n// // } from '@mui/material';\n// // import { toWords } from 'number-to-words';\n\n// // const FormComponentAnesthesia = ({ title, subjectsData }) => {\n// //   const [rollNumber] = useState('ANA12345');\n// //   const [name] = useState('Jane Smith');\n// //   const [sod] = useState('Robert Smith'); // S/o or D/o\n// //   const [date] = useState('June 26, 2025');\n// //   const [totalInWords, setTotalInWords] = useState('');\n\n// //   const totalMaxMarks = subjectsData.reduce((sum, s) => sum + s.maxMarks, 0);\n// //   const totalMinMarks = subjectsData.reduce((sum, s) => sum + s.minMarks, 0);\n// //   const totalSecuredMarks = subjectsData.reduce((sum, s) => sum + s.marksSecured, 0);\n\n// //   const overallResult = subjectsData.every(subject => subject.marksSecured >= subject.minMarks)\n// //     ? 'Pass'\n// //     : 'Fail';\n\n// //   useEffect(() => {\n// //     setTotalInWords(toWords(totalSecuredMarks));\n// //   }, [totalSecuredMarks]);\n\n// //   return (\n// //     <Box sx={{ p: 3 }}>\n// //       <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n\n// //       {/* Personal Info Section */}\n// //       <Typography><strong>Roll Number:</strong> {rollNumber}</Typography>\n// //       <Typography><strong>Name:</strong> {name}</Typography>\n// //       <Typography><strong>S/o. / D/o.:</strong> {sod}</Typography>\n// //       <Typography><strong>Date:</strong> {date}</Typography>\n\n// //       <TableContainer component={Paper} sx={{ mt: 3 }}>\n// //         <Table>\n// //           <TableHead>\n// //             <TableRow sx={{ backgroundColor: '#eeeeee' }}>\n// //               <TableCell>Paper</TableCell>\n// //               <TableCell>Subject</TableCell>\n// //               <TableCell align=\"right\">Max Marks</TableCell>\n// //               <TableCell align=\"right\">Min Marks</TableCell>\n// //               <TableCell align=\"right\">Marks Secured</TableCell>\n// //               <TableCell align=\"center\">Result</TableCell>\n// //             </TableRow>\n// //           </TableHead>\n// //           <TableBody>\n// //             {subjectsData.map((subject, index) => {\n// //               const result = subject.marksSecured >= subject.minMarks ? 'Pass' : 'Fail';\n// //               return (\n// //                 <TableRow key={index}>\n// //                   <TableCell>{index + 1}</TableCell>\n// //                   <TableCell>{subject.subject}</TableCell>\n// //                   <TableCell align=\"right\">{subject.maxMarks}</TableCell>\n// //                   <TableCell align=\"right\">{subject.minMarks}</TableCell>\n// //                   <TableCell align=\"right\">{subject.marksSecured}</TableCell>\n// //                   <TableCell align=\"center\">{result}</TableCell>\n// //                 </TableRow>\n// //               );\n// //             })}\n\n// //             <TableRow sx={{ backgroundColor: '#f0f0f0' }}>\n// //               <TableCell colSpan={2}><strong>Total</strong></TableCell>\n// //               <TableCell align=\"right\"><strong>{totalMaxMarks}</strong></TableCell>\n// //               <TableCell align=\"right\"><strong>{totalMinMarks}</strong></TableCell>\n// //               <TableCell align=\"right\"><strong>{totalSecuredMarks}</strong></TableCell>\n// //               <TableCell align=\"center\"><strong>{overallResult}</strong></TableCell>\n// //             </TableRow>\n// //           </TableBody>\n// //         </Table>\n// //       </TableContainer>\n\n// //       {/* Total in Words */}\n// //       <Box sx={{ mt: 3 }}>\n// //         <Typography><strong>Total Marks in Words:</strong> {totalInWords.toUpperCase()}</Typography>\n// //       </Box>\n// //     </Box>\n// //   );\n// // };\n\n// // export default FormComponentAnesthesia;\n// // FormComponentAnesthesia2.js\n// import React from 'react';\n// import {\n//   Table, TableBody, TableCell, TableContainer,\n//   TableHead, TableRow, Typography, Paper\n// } from '@mui/material';\n\n// const FormComponentAnesthesia2 = ({ formData }) => {\n//   return (\n//     <TableContainer component={Paper} sx={{ my: 4 }}>\n//       <Typography variant=\"h6\" align=\"center\" sx={{ mt: 2 }}>\n//         Second Year Final Examination Marks (Anesthesia)\n//       </Typography>\n//       <Table>\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>Paper</TableCell>\n//             <TableCell>Subject</TableCell>\n//             <TableCell>Internal Max</TableCell>\n//             <TableCell>Internal Secured</TableCell>\n//             <TableCell>Theory Max</TableCell>\n//             <TableCell>Theory Secured</TableCell>\n//             <TableCell>Practicals Max</TableCell>\n//             <TableCell>Practicals Secured</TableCell>\n//             <TableCell>Result</TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {Subjects.map((row, index) => (\n//             <TableRow key={index}>\n//               <TableCell>{index + 1}</TableCell>\n//               <TableCell>{row.subject}</TableCell>\n//               <TableCell>{row.internalMax}</TableCell>\n//               <TableCell>{row.internalSecured}</TableCell>\n//               <TableCell>{row.theoryMax}</TableCell>\n//               <TableCell>{row.theorySecured}</TableCell>\n//               <TableCell>{row.practicalMax}</TableCell>\n//               <TableCell>{row.practicalSecured}</TableCell>\n//               <TableCell>{row.result}</TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//     </TableContainer>\n//   );\n// };\n\n// export default FormComponentAnesthesia2;\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}