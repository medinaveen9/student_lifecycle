{"ast":null,"code":"\n\n// // import React, { useState } from 'react';\n\n// // import {\n// //   Typography,\n// //   TextField,\n// //   Box\n// // } from '@mui/material';\n// // import { useNavigate } from 'react-router-dom';\n// // import { Button } from '@mui/material';\n// // import { useFormContext } from '../ApplicationBPT/FormContext'; \n// // const Application4 = () => {\n// //   const [formData, setFormData] = useState({\n// //     correspondence: {\n// //       address: '',\n// //       country: '',\n// //       state: '',\n// //       district: '',\n// //       pinCode: '',\n// //       mobile: '',\n// //       email: ''\n// //     },\n// //     permanent: {\n// //       address: '',\n// //       country: '',\n// //       state: '',\n// //       district: '',\n// //       pinCode: '',\n// //       mobile: '',\n// //       email: ''\n// //     },\n// //     otherInfo: ''\n// //   });\n// //   const { updateFormData } = useFormContext();\n// //   const handleChange = (section, field, value) => {\n// //     setFormData((prev) => ({\n// //       ...prev,\n// //       [section]: {\n// //         ...prev[section],\n// //         [field]: value\n// //       }\n// //     }));\n// //   };\n// //     const navigate = useNavigate();\n\n// //     const handleNext = () => {\n// //         // Update the form data before navigation\n// //         updateFormData({ \n// //           addressData: formData \n// //         });\n// //         navigate('/ap5');\n// //       };\n// //   return (\n// //     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n// //       {/* Correspondence Address */}\n// //       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n// //       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n// //         <TextField label=\"Address\" value={formData.correspondence.address} onChange={(e) => handleChange('correspondence', 'address', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Country\" value={formData.correspondence.country} onChange={(e) => handleChange('correspondence', 'country', e.target.value)} size=\"small\" />\n// //         <TextField label=\"State\" value={formData.correspondence.state} onChange={(e) => handleChange('correspondence', 'state', e.target.value)} size=\"small\" />\n// //         <TextField label=\"District\" value={formData.correspondence.district} onChange={(e) => handleChange('correspondence', 'district', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Pin Code\" value={formData.correspondence.pinCode} onChange={(e) => handleChange('correspondence', 'pinCode', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Mobile No.\" value={formData.correspondence.mobile} onChange={(e) => handleChange('correspondence', 'mobile', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Email ID\" value={formData.correspondence.email} onChange={(e) => handleChange('correspondence', 'email', e.target.value)} size=\"small\" />\n// //       </Box>\n\n// //       {/* Permanent Address */}\n// //       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n// //       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n// //         <TextField label=\"Address\" value={formData.permanent.address} onChange={(e) => handleChange('permanent', 'address', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Country\" value={formData.permanent.country} onChange={(e) => handleChange('permanent', 'country', e.target.value)} size=\"small\" />\n// //         <TextField label=\"State\" value={formData.permanent.state} onChange={(e) => handleChange('permanent', 'state', e.target.value)} size=\"small\" />\n// //         <TextField label=\"District\" value={formData.permanent.district} onChange={(e) => handleChange('permanent', 'district', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Pin Code\" value={formData.permanent.pinCode} onChange={(e) => handleChange('permanent', 'pinCode', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Mobile No.\" value={formData.permanent.mobile} onChange={(e) => handleChange('permanent', 'mobile', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Email ID\" value={formData.permanent.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n// //         <TextField label=\" Fathers Email ID\" value={formData.fathers.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n// //       </Box>\n\n// //       {/* Other Info */}\n// //       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n// //       <TextField\n// //         label=\"Any Other Relevant Information\"\n// //         multiline\n// //         rows={3}\n// //         value={formData.otherInfo}\n// //         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n// //         size=\"small\"\n// //         sx={{ width: '100%' }}\n// //       />\n// //         <Box sx={{ mt: 3, textAlign: 'right' }}>\n// //               <Button variant=\"contained\" onClick={handleNext}>Next</Button>\n// //             </Box>\n// //     </Box>\n// //   );\n// // };\n\n// // export default Application4;\n\n// import React, { useState } from 'react';\n// import { Box, Typography, TextField, Button } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n// const Application4 = () => {\n//   const [formData, setFormData] = useState({\n//     correspondence: { address: '', country: '', state: '', district: '', pinCode: '', mobile: '', email: '' },\n//     permanent: { address: '', country: '', state: '', district: '', pinCode: '', mobile: '', email: '', fatherEmail: '' },\n//     otherInfo: ''\n//   });\n\n//   const { updateFormData } = useFormContext();\n//   const navigate = useNavigate();\n\n//   const fields = [\n//     // Correspondence\n//     { section: 'correspondence', label: 'Address', name: 'address' },\n//     { section: 'correspondence', label: 'Country', name: 'country' },\n//     { section: 'correspondence', label: 'State', name: 'state' },\n//     { section: 'correspondence', label: 'District', name: 'district' },\n//     { section: 'correspondence', label: 'Pin Code', name: 'pinCode' },\n//     { section: 'correspondence', label: 'Mobile No.', name: 'mobile' },\n//     { section: 'correspondence', label: 'Email ID', name: 'email' },\n\n//     // Permanent\n//     { section: 'permanent', label: 'Address', name: 'address' },\n//     { section: 'permanent', label: 'Country', name: 'country' },\n//     { section: 'permanent', label: 'State', name: 'state' },\n//     { section: 'permanent', label: 'District', name: 'district' },\n//     { section: 'permanent', label: 'Pin Code', name: 'pinCode' },\n//     { section: 'permanent', label: 'Mobile No.', name: 'mobile' },\n//     { section: 'permanent', label: 'Email ID', name: 'email' },\n//     { section: 'permanent', label: \"Father's Email ID\", name: 'fatherEmail' }\n//   ];\n\n//   const handleChange = (section, field, value) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       [section]: { ...prev[section], [field]: value }\n//     }));\n//   };\n\n//   const handleNext = () => {\n//     updateFormData({ addressData: formData });\n//     navigate('/ap5');\n//   };\n\n//   return (\n//     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n//       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         {fields.filter(f => f.section === 'correspondence').map(({ label, name, section }) => (\n//           <TextField\n//             key={`${section}-${name}`}\n//             label={label}\n//             value={formData[section][name]}\n//             onChange={(e) => handleChange(section, name, e.target.value)}\n//             size=\"small\"\n//           />\n//         ))}\n//       </Box>\n\n//       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         {fields.filter(f => f.section === 'permanent').map(({ label, name, section }) => (\n//           <TextField\n//             key={`${section}-${name}`}\n//             label={label}\n//             value={formData[section][name]}\n//             onChange={(e) => handleChange(section, name, e.target.value)}\n//             size=\"small\"\n//           />\n//         ))}\n//       </Box>\n\n//       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n//       <TextField\n//         label=\"Any Other Relevant Information\"\n//         multiline\n//         rows={3}\n//         fullWidth\n//         size=\"small\"\n//         value={formData.otherInfo}\n//         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n//       />\n\n//       <Box sx={{ mt: 3, textAlign: 'right' }}>\n//         <Button variant=\"contained\" onClick={handleNext}>Next</Button>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Application4;","map":{"version":3,"names":[],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/Application4.js"],"sourcesContent":["\n\n// // import React, { useState } from 'react';\n\n// // import {\n// //   Typography,\n// //   TextField,\n// //   Box\n// // } from '@mui/material';\n// // import { useNavigate } from 'react-router-dom';\n// // import { Button } from '@mui/material';\n// // import { useFormContext } from '../ApplicationBPT/FormContext'; \n// // const Application4 = () => {\n// //   const [formData, setFormData] = useState({\n// //     correspondence: {\n// //       address: '',\n// //       country: '',\n// //       state: '',\n// //       district: '',\n// //       pinCode: '',\n// //       mobile: '',\n// //       email: ''\n// //     },\n// //     permanent: {\n// //       address: '',\n// //       country: '',\n// //       state: '',\n// //       district: '',\n// //       pinCode: '',\n// //       mobile: '',\n// //       email: ''\n// //     },\n// //     otherInfo: ''\n// //   });\n// //   const { updateFormData } = useFormContext();\n// //   const handleChange = (section, field, value) => {\n// //     setFormData((prev) => ({\n// //       ...prev,\n// //       [section]: {\n// //         ...prev[section],\n// //         [field]: value\n// //       }\n// //     }));\n// //   };\n// //     const navigate = useNavigate();\n \n \n// //     const handleNext = () => {\n// //         // Update the form data before navigation\n// //         updateFormData({ \n// //           addressData: formData \n// //         });\n// //         navigate('/ap5');\n// //       };\n// //   return (\n// //     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n// //       {/* Correspondence Address */}\n// //       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n// //       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n// //         <TextField label=\"Address\" value={formData.correspondence.address} onChange={(e) => handleChange('correspondence', 'address', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Country\" value={formData.correspondence.country} onChange={(e) => handleChange('correspondence', 'country', e.target.value)} size=\"small\" />\n// //         <TextField label=\"State\" value={formData.correspondence.state} onChange={(e) => handleChange('correspondence', 'state', e.target.value)} size=\"small\" />\n// //         <TextField label=\"District\" value={formData.correspondence.district} onChange={(e) => handleChange('correspondence', 'district', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Pin Code\" value={formData.correspondence.pinCode} onChange={(e) => handleChange('correspondence', 'pinCode', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Mobile No.\" value={formData.correspondence.mobile} onChange={(e) => handleChange('correspondence', 'mobile', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Email ID\" value={formData.correspondence.email} onChange={(e) => handleChange('correspondence', 'email', e.target.value)} size=\"small\" />\n// //       </Box>\n\n// //       {/* Permanent Address */}\n// //       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n// //       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n// //         <TextField label=\"Address\" value={formData.permanent.address} onChange={(e) => handleChange('permanent', 'address', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Country\" value={formData.permanent.country} onChange={(e) => handleChange('permanent', 'country', e.target.value)} size=\"small\" />\n// //         <TextField label=\"State\" value={formData.permanent.state} onChange={(e) => handleChange('permanent', 'state', e.target.value)} size=\"small\" />\n// //         <TextField label=\"District\" value={formData.permanent.district} onChange={(e) => handleChange('permanent', 'district', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Pin Code\" value={formData.permanent.pinCode} onChange={(e) => handleChange('permanent', 'pinCode', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Mobile No.\" value={formData.permanent.mobile} onChange={(e) => handleChange('permanent', 'mobile', e.target.value)} size=\"small\" />\n// //         <TextField label=\"Email ID\" value={formData.permanent.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n// //         <TextField label=\" Fathers Email ID\" value={formData.fathers.email} onChange={(e) => handleChange('permanent', 'email', e.target.value)} size=\"small\" />\n// //       </Box>\n\n// //       {/* Other Info */}\n// //       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n// //       <TextField\n// //         label=\"Any Other Relevant Information\"\n// //         multiline\n// //         rows={3}\n// //         value={formData.otherInfo}\n// //         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n// //         size=\"small\"\n// //         sx={{ width: '100%' }}\n// //       />\n// //         <Box sx={{ mt: 3, textAlign: 'right' }}>\n// //               <Button variant=\"contained\" onClick={handleNext}>Next</Button>\n// //             </Box>\n// //     </Box>\n// //   );\n// // };\n\n// // export default Application4;\n\n// import React, { useState } from 'react';\n// import { Box, Typography, TextField, Button } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n// const Application4 = () => {\n//   const [formData, setFormData] = useState({\n//     correspondence: { address: '', country: '', state: '', district: '', pinCode: '', mobile: '', email: '' },\n//     permanent: { address: '', country: '', state: '', district: '', pinCode: '', mobile: '', email: '', fatherEmail: '' },\n//     otherInfo: ''\n//   });\n\n//   const { updateFormData } = useFormContext();\n//   const navigate = useNavigate();\n\n//   const fields = [\n//     // Correspondence\n//     { section: 'correspondence', label: 'Address', name: 'address' },\n//     { section: 'correspondence', label: 'Country', name: 'country' },\n//     { section: 'correspondence', label: 'State', name: 'state' },\n//     { section: 'correspondence', label: 'District', name: 'district' },\n//     { section: 'correspondence', label: 'Pin Code', name: 'pinCode' },\n//     { section: 'correspondence', label: 'Mobile No.', name: 'mobile' },\n//     { section: 'correspondence', label: 'Email ID', name: 'email' },\n\n//     // Permanent\n//     { section: 'permanent', label: 'Address', name: 'address' },\n//     { section: 'permanent', label: 'Country', name: 'country' },\n//     { section: 'permanent', label: 'State', name: 'state' },\n//     { section: 'permanent', label: 'District', name: 'district' },\n//     { section: 'permanent', label: 'Pin Code', name: 'pinCode' },\n//     { section: 'permanent', label: 'Mobile No.', name: 'mobile' },\n//     { section: 'permanent', label: 'Email ID', name: 'email' },\n//     { section: 'permanent', label: \"Father's Email ID\", name: 'fatherEmail' }\n//   ];\n\n//   const handleChange = (section, field, value) => {\n//     setFormData(prev => ({\n//       ...prev,\n//       [section]: { ...prev[section], [field]: value }\n//     }));\n//   };\n\n//   const handleNext = () => {\n//     updateFormData({ addressData: formData });\n//     navigate('/ap5');\n//   };\n\n//   return (\n//     <Box sx={{ p: 8, border: '1px solid #ccc', borderRadius: 2 }}>\n//       <Typography variant=\"h6\" gutterBottom>Correspondence Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         {fields.filter(f => f.section === 'correspondence').map(({ label, name, section }) => (\n//           <TextField\n//             key={`${section}-${name}`}\n//             label={label}\n//             value={formData[section][name]}\n//             onChange={(e) => handleChange(section, name, e.target.value)}\n//             size=\"small\"\n//           />\n//         ))}\n//       </Box>\n\n//       <Typography variant=\"h6\" gutterBottom>Permanent Address</Typography>\n//       <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, mb: 3 }}>\n//         {fields.filter(f => f.section === 'permanent').map(({ label, name, section }) => (\n//           <TextField\n//             key={`${section}-${name}`}\n//             label={label}\n//             value={formData[section][name]}\n//             onChange={(e) => handleChange(section, name, e.target.value)}\n//             size=\"small\"\n//           />\n//         ))}\n//       </Box>\n\n//       <Typography variant=\"h6\" gutterBottom>Other Details</Typography>\n//       <TextField\n//         label=\"Any Other Relevant Information\"\n//         multiline\n//         rows={3}\n//         fullWidth\n//         size=\"small\"\n//         value={formData.otherInfo}\n//         onChange={(e) => setFormData({ ...formData, otherInfo: e.target.value })}\n//       />\n\n//       <Box sx={{ mt: 3, textAlign: 'right' }}>\n//         <Button variant=\"contained\" onClick={handleNext}>Next</Button>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Application4;\n"],"mappings":";;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}