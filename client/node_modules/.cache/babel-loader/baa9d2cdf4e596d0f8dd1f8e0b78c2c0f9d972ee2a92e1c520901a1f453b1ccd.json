{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationReportBPT.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import {\n//   Box, Typography, TextField, Grid, Paper, Table, TableBody, \n//   TableCell, TableContainer, TableHead, TableRow, Checkbox, Button\n// } from '@mui/material';\n\n// const ApplicationReportBPT = () => {\n//   // Constants for repeated values\n//   const SUBJECTS = ['Botany', 'Zoology', 'Physics', 'Chemistry', 'English', 'Second Language'];\n//   const DOCUMENTS = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EXPECT-2025 RANK CARD'\n//   ];\n\n//   // Initial form state\n//   const initialFormData = {\n//     // Advertisement Details\n//     adNo: '',\n//     adDate: '',\n//     applicationNo: '',\n//     courseName: '',\n//     courseCode: '',\n//     dateOfEntry: '',\n//     lastDate: '',\n//     department: '',\n\n//     // Applicant's Details\n//     name: '',\n//     fatherName: '',\n//     dob: '',\n//     age: '',\n//     placeOfBirth: '',\n//     socialStatus: '',\n//     nationality: '',\n//     maritalStatus: '',\n//     gender: '',\n//     differentlyAbled: '',\n//     mark1: '',\n//     mark2: '',\n//     universityArea: '',\n//     inService: '',\n//     aadhar: '',\n//     fatherEmail: '',\n\n//     // Address Details\n//     correspondenceAddress: '',\n//     correspondenceCountry: 'India',\n//     correspondenceState: '',\n//     correspondenceDistrict: '',\n//     correspondencePincode: '',\n//     correspondenceMobile: '',\n//     correspondenceEmail: '',\n//     sameAsCorrespondence: true,\n//     permanentAddress: '',\n//     permanentCountry: 'India',\n//     permanentState: '',\n//     permanentDistrict: '',\n//     permanentPincode: '',\n//     permanentMobile: '',\n//     permanentEmail: '',\n\n//     // Parents' Details\n//     fatherNameParent: '',\n//     fatherAge: '',\n//     fatherOccupation: '',\n//     motherName: '',\n//     motherAge: '',\n//     motherOccupation: '',\n\n//     // Intermediate Marks\n//     subjects: SUBJECTS.map(subject => ({\n//       subject,\n//       y1: '',\n//       y2: '',\n//       practical: ['Botany', 'Zoology', 'Physics', 'Chemistry'].includes(subject) ? '' : '-',\n//       total: '',\n//       max: ''\n//     })),\n//     totalMarks: '',\n//     totalPercentage: '',\n//     groupTotal: '',\n//     groupPercentage: '',\n\n//     // Educational History (7 years)\n//     educationHistory: Array(7).fill().map(() => ({\n//       class: '',\n//       year: '',\n//       school: '',\n//       place: ''\n//     })),\n\n//     // EAPCET Details\n//     eapcetRegNo: '',\n//     hallTicketNo: '',\n//     rank: '',\n\n//     // Payment Details\n//     paymentType: '',\n//     transactionId: '',\n//     paymentDate: '',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '',\n//     paymentRemarks: '',\n\n//     // Declaration\n//     signature: '',\n//     declarationDate: '',\n//     officeRemarks: ''\n//   };\n\n//   const [formData, setFormData] = React.useState(initialFormData);\n\n//   // Memoized handler for better performance\n//   const handleChange = React.useCallback((e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   }, []);\n\n//   const handleSubjectChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedSubjects = [...prev.subjects];\n//       updatedSubjects[index] = { ...updatedSubjects[index], [field]: value };\n//       return { ...prev, subjects: updatedSubjects };\n//     });\n//   }, []);\n\n//   const handleEducationChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedEducation = [...prev.educationHistory];\n//       updatedEducation[index] = { ...updatedEducation[index], [field]: value };\n//       return { ...prev, educationHistory: updatedEducation };\n//     });\n//   }, []);\n\n//   const handleSameAddressChange = React.useCallback((e) => {\n//     const checked = e.target.checked;\n//     setFormData(prev => ({\n//       ...prev,\n//       sameAsCorrespondence: checked,\n//       permanentAddress: checked ? prev.correspondenceAddress : '',\n//       permanentCountry: checked ? prev.correspondenceCountry : '',\n//       permanentState: checked ? prev.correspondenceState : '',\n//       permanentDistrict: checked ? prev.correspondenceDistrict : '',\n//       permanentPincode: checked ? prev.correspondencePincode : '',\n//       permanentMobile: checked ? prev.correspondenceMobile : '',\n//       permanentEmail: checked ? prev.correspondenceEmail : ''\n//     }));\n//   }, []);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('Form submitted:', formData);\n//     // Add your form submission logic here\n//   };\n\n//   // Reusable form section component\n//   const FormSection = ({ title, children }) => (\n//     <Grid item xs={12}>\n//       <Paper elevation={2} sx={{ p: 2 }}>\n//         <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\n//           {title}\n//         </Typography>\n//         {children}\n//       </Paper>\n//     </Grid>\n//   );\n\n//   // Reusable text field component\n//   const FormTextField = ({ name, label, ...props }) => (\n//     <TextField\n//       name={name}\n//       label={label}\n//       value={formData[name]}\n//       onChange={handleChange}\n//       fullWidth\n//       {...props}\n//     />\n//   );\n\n//   return (\n//     <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n//       <Typography variant=\"h5\" gutterBottom align=\"center\">\n//         APPLICATION FORM - Bachelor of Physiotherapy - 2025\n//       </Typography>\n\n//       <Grid container spacing={3}>\n//         {/* Advertisement Details */}\n//         <FormSection title=\"Advertisement Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"adNo\" label=\"Ad. No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"adDate\" label=\"Ad. Date\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"applicationNo\" label=\"Application No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseName\" label=\"Course Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseCode\" label=\"Course Code\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dateOfEntry\" label=\"Date of Entry\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"lastDate\" label=\"Last Date of Application\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"department\" label=\"Department\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Applicant's Details */}\n//         <FormSection title=\"Applicant's Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"name\" label=\"Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherName\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dob\" label=\"Date of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"age\" label=\"Age (on last date)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"placeOfBirth\" label=\"Place of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"socialStatus\" label=\"Social Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"nationality\" label=\"Nationality\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"maritalStatus\" label=\"Marital Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"gender\" label=\"Gender\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"differentlyAbled\" label=\"Differently Abled\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark1\" label=\"Identification Mark 1\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark2\" label=\"Identification Mark 2\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"universityArea\" label=\"University Area\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"inService\" label=\"In-service (Govt.)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"aadhar\" label=\"Aadhar\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherEmail\" label=\"Father's Email\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Address Details */}\n//         <FormSection title=\"Address Details\">\n//           {/* Correspondence Address */}\n//           <Box sx={{ mb: 3 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Correspondence Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <FormTextField \n//                   name=\"correspondenceAddress\"\n//                   label=\"Address\" \n//                   multiline\n//                   rows={2}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceCountry\" label=\"Country\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceState\" label=\"State\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceDistrict\" label=\"District\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondencePincode\" label=\"Pin Code\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceMobile\" label=\"Mobile No.\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceEmail\" label=\"E-mail Id\" /></Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Permanent Address */}\n//           <Box sx={{ mb: 2 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Permanent Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <TextField \n//                   name=\"permanentAddress\"\n//                   label=\"Address\" \n//                   value={formData.permanentAddress}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   multiline\n//                   rows={2}\n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentCountry\"\n//                   label=\"Country\" \n//                   value={formData.permanentCountry}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentState\"\n//                   label=\"State\" \n//                   value={formData.permanentState}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentDistrict\"\n//                   label=\"District\" \n//                   value={formData.permanentDistrict}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentPincode\"\n//                   label=\"Pin Code\" \n//                   value={formData.permanentPincode}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentMobile\"\n//                   label=\"Mobile No.\" \n//                   value={formData.permanentMobile}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentEmail\"\n//                   label=\"E-mail Id\" \n//                   value={formData.permanentEmail}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Checkbox for same address */}\n//           <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//             <Checkbox \n//               checked={formData.sameAsCorrespondence} \n//               onChange={handleSameAddressChange} \n//             />\n//             <Typography variant=\"body2\">Same as Correspondence Address</Typography>\n//           </Box>\n//         </FormSection>\n\n//         {/* Parents' Details */}\n//         <FormSection title=\"Parents' Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"fatherNameParent\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherOccupation\" label=\"Occupation\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherName\" label=\"Mother's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherOccupation\" label=\"Occupation\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Intermediate Marks */}\n//         <FormSection title=\"Intermediate Marks (Telangana State)\">\n//           <Grid container spacing={1}>\n//             {formData.subjects.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Subject\" \n//                     value={item.subject} \n//                     fullWidth \n//                     InputProps={{ readOnly: true }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"1st Year\" \n//                     value={item.y1}\n//                     onChange={(e) => handleSubjectChange(index, 'y1', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"2nd Year\" \n//                     value={item.y2}\n//                     onChange={(e) => handleSubjectChange(index, 'y2', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"Practical\" \n//                     value={item.practical}\n//                     onChange={item.practical !== '-' ? \n//                       (e) => handleSubjectChange(index, 'practical', e.target.value) : undefined}\n//                     fullWidth \n//                     InputProps={{ readOnly: item.practical === '-' }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Total\" \n//                     value={item.total}\n//                     onChange={(e) => handleSubjectChange(index, 'total', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Max Marks\" \n//                     value={item.max}\n//                     onChange={(e) => handleSubjectChange(index, 'max', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n\n//           <Box mt={2}>\n//             <FormTextField name=\"totalMarks\" label=\"Total Marks\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"totalPercentage\" label=\"Total Percentage\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupTotal\" label=\"Group Total\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupPercentage\" label=\"Group Percentage\" />\n//           </Box>\n//         </FormSection>\n\n//         {/* Educational History */}\n//         <FormSection title=\"Educational History\">\n//           <Grid container spacing={2}>\n//             {formData.educationHistory.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Class\" \n//                     value={item.class}\n//                     onChange={(e) => handleEducationChange(index, 'class', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Year\" \n//                     value={item.year}\n//                     onChange={(e) => handleEducationChange(index, 'year', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={4}>\n//                   <TextField \n//                     label=\"School\" \n//                     value={item.school}\n//                     onChange={(e) => handleEducationChange(index, 'school', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Place\" \n//                     value={item.place}\n//                     onChange={(e) => handleEducationChange(index, 'place', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n//         </FormSection>\n\n//         {/* EAPCET Details */}\n//         <FormSection title=\"EAPCET Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"eapcetRegNo\" label=\"TG EAPCET Reg No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"hallTicketNo\" label=\"Hall Ticket No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"rank\" label=\"Rank\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Payment Details */}\n//         <FormSection title=\"Payment Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"paymentType\" label=\"Payment Type\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"transactionId\" label=\"Transaction ID\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"paymentDate\" label=\"Payment Date\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"bankName\" label=\"Bank Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"branchDetails\" label=\"Branch Details\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"amount\" label=\"Amount (Rs.)\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"paymentRemarks\" label=\"Remarks\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Document Details */}\n//         <FormSection title=\"Document Details\">\n//           <TableContainer>\n//             <Table>\n//               <TableHead>\n//                 <TableRow>\n//                   <TableCell>S.No.</TableCell>\n//                   <TableCell>Document Type</TableCell>\n//                 </TableRow>\n//               </TableHead>\n//               <TableBody>\n//                 {DOCUMENTS.map((type, index) => (\n//                   <TableRow key={index}>\n//                     <TableCell>{index + 1}</TableCell>\n//                     <TableCell>{type}</TableCell>\n//                   </TableRow>\n//                 ))}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//         </FormSection>\n\n//         {/* Declaration */}\n//         <FormSection title=\"Declaration\">\n//           <Typography paragraph>\n//             I declare that the particulars given above are correct. I agree to abide by the admission prospectus issued by the Institute. I also declare that in the event that information provided is incorrect or false. I may be prosecuted as per law.\n//           </Typography>\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"signature\" label=\"Signature\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"declarationDate\" label=\"Date\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"officeRemarks\" label=\"Remarks (For office use only)\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Submit Button */}\n//         <Grid item xs={12}>\n//           <Button \n//             type=\"submit\" \n//             variant=\"contained\" \n//             color=\"primary\" \n//             size=\"large\"\n//             fullWidth\n//           >\n//             Submit Application\n//           </Button>\n//         </Grid>\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n// import ReactToPrint from 'react-to-print';\n\n// import React, { useState, useRef } from 'react';\n// import {\n//   Box, Typography, TextField, Grid, Paper, Table, TableBody,\n//   TableCell, TableContainer, TableHead, TableRow, Checkbox, Button,\n//   Dialog, DialogActions, DialogContent, DialogTitle\n// } from '@mui/material';\n// import { useReactToPrint } from 'react-to-print';\n// import ReviewerReport from '../ApplicationBPT/ReportView'; // Adjust path as needed\n// const ApplicationReportBPT = () => {\n//   // ... (keep all your existing constants and initial state)\n\n//   const [showReport, setShowReport] = useState(false);\n//   const reportRef = useRef();\n\n//   // Print handler\n//   const handlePrint = useReactToPrint({\n//     content: () => reportRef.current,\n//     pageStyle: `\n//       @media print {\n//         body { -webkit-print-color-adjust: exact; }\n//         .no-print { display: none !important; }\n//         @page { size: A4; margin: 10mm; }\n//       }\n//     `\n//   });\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setShowReport(true);\n//   };\n\n//   const handleCloseReport = () => {\n//     setShowReport(false);\n//   };\n\n//   // Render the form\n//   if (!showReport) {\n//     return (\n//       <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n//         {/* Keep all your existing form JSX */}\n//         <Grid container spacing={3}>\n//           {/* All your form sections */}\n//         </Grid>\n//       </Box>\n//     );\n//   }\n\n//   const handleBackToForm = () => {\n//     setShowReport(false);\n//   };\n\n//   if (showReport) {\n//     return (\n//       <div ref={reportRef}>\n//         <ReviewerReport \n//           formData={formData}\n//           onBack={handleBackToForm}\n//           onPrint={handlePrint}\n//         />\n//       </div>\n//     );\n//   }\n//   // Render the report\n//   return (\n//     <Box sx={{ p: 4 }} ref={reportRef}>\n//       <Typography variant=\"h4\" align=\"center\" gutterBottom sx={{ mb: 4 }}>\n//         APPLICATION FORM REPORT - Bachelor of Physiotherapy - 2025\n//       </Typography>\n\n//       {/* Report Content - Display all form data */}\n//       <Grid container spacing={3}>\n//         {/* Advertisement Details */}\n//         <Grid item xs={12}>\n//           <Paper elevation={2} sx={{ p: 2 }}>\n//             <Typography variant=\"h6\" gutterBottom>Advertisement Details</Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={6}><Typography><strong>Ad. No.:</strong> {formData.adNo}</Typography></Grid>\n//               <Grid item xs={6}><Typography><strong>Ad. Date:</strong> {formData.adDate}</Typography></Grid>\n//               {/* Add all other fields similarly */}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n\n//         {/* Applicant's Details */}\n//         <Grid item xs={12}>\n//           <Paper elevation={2} sx={{ p: 2 }}>\n//             <Typography variant=\"h6\" gutterBottom>Applicant's Details</Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={6}><Typography><strong>Name:</strong> {formData.name}</Typography></Grid>\n//               <Grid item xs={6}><Typography><strong>Father's Name:</strong> {formData.fatherName}</Typography></Grid>\n//               {/* Add all other applicant details */}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n\n//         {/* Continue with all other sections in similar fashion */}\n\n//         {/* Intermediate Marks */}\n//         <Grid item xs={12}>\n//           <Paper elevation={2} sx={{ p: 2 }}>\n//             <Typography variant=\"h6\" gutterBottom>Intermediate Marks</Typography>\n//             <TableContainer>\n//               <Table>\n//                 <TableHead>\n//                   <TableRow>\n//                     <TableCell>Subject</TableCell>\n//                     <TableCell>1st Year</TableCell>\n//                     <TableCell>2nd Year</TableCell>\n//                     <TableCell>Practical</TableCell>\n//                     <TableCell>Total</TableCell>\n//                     <TableCell>Max Marks</TableCell>\n//                   </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                   {formData.subjects.map((subject, index) => (\n//                     <TableRow key={index}>\n//                       <TableCell>{subject.subject}</TableCell>\n//                       <TableCell>{subject.y1}</TableCell>\n//                       <TableCell>{subject.y2}</TableCell>\n//                       <TableCell>{subject.practical}</TableCell>\n//                       <TableCell>{subject.total}</TableCell>\n//                       <TableCell>{subject.max}</TableCell>\n//                     </TableRow>\n//                   ))}\n//                 </TableBody>\n//               </Table>\n//             </TableContainer>\n//           </Paper>\n//         </Grid>\n\n//         {/* Action Buttons */}\n//         <Grid item xs={12} sx={{ mt: 4, display: 'flex', justifyContent: 'space-between' }} className=\"no-print\">\n//           <Button \n//             variant=\"contained\" \n//             color=\"secondary\"\n//             onClick={handleCloseReport}\n//             sx={{ mr: 2 }}\n//           >\n//             Back to Form\n//           </Button>\n//           <Button \n//             variant=\"contained\" \n//             color=\"primary\"\n//             onClick={handlePrint}\n//           >\n//             Print Report\n//           </Button>\n//         </Grid>\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n\nimport React, { useState, useRef } from 'react';\nimport { Box, Typography, TextField, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button } from '@mui/material';\nimport { useReactToPrint } from 'react-to-print';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationReportBPT = () => {\n  _s();\n  const [showReport, setShowReport] = useState(false);\n  const reportRef = useRef();\n  const [formData, setFormData] = useState({\n    adNo: '',\n    adDate: '',\n    name: '',\n    fatherName: '',\n    subjects: [{\n      subject: '',\n      y1: '',\n      y2: '',\n      practical: '',\n      total: '',\n      max: ''\n    }]\n  });\n  const handlePrint = useReactToPrint({\n    content: () => reportRef.current,\n    pageStyle: `\n      @media print {\n        body { -webkit-print-color-adjust: exact; }\n        .no-print { display: none !important; }\n        @page { size: A4; margin: 10mm; }\n      }\n    `\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    setShowReport(true);\n  };\n  const handleCloseReport = () => {\n    setShowReport(false);\n  };\n  const handleSubjectChange = (index, field, value) => {\n    const updatedSubjects = [...formData.subjects];\n    updatedSubjects[index][field] = value;\n    setFormData({\n      ...formData,\n      subjects: updatedSubjects\n    });\n  };\n  const addSubjectRow = () => {\n    setFormData({\n      ...formData,\n      subjects: [...formData.subjects, {\n        subject: '',\n        y1: '',\n        y2: '',\n        practical: '',\n        total: '',\n        max: ''\n      }]\n    });\n  };\n  if (!showReport) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        pt: 4,\n        px: 6,\n        pb: 7\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Application Form - Bachelor of Physiotherapy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Ad. No.\",\n            fullWidth: true,\n            value: formData.adNo,\n            onChange: e => setFormData({\n              ...formData,\n              adNo: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Ad. Date\",\n            type: \"date\",\n            fullWidth: true,\n            InputLabelProps: {\n              shrink: true\n            },\n            value: formData.adDate,\n            onChange: e => setFormData({\n              ...formData,\n              adDate: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            fullWidth: true,\n            value: formData.name,\n            onChange: e => setFormData({\n              ...formData,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Father's Name\",\n            fullWidth: true,\n            value: formData.fatherName,\n            onChange: e => setFormData({\n              ...formData,\n              fatherName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Intermediate Marks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this), formData.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Subject\",\n                fullWidth: true,\n                value: subject.subject,\n                onChange: e => handleSubjectChange(index, 'subject', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"1st Year\",\n                fullWidth: true,\n                value: subject.y1,\n                onChange: e => handleSubjectChange(index, 'y1', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"2nd Year\",\n                fullWidth: true,\n                value: subject.y2,\n                onChange: e => handleSubjectChange(index, 'y2', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Practical\",\n                fullWidth: true,\n                value: subject.practical,\n                onChange: e => handleSubjectChange(index, 'practical', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Total\",\n                fullWidth: true,\n                value: subject.total,\n                onChange: e => handleSubjectChange(index, 'total', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Max Marks\",\n                fullWidth: true,\n                value: subject.max,\n                onChange: e => handleSubjectChange(index, 'max', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: addSubjectRow,\n            children: \"+ Add Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Preview Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    ref: reportRef,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        mb: 4\n      },\n      children: \"APPLICATION FORM REPORT - Bachelor of Physiotherapy - 2025\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Advertisement Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ad. No.:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 892,\n                  columnNumber: 45\n                }, this), \" \", formData.adNo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ad. Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 893,\n                  columnNumber: 45\n                }, this), \" \", formData.adDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Applicant's Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 45\n                }, this), \" \", formData.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Father's Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 904,\n                  columnNumber: 45\n                }, this), \" \", formData.fatherName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Intermediate Marks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"1st Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 918,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"2nd Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 919,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Practical\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 921,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Max Marks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 922,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: formData.subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.subject\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.y1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 929,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.y2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 930,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.practical\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 932,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: subject.max\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 933,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sx: {\n          mt: 4,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        className: \"no-print\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCloseReport,\n          children: \"Back to Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handlePrint,\n          children: \"Print Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 881,\n    columnNumber: 5\n  }, this);\n};\n_s(ApplicationReportBPT, \"0b77iGK0JYUMaPVFmw3hppkWSrg=\", false, function () {\n  return [useReactToPrint];\n});\n_c = ApplicationReportBPT;\nexport default ApplicationReportBPT;\nvar _c;\n$RefreshReg$(_c, \"ApplicationReportBPT\");","map":{"version":3,"names":["React","useState","useRef","Box","Typography","TextField","Grid","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","useReactToPrint","jsxDEV","_jsxDEV","ApplicationReportBPT","_s","showReport","setShowReport","reportRef","formData","setFormData","adNo","adDate","name","fatherName","subjects","subject","y1","y2","practical","total","max","handlePrint","content","current","pageStyle","handleSubmit","e","preventDefault","handleCloseReport","handleSubjectChange","index","field","value","updatedSubjects","addSubjectRow","component","onSubmit","sx","pt","px","pb","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","label","fullWidth","onChange","target","type","InputLabelProps","shrink","map","mb","onClick","color","p","ref","align","elevation","mt","display","justifyContent","className","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationReportBPT.js"],"sourcesContent":["// import React from 'react';\n// import {\n//   Box, Typography, TextField, Grid, Paper, Table, TableBody, \n//   TableCell, TableContainer, TableHead, TableRow, Checkbox, Button\n// } from '@mui/material';\n\n// const ApplicationReportBPT = () => {\n//   // Constants for repeated values\n//   const SUBJECTS = ['Botany', 'Zoology', 'Physics', 'Chemistry', 'English', 'Second Language'];\n//   const DOCUMENTS = [\n//     'CASTE CERTIFICATE',\n//     '10th Class Marks Memo',\n//     'INTERMEDIATE MARKS MEMO',\n//     '6TH to 10TH Study and Conduct Certificate',\n//     'INTER STUDY AND CONDUCT CERTIFICATE',\n//     'TRANSFER OR MIGRATION CERTIFICATE of Intermediate',\n//     'TELANGANA STATE EXPECT-2025 RANK CARD'\n//   ];\n\n//   // Initial form state\n//   const initialFormData = {\n//     // Advertisement Details\n//     adNo: '',\n//     adDate: '',\n//     applicationNo: '',\n//     courseName: '',\n//     courseCode: '',\n//     dateOfEntry: '',\n//     lastDate: '',\n//     department: '',\n\n//     // Applicant's Details\n//     name: '',\n//     fatherName: '',\n//     dob: '',\n//     age: '',\n//     placeOfBirth: '',\n//     socialStatus: '',\n//     nationality: '',\n//     maritalStatus: '',\n//     gender: '',\n//     differentlyAbled: '',\n//     mark1: '',\n//     mark2: '',\n//     universityArea: '',\n//     inService: '',\n//     aadhar: '',\n//     fatherEmail: '',\n\n//     // Address Details\n//     correspondenceAddress: '',\n//     correspondenceCountry: 'India',\n//     correspondenceState: '',\n//     correspondenceDistrict: '',\n//     correspondencePincode: '',\n//     correspondenceMobile: '',\n//     correspondenceEmail: '',\n//     sameAsCorrespondence: true,\n//     permanentAddress: '',\n//     permanentCountry: 'India',\n//     permanentState: '',\n//     permanentDistrict: '',\n//     permanentPincode: '',\n//     permanentMobile: '',\n//     permanentEmail: '',\n\n//     // Parents' Details\n//     fatherNameParent: '',\n//     fatherAge: '',\n//     fatherOccupation: '',\n//     motherName: '',\n//     motherAge: '',\n//     motherOccupation: '',\n\n//     // Intermediate Marks\n//     subjects: SUBJECTS.map(subject => ({\n//       subject,\n//       y1: '',\n//       y2: '',\n//       practical: ['Botany', 'Zoology', 'Physics', 'Chemistry'].includes(subject) ? '' : '-',\n//       total: '',\n//       max: ''\n//     })),\n//     totalMarks: '',\n//     totalPercentage: '',\n//     groupTotal: '',\n//     groupPercentage: '',\n\n//     // Educational History (7 years)\n//     educationHistory: Array(7).fill().map(() => ({\n//       class: '',\n//       year: '',\n//       school: '',\n//       place: ''\n//     })),\n\n//     // EAPCET Details\n//     eapcetRegNo: '',\n//     hallTicketNo: '',\n//     rank: '',\n\n//     // Payment Details\n//     paymentType: '',\n//     transactionId: '',\n//     paymentDate: '',\n//     bankName: '',\n//     branchDetails: '',\n//     amount: '',\n//     paymentRemarks: '',\n\n//     // Declaration\n//     signature: '',\n//     declarationDate: '',\n//     officeRemarks: ''\n//   };\n\n//   const [formData, setFormData] = React.useState(initialFormData);\n\n//   // Memoized handler for better performance\n//   const handleChange = React.useCallback((e) => {\n//     const { name, value } = e.target;\n//     setFormData(prev => ({ ...prev, [name]: value }));\n//   }, []);\n\n//   const handleSubjectChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedSubjects = [...prev.subjects];\n//       updatedSubjects[index] = { ...updatedSubjects[index], [field]: value };\n//       return { ...prev, subjects: updatedSubjects };\n//     });\n//   }, []);\n\n//   const handleEducationChange = React.useCallback((index, field, value) => {\n//     setFormData(prev => {\n//       const updatedEducation = [...prev.educationHistory];\n//       updatedEducation[index] = { ...updatedEducation[index], [field]: value };\n//       return { ...prev, educationHistory: updatedEducation };\n//     });\n//   }, []);\n\n//   const handleSameAddressChange = React.useCallback((e) => {\n//     const checked = e.target.checked;\n//     setFormData(prev => ({\n//       ...prev,\n//       sameAsCorrespondence: checked,\n//       permanentAddress: checked ? prev.correspondenceAddress : '',\n//       permanentCountry: checked ? prev.correspondenceCountry : '',\n//       permanentState: checked ? prev.correspondenceState : '',\n//       permanentDistrict: checked ? prev.correspondenceDistrict : '',\n//       permanentPincode: checked ? prev.correspondencePincode : '',\n//       permanentMobile: checked ? prev.correspondenceMobile : '',\n//       permanentEmail: checked ? prev.correspondenceEmail : ''\n//     }));\n//   }, []);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('Form submitted:', formData);\n//     // Add your form submission logic here\n//   };\n\n//   // Reusable form section component\n//   const FormSection = ({ title, children }) => (\n//     <Grid item xs={12}>\n//       <Paper elevation={2} sx={{ p: 2 }}>\n//         <Typography variant=\"subtitle1\" fontWeight=\"bold\" gutterBottom>\n//           {title}\n//         </Typography>\n//         {children}\n//       </Paper>\n//     </Grid>\n//   );\n\n//   // Reusable text field component\n//   const FormTextField = ({ name, label, ...props }) => (\n//     <TextField\n//       name={name}\n//       label={label}\n//       value={formData[name]}\n//       onChange={handleChange}\n//       fullWidth\n//       {...props}\n//     />\n//   );\n\n//   return (\n//     <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n//       <Typography variant=\"h5\" gutterBottom align=\"center\">\n//         APPLICATION FORM - Bachelor of Physiotherapy - 2025\n//       </Typography>\n\n//       <Grid container spacing={3}>\n//         {/* Advertisement Details */}\n//         <FormSection title=\"Advertisement Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"adNo\" label=\"Ad. No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"adDate\" label=\"Ad. Date\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"applicationNo\" label=\"Application No.\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseName\" label=\"Course Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"courseCode\" label=\"Course Code\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dateOfEntry\" label=\"Date of Entry\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"lastDate\" label=\"Last Date of Application\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"department\" label=\"Department\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Applicant's Details */}\n//         <FormSection title=\"Applicant's Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"name\" label=\"Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherName\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"dob\" label=\"Date of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"age\" label=\"Age (on last date)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"placeOfBirth\" label=\"Place of Birth\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"socialStatus\" label=\"Social Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"nationality\" label=\"Nationality\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"maritalStatus\" label=\"Marital Status\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"gender\" label=\"Gender\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"differentlyAbled\" label=\"Differently Abled\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark1\" label=\"Identification Mark 1\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"mark2\" label=\"Identification Mark 2\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"universityArea\" label=\"University Area\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"inService\" label=\"In-service (Govt.)\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"aadhar\" label=\"Aadhar\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"fatherEmail\" label=\"Father's Email\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Address Details */}\n//         <FormSection title=\"Address Details\">\n//           {/* Correspondence Address */}\n//           <Box sx={{ mb: 3 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Correspondence Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <FormTextField \n//                   name=\"correspondenceAddress\"\n//                   label=\"Address\" \n//                   multiline\n//                   rows={2}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceCountry\" label=\"Country\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceState\" label=\"State\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceDistrict\" label=\"District\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondencePincode\" label=\"Pin Code\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceMobile\" label=\"Mobile No.\" /></Grid>\n//               <Grid item xs={6} md={3}><FormTextField name=\"correspondenceEmail\" label=\"E-mail Id\" /></Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Permanent Address */}\n//           <Box sx={{ mb: 2 }}>\n//             <Typography variant=\"subtitle2\" fontWeight=\"bold\" gutterBottom>\n//               Permanent Address\n//             </Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <TextField \n//                   name=\"permanentAddress\"\n//                   label=\"Address\" \n//                   value={formData.permanentAddress}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   multiline\n//                   rows={2}\n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentCountry\"\n//                   label=\"Country\" \n//                   value={formData.permanentCountry}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentState\"\n//                   label=\"State\" \n//                   value={formData.permanentState}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentDistrict\"\n//                   label=\"District\" \n//                   value={formData.permanentDistrict}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentPincode\"\n//                   label=\"Pin Code\" \n//                   value={formData.permanentPincode}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentMobile\"\n//                   label=\"Mobile No.\" \n//                   value={formData.permanentMobile}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//               <Grid item xs={6} md={3}>\n//                 <TextField \n//                   name=\"permanentEmail\"\n//                   label=\"E-mail Id\" \n//                   value={formData.permanentEmail}\n//                   onChange={handleChange}\n//                   fullWidth \n//                   disabled={formData.sameAsCorrespondence}\n//                 />\n//               </Grid>\n//             </Grid>\n//           </Box>\n\n//           {/* Checkbox for same address */}\n//           <Box sx={{ display: 'flex', alignItems: 'center' }}>\n//             <Checkbox \n//               checked={formData.sameAsCorrespondence} \n//               onChange={handleSameAddressChange} \n//             />\n//             <Typography variant=\"body2\">Same as Correspondence Address</Typography>\n//           </Box>\n//         </FormSection>\n\n//         {/* Parents' Details */}\n//         <FormSection title=\"Parents' Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"fatherNameParent\" label=\"Father's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"fatherOccupation\" label=\"Occupation\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherName\" label=\"Mother's Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherAge\" label=\"Age\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"motherOccupation\" label=\"Occupation\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Intermediate Marks */}\n//         <FormSection title=\"Intermediate Marks (Telangana State)\">\n//           <Grid container spacing={1}>\n//             {formData.subjects.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Subject\" \n//                     value={item.subject} \n//                     fullWidth \n//                     InputProps={{ readOnly: true }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"1st Year\" \n//                     value={item.y1}\n//                     onChange={(e) => handleSubjectChange(index, 'y1', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"2nd Year\" \n//                     value={item.y2}\n//                     onChange={(e) => handleSubjectChange(index, 'y2', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={1.5}>\n//                   <TextField \n//                     label=\"Practical\" \n//                     value={item.practical}\n//                     onChange={item.practical !== '-' ? \n//                       (e) => handleSubjectChange(index, 'practical', e.target.value) : undefined}\n//                     fullWidth \n//                     InputProps={{ readOnly: item.practical === '-' }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Total\" \n//                     value={item.total}\n//                     onChange={(e) => handleSubjectChange(index, 'total', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Max Marks\" \n//                     value={item.max}\n//                     onChange={(e) => handleSubjectChange(index, 'max', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n\n//           <Box mt={2}>\n//             <FormTextField name=\"totalMarks\" label=\"Total Marks\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"totalPercentage\" label=\"Total Percentage\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupTotal\" label=\"Group Total\" sx={{ mb: 1 }} />\n//             <FormTextField name=\"groupPercentage\" label=\"Group Percentage\" />\n//           </Box>\n//         </FormSection>\n\n//         {/* Educational History */}\n//         <FormSection title=\"Educational History\">\n//           <Grid container spacing={2}>\n//             {formData.educationHistory.map((item, index) => (\n//               <React.Fragment key={index}>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Class\" \n//                     value={item.class}\n//                     onChange={(e) => handleEducationChange(index, 'class', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={2}>\n//                   <TextField \n//                     label=\"Year\" \n//                     value={item.year}\n//                     onChange={(e) => handleEducationChange(index, 'year', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={4}>\n//                   <TextField \n//                     label=\"School\" \n//                     value={item.school}\n//                     onChange={(e) => handleEducationChange(index, 'school', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//                 <Grid item xs={3}>\n//                   <TextField \n//                     label=\"Place\" \n//                     value={item.place}\n//                     onChange={(e) => handleEducationChange(index, 'place', e.target.value)}\n//                     fullWidth \n//                   />\n//                 </Grid>\n//               </React.Fragment>\n//             ))}\n//           </Grid>\n//         </FormSection>\n\n//         {/* EAPCET Details */}\n//         <FormSection title=\"EAPCET Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"eapcetRegNo\" label=\"TG EAPCET Reg No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"hallTicketNo\" label=\"Hall Ticket No\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"rank\" label=\"Rank\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Payment Details */}\n//         <FormSection title=\"Payment Details\">\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}><FormTextField name=\"paymentType\" label=\"Payment Type\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"transactionId\" label=\"Transaction ID\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"paymentDate\" label=\"Payment Date\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"bankName\" label=\"Bank Name\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"branchDetails\" label=\"Branch Details\" /></Grid>\n//             <Grid item xs={4}><FormTextField name=\"amount\" label=\"Amount (Rs.)\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"paymentRemarks\" label=\"Remarks\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Document Details */}\n//         <FormSection title=\"Document Details\">\n//           <TableContainer>\n//             <Table>\n//               <TableHead>\n//                 <TableRow>\n//                   <TableCell>S.No.</TableCell>\n//                   <TableCell>Document Type</TableCell>\n//                 </TableRow>\n//               </TableHead>\n//               <TableBody>\n//                 {DOCUMENTS.map((type, index) => (\n//                   <TableRow key={index}>\n//                     <TableCell>{index + 1}</TableCell>\n//                     <TableCell>{type}</TableCell>\n//                   </TableRow>\n//                 ))}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//         </FormSection>\n\n//         {/* Declaration */}\n//         <FormSection title=\"Declaration\">\n//           <Typography paragraph>\n//             I declare that the particulars given above are correct. I agree to abide by the admission prospectus issued by the Institute. I also declare that in the event that information provided is incorrect or false. I may be prosecuted as per law.\n//           </Typography>\n//           <Grid container spacing={2}>\n//             <Grid item xs={6}><FormTextField name=\"signature\" label=\"Signature\" /></Grid>\n//             <Grid item xs={6}><FormTextField name=\"declarationDate\" label=\"Date\" /></Grid>\n//             <Grid item xs={12}><FormTextField name=\"officeRemarks\" label=\"Remarks (For office use only)\" /></Grid>\n//           </Grid>\n//         </FormSection>\n\n//         {/* Submit Button */}\n//         <Grid item xs={12}>\n//           <Button \n//             type=\"submit\" \n//             variant=\"contained\" \n//             color=\"primary\" \n//             size=\"large\"\n//             fullWidth\n//           >\n//             Submit Application\n//           </Button>\n//         </Grid>\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n// import ReactToPrint from 'react-to-print';\n\n// import React, { useState, useRef } from 'react';\n// import {\n//   Box, Typography, TextField, Grid, Paper, Table, TableBody,\n//   TableCell, TableContainer, TableHead, TableRow, Checkbox, Button,\n//   Dialog, DialogActions, DialogContent, DialogTitle\n// } from '@mui/material';\n// import { useReactToPrint } from 'react-to-print';\n// import ReviewerReport from '../ApplicationBPT/ReportView'; // Adjust path as needed\n// const ApplicationReportBPT = () => {\n//   // ... (keep all your existing constants and initial state)\n\n//   const [showReport, setShowReport] = useState(false);\n//   const reportRef = useRef();\n\n//   // Print handler\n//   const handlePrint = useReactToPrint({\n//     content: () => reportRef.current,\n//     pageStyle: `\n//       @media print {\n//         body { -webkit-print-color-adjust: exact; }\n//         .no-print { display: none !important; }\n//         @page { size: A4; margin: 10mm; }\n//       }\n//     `\n//   });\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setShowReport(true);\n//   };\n\n//   const handleCloseReport = () => {\n//     setShowReport(false);\n//   };\n\n//   // Render the form\n//   if (!showReport) {\n//     return (\n//       <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n//         {/* Keep all your existing form JSX */}\n//         <Grid container spacing={3}>\n//           {/* All your form sections */}\n//         </Grid>\n//       </Box>\n//     );\n//   }\n\n//   const handleBackToForm = () => {\n//     setShowReport(false);\n//   };\n\n//   if (showReport) {\n//     return (\n//       <div ref={reportRef}>\n//         <ReviewerReport \n//           formData={formData}\n//           onBack={handleBackToForm}\n//           onPrint={handlePrint}\n//         />\n//       </div>\n//     );\n//   }\n//   // Render the report\n//   return (\n//     <Box sx={{ p: 4 }} ref={reportRef}>\n//       <Typography variant=\"h4\" align=\"center\" gutterBottom sx={{ mb: 4 }}>\n//         APPLICATION FORM REPORT - Bachelor of Physiotherapy - 2025\n//       </Typography>\n\n//       {/* Report Content - Display all form data */}\n//       <Grid container spacing={3}>\n//         {/* Advertisement Details */}\n//         <Grid item xs={12}>\n//           <Paper elevation={2} sx={{ p: 2 }}>\n//             <Typography variant=\"h6\" gutterBottom>Advertisement Details</Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={6}><Typography><strong>Ad. No.:</strong> {formData.adNo}</Typography></Grid>\n//               <Grid item xs={6}><Typography><strong>Ad. Date:</strong> {formData.adDate}</Typography></Grid>\n//               {/* Add all other fields similarly */}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n\n//         {/* Applicant's Details */}\n//         <Grid item xs={12}>\n//           <Paper elevation={2} sx={{ p: 2 }}>\n//             <Typography variant=\"h6\" gutterBottom>Applicant's Details</Typography>\n//             <Grid container spacing={2}>\n//               <Grid item xs={6}><Typography><strong>Name:</strong> {formData.name}</Typography></Grid>\n//               <Grid item xs={6}><Typography><strong>Father's Name:</strong> {formData.fatherName}</Typography></Grid>\n//               {/* Add all other applicant details */}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n\n//         {/* Continue with all other sections in similar fashion */}\n\n//         {/* Intermediate Marks */}\n//         <Grid item xs={12}>\n//           <Paper elevation={2} sx={{ p: 2 }}>\n//             <Typography variant=\"h6\" gutterBottom>Intermediate Marks</Typography>\n//             <TableContainer>\n//               <Table>\n//                 <TableHead>\n//                   <TableRow>\n//                     <TableCell>Subject</TableCell>\n//                     <TableCell>1st Year</TableCell>\n//                     <TableCell>2nd Year</TableCell>\n//                     <TableCell>Practical</TableCell>\n//                     <TableCell>Total</TableCell>\n//                     <TableCell>Max Marks</TableCell>\n//                   </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                   {formData.subjects.map((subject, index) => (\n//                     <TableRow key={index}>\n//                       <TableCell>{subject.subject}</TableCell>\n//                       <TableCell>{subject.y1}</TableCell>\n//                       <TableCell>{subject.y2}</TableCell>\n//                       <TableCell>{subject.practical}</TableCell>\n//                       <TableCell>{subject.total}</TableCell>\n//                       <TableCell>{subject.max}</TableCell>\n//                     </TableRow>\n//                   ))}\n//                 </TableBody>\n//               </Table>\n//             </TableContainer>\n//           </Paper>\n//         </Grid>\n\n//         {/* Action Buttons */}\n//         <Grid item xs={12} sx={{ mt: 4, display: 'flex', justifyContent: 'space-between' }} className=\"no-print\">\n//           <Button \n//             variant=\"contained\" \n//             color=\"secondary\"\n//             onClick={handleCloseReport}\n//             sx={{ mr: 2 }}\n//           >\n//             Back to Form\n//           </Button>\n//           <Button \n//             variant=\"contained\" \n//             color=\"primary\"\n//             onClick={handlePrint}\n//           >\n//             Print Report\n//           </Button>\n//         </Grid>\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default ApplicationReportBPT;\n\n\nimport React, { useState, useRef } from 'react';\nimport {\n  Box, Typography, TextField, Grid, Paper, Table, TableBody,\n  TableCell, TableContainer, TableHead, TableRow, Button\n} from '@mui/material';\nimport { useReactToPrint } from 'react-to-print';\n\nconst ApplicationReportBPT = () => {\n  const [showReport, setShowReport] = useState(false);\n  const reportRef = useRef();\n\n  const [formData, setFormData] = useState({\n    adNo: '',\n    adDate: '',\n    name: '',\n    fatherName: '',\n    subjects: [\n      {\n        subject: '',\n        y1: '',\n        y2: '',\n        practical: '',\n        total: '',\n        max: ''\n      }\n    ]\n  });\n\n  const handlePrint = useReactToPrint({\n    content: () => reportRef.current,\n    pageStyle: `\n      @media print {\n        body { -webkit-print-color-adjust: exact; }\n        .no-print { display: none !important; }\n        @page { size: A4; margin: 10mm; }\n      }\n    `\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setShowReport(true);\n  };\n\n  const handleCloseReport = () => {\n    setShowReport(false);\n  };\n\n  const handleSubjectChange = (index, field, value) => {\n    const updatedSubjects = [...formData.subjects];\n    updatedSubjects[index][field] = value;\n    setFormData({ ...formData, subjects: updatedSubjects });\n  };\n\n  const addSubjectRow = () => {\n    setFormData({\n      ...formData,\n      subjects: [...formData.subjects, {\n        subject: '',\n        y1: '',\n        y2: '',\n        practical: '',\n        total: '',\n        max: ''\n      }]\n    });\n  };\n\n  if (!showReport) {\n    return (\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ pt: 4, px: 6, pb: 7 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Application Form - Bachelor of Physiotherapy\n        </Typography>\n\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Ad. No.\"\n              fullWidth\n              value={formData.adNo}\n              onChange={(e) => setFormData({ ...formData, adNo: e.target.value })}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Ad. Date\"\n              type=\"date\"\n              fullWidth\n              InputLabelProps={{ shrink: true }}\n              value={formData.adDate}\n              onChange={(e) => setFormData({ ...formData, adDate: e.target.value })}\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <TextField\n              label=\"Name\"\n              fullWidth\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Father's Name\"\n              fullWidth\n              value={formData.fatherName}\n              onChange={(e) => setFormData({ ...formData, fatherName: e.target.value })}\n            />\n          </Grid>\n\n          {/* Intermediate Subjects Table */}\n          <Grid item xs={12}>\n            <Typography variant=\"h6\">Intermediate Marks</Typography>\n            {formData.subjects.map((subject, index) => (\n              <Grid container spacing={2} key={index} sx={{ mb: 2 }}>\n                <Grid item xs={2}>\n                  <TextField\n                    label=\"Subject\"\n                    fullWidth\n                    value={subject.subject}\n                    onChange={(e) => handleSubjectChange(index, 'subject', e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    label=\"1st Year\"\n                    fullWidth\n                    value={subject.y1}\n                    onChange={(e) => handleSubjectChange(index, 'y1', e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    label=\"2nd Year\"\n                    fullWidth\n                    value={subject.y2}\n                    onChange={(e) => handleSubjectChange(index, 'y2', e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    label=\"Practical\"\n                    fullWidth\n                    value={subject.practical}\n                    onChange={(e) => handleSubjectChange(index, 'practical', e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    label=\"Total\"\n                    fullWidth\n                    value={subject.total}\n                    onChange={(e) => handleSubjectChange(index, 'total', e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    label=\"Max Marks\"\n                    fullWidth\n                    value={subject.max}\n                    onChange={(e) => handleSubjectChange(index, 'max', e.target.value)}\n                  />\n                </Grid>\n              </Grid>\n            ))}\n            <Button variant=\"outlined\" onClick={addSubjectRow}>\n              + Add Subject\n            </Button>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Preview Report\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ p: 4 }} ref={reportRef}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom sx={{ mb: 4 }}>\n        APPLICATION FORM REPORT - Bachelor of Physiotherapy - 2025\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Advertisement Details */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Advertisement Details</Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={6}><Typography><strong>Ad. No.:</strong> {formData.adNo}</Typography></Grid>\n              <Grid item xs={6}><Typography><strong>Ad. Date:</strong> {formData.adDate}</Typography></Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {/* Applicant Details */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Applicant's Details</Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={6}><Typography><strong>Name:</strong> {formData.name}</Typography></Grid>\n              <Grid item xs={6}><Typography><strong>Father's Name:</strong> {formData.fatherName}</Typography></Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {/* Intermediate Marks Table */}\n        <Grid item xs={12}>\n          <Paper elevation={2} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>Intermediate Marks</Typography>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Subject</TableCell>\n                    <TableCell>1st Year</TableCell>\n                    <TableCell>2nd Year</TableCell>\n                    <TableCell>Practical</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Max Marks</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {formData.subjects.map((subject, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subject.subject}</TableCell>\n                      <TableCell>{subject.y1}</TableCell>\n                      <TableCell>{subject.y2}</TableCell>\n                      <TableCell>{subject.practical}</TableCell>\n                      <TableCell>{subject.total}</TableCell>\n                      <TableCell>{subject.max}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Grid>\n\n        {/* Action Buttons */}\n        <Grid item xs={12} sx={{ mt: 4, display: 'flex', justifyContent: 'space-between' }} className=\"no-print\">\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseReport}>\n            Back to Form\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={handlePrint}>\n            Print Report\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ApplicationReportBPT;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}