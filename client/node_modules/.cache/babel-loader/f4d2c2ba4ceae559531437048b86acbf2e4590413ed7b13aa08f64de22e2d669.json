{"ast":null,"code":"// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n\n//     </Box>\n\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n\n// const FamilyDetailsForm = () => {\n//   const [familyDetails, setFamilyDetails] = useState([\n//     { relation: 'Father', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Mother', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Spouse', name: '', age: '', occupation: '', income: '' }\n//   ]);\n\n//   const fields = [\n//     { name: 'name', label: 'Name' },\n//     { name: 'age', label: 'Age (in years)' },\n//     { name: 'occupation', label: 'Occupation' },\n//     { name: 'income', label: 'Gross Monthly Income (Rs.)' }\n//   ];\n\n//   const handleFamilyChange = (index, field, value) => {\n//     const updated = [...familyDetails];\n//     updated[index][field] = value;\n//     setFamilyDetails(updated);\n//   };\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         Details of Parents / Spouse\n//       </Typography>\n\n//       {familyDetails.map((person, index) => (\n//         <Box key={index} sx={{ mb: 3 }}>\n//           <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n//             {person.relation}\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//             {fields.map(({ name, label }) => (\n//               <TextField\n//                 key={name}\n//                 label={`${person.relation} ${label}`}\n//                 value={person[name]}\n//                 onChange={(e) => handleFamilyChange(index, name, e.target.value)}\n//                 size=\"small\"\n//                 sx={{ flex: 1 }}\n//               />\n//             ))}\n//           </Box>\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default FamilyDetailsForm;\n\n// import React, { useState } from 'react';\n\n// const AcademicRecordForm = () => {\n//   const [courseSubjects, setCourseSubjects] = useState([\n//     {\n//       course_name: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       subject_code: '',\n//       subject_name: '',\n//       paper_code: '',\n//       exam_code: '',\n//       max_marks: ''\n//     }\n//   ]);\n\n//   const [studentRecords, setStudentRecords] = useState([\n//     {\n//       applicant_code: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       exam_code: '',\n//       subject_code: '',\n//       paper_code: '',\n//       marks_obtained: ''\n//     }\n//   ]);\n\n//   // --- Handlers for E.1: Course Subject Master ---\n//   const handleSubjectChange = (index, field, value) => {\n//     const updated = [...courseSubjects];\n//     updated[index][field] = value;\n//     setCourseSubjects(updated);\n//   };\n\n//   const addSubjectRow = () => {\n//     setCourseSubjects([\n//       ...courseSubjects,\n//       {\n//         course_name: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         subject_code: '',\n//         subject_name: '',\n//         paper_code: '',\n//         exam_code: '',\n//         max_marks: ''\n//       }\n//     ]);\n//   };\n\n//   // --- Handlers for E.2: Student Marks Obtained ---\n//   const handleRecordChange = (index, field, value) => {\n//     const updated = [...studentRecords];\n//     updated[index][field] = value;\n//     setStudentRecords(updated);\n//   };\n\n//   const addRecordRow = () => {\n//     setStudentRecords([\n//       ...studentRecords,\n//       {\n//         applicant_code: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         exam_code: '',\n//         subject_code: '',\n//         paper_code: '',\n//         marks_obtained: ''\n//       }\n//     ]);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('E.1 Course Subjects:', courseSubjects);\n//     console.log('E.2 Student Records:', studentRecords);\n//     alert('Data captured in console!');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"p-4 max-w-5xl mx-auto space-y-8 bg-white shadow rounded\">\n//       <h2 className=\"text-xl font-bold\">E.1 - Course Subject Master Details</h2>\n//       {courseSubjects.map((subject, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code (MidTerm/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Max Marks\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addSubjectRow} className=\"bg-blue-500 text-white px-4 py-2 rounded\">+ Add Subject</button>\n\n//       <h2 className=\"text-xl font-bold pt-8\">E.2 - Student Academic Records</h2>\n//       {studentRecords.map((record, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Marks Obtained\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addRecordRow} className=\"bg-green-500 text-white px-4 py-2 rounded\">+ Add Record</button>\n\n//       <div className=\"pt-6\">\n//         <button type=\"submit\" className=\"bg-indigo-600 text-white px-6 py-2 rounded\">Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default AcademicRecordForm;","map":{"version":3,"names":[],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationPdfReport.js"],"sourcesContent":["// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n      \n//     </Box>\n\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n\n// const FamilyDetailsForm = () => {\n//   const [familyDetails, setFamilyDetails] = useState([\n//     { relation: 'Father', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Mother', name: '', age: '', occupation: '', income: '' },\n//     { relation: 'Spouse', name: '', age: '', occupation: '', income: '' }\n//   ]);\n\n//   const fields = [\n//     { name: 'name', label: 'Name' },\n//     { name: 'age', label: 'Age (in years)' },\n//     { name: 'occupation', label: 'Occupation' },\n//     { name: 'income', label: 'Gross Monthly Income (Rs.)' }\n//   ];\n\n//   const handleFamilyChange = (index, field, value) => {\n//     const updated = [...familyDetails];\n//     updated[index][field] = value;\n//     setFamilyDetails(updated);\n//   };\n\n//   return (\n//     <Box sx={{ p: 4 }}>\n//       <Typography variant=\"h6\" gutterBottom>\n//         Details of Parents / Spouse\n//       </Typography>\n\n//       {familyDetails.map((person, index) => (\n//         <Box key={index} sx={{ mb: 3 }}>\n//           <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n//             {person.relation}\n//           </Typography>\n//           <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//             {fields.map(({ name, label }) => (\n//               <TextField\n//                 key={name}\n//                 label={`${person.relation} ${label}`}\n//                 value={person[name]}\n//                 onChange={(e) => handleFamilyChange(index, name, e.target.value)}\n//                 size=\"small\"\n//                 sx={{ flex: 1 }}\n//               />\n//             ))}\n//           </Box>\n//         </Box>\n//       ))}\n//     </Box>\n//   );\n// };\n\n// export default FamilyDetailsForm;\n\n\n// import React, { useState } from 'react';\n\n// const AcademicRecordForm = () => {\n//   const [courseSubjects, setCourseSubjects] = useState([\n//     {\n//       course_name: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       subject_code: '',\n//       subject_name: '',\n//       paper_code: '',\n//       exam_code: '',\n//       max_marks: ''\n//     }\n//   ]);\n\n//   const [studentRecords, setStudentRecords] = useState([\n//     {\n//       applicant_code: '',\n//       course_code: '',\n//       year: '',\n//       semester: '',\n//       exam_code: '',\n//       subject_code: '',\n//       paper_code: '',\n//       marks_obtained: ''\n//     }\n//   ]);\n\n//   // --- Handlers for E.1: Course Subject Master ---\n//   const handleSubjectChange = (index, field, value) => {\n//     const updated = [...courseSubjects];\n//     updated[index][field] = value;\n//     setCourseSubjects(updated);\n//   };\n\n//   const addSubjectRow = () => {\n//     setCourseSubjects([\n//       ...courseSubjects,\n//       {\n//         course_name: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         subject_code: '',\n//         subject_name: '',\n//         paper_code: '',\n//         exam_code: '',\n//         max_marks: ''\n//       }\n//     ]);\n//   };\n\n//   // --- Handlers for E.2: Student Marks Obtained ---\n//   const handleRecordChange = (index, field, value) => {\n//     const updated = [...studentRecords];\n//     updated[index][field] = value;\n//     setStudentRecords(updated);\n//   };\n\n//   const addRecordRow = () => {\n//     setStudentRecords([\n//       ...studentRecords,\n//       {\n//         applicant_code: '',\n//         course_code: '',\n//         year: '',\n//         semester: '',\n//         exam_code: '',\n//         subject_code: '',\n//         paper_code: '',\n//         marks_obtained: ''\n//       }\n//     ]);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     console.log('E.1 Course Subjects:', courseSubjects);\n//     console.log('E.2 Student Records:', studentRecords);\n//     alert('Data captured in console!');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"p-4 max-w-5xl mx-auto space-y-8 bg-white shadow rounded\">\n//       <h2 className=\"text-xl font-bold\">E.1 - Course Subject Master Details</h2>\n//       {courseSubjects.map((subject, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Course Name\" value={subject.course_name} onChange={(e) => handleSubjectChange(index, 'course_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={subject.course_code} onChange={(e) => handleSubjectChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={subject.year} onChange={(e) => handleSubjectChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester (I/II)\" value={subject.semester} onChange={(e) => handleSubjectChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={subject.subject_code} onChange={(e) => handleSubjectChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Name\" value={subject.subject_name} onChange={(e) => handleSubjectChange(index, 'subject_name', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code (Theory/Practical)\" value={subject.paper_code} onChange={(e) => handleSubjectChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code (MidTerm/End)\" value={subject.exam_code} onChange={(e) => handleSubjectChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Max Marks\" value={subject.max_marks} onChange={(e) => handleSubjectChange(index, 'max_marks', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addSubjectRow} className=\"bg-blue-500 text-white px-4 py-2 rounded\">+ Add Subject</button>\n\n//       <h2 className=\"text-xl font-bold pt-8\">E.2 - Student Academic Records</h2>\n//       {studentRecords.map((record, index) => (\n//         <div key={index} className=\"grid grid-cols-2 gap-4 border p-4 rounded\">\n//           <input type=\"text\" placeholder=\"Applicant Code\" value={record.applicant_code} onChange={(e) => handleRecordChange(index, 'applicant_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Course Code\" value={record.course_code} onChange={(e) => handleRecordChange(index, 'course_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Year\" value={record.year} onChange={(e) => handleRecordChange(index, 'year', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Semester\" value={record.semester} onChange={(e) => handleRecordChange(index, 'semester', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Exam Code\" value={record.exam_code} onChange={(e) => handleRecordChange(index, 'exam_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Subject Code\" value={record.subject_code} onChange={(e) => handleRecordChange(index, 'subject_code', e.target.value)} />\n//           <input type=\"text\" placeholder=\"Paper Code\" value={record.paper_code} onChange={(e) => handleRecordChange(index, 'paper_code', e.target.value)} />\n//           <input type=\"number\" placeholder=\"Marks Obtained\" value={record.marks_obtained} onChange={(e) => handleRecordChange(index, 'marks_obtained', e.target.value)} />\n//         </div>\n//       ))}\n//       <button type=\"button\" onClick={addRecordRow} className=\"bg-green-500 text-white px-4 py-2 rounded\">+ Add Record</button>\n\n//       <div className=\"pt-6\">\n//         <button type=\"submit\" className=\"bg-indigo-600 text-white px-6 py-2 rounded\">Submit</button>\n//       </div>\n//     </form>\n//   );\n// };\n\n// export default AcademicRecordForm;\n\n\n"],"mappings":"AAAA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}