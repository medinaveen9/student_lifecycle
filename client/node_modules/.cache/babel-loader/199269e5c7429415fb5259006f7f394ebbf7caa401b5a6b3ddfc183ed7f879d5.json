{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicalPgMedicalStudents/PreAdmission.js\";\nimport React from 'react';\nimport FormComponent from './FormComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst medicalQualificationFields = [{\n  label: 'PG Entrance Exam Name (e.g..,NEET',\n  name: 'pg_entrance',\n  type: 'text',\n  required: true\n}, {\n  label: 'PG Entrance Exam Roll Number',\n  name: 'pg_roll',\n  type: 'text',\n  required: true\n}, {\n  label: 'PG Entrance Exam Score/Percentile',\n  name: 'pg_score',\n  type: 'text',\n  required: true\n}, {\n  label: 'PG Entrance Exam Rank',\n  name: 'pg_rank',\n  type: 'text',\n  required: true\n}, {\n  type: 'heading',\n  text: 'Section Title'\n}, {\n  label: 'University/Institution of Undergraduate Degree',\n  name: 'ug_university',\n  type: 'select',\n  required: true,\n  options: ['MBBS', 'BDS']\n}, {\n  label: 'Year of Passing Undergraduate Degree',\n  name: 'ug_passing_year',\n  type: 'text',\n  required: true\n}, {\n  label: 'Undergraduate Aggregate Percentage/GPA',\n  name: 'ug_percentage',\n  type: 'text'\n}, {\n  label: 'Internship Completion Date',\n  name: 'internship_date',\n  type: 'date'\n}, {\n  label: 'Medical Council Registration Number(State/MCI/NMC',\n  name: 'reg_number',\n  type: 'text',\n  required: true\n}, {\n  label: 'Medical Council Registration Date',\n  name: 'reg_date',\n  type: 'date'\n}, {\n  label: 'Experience (if any, post-internship/UG)',\n  name: 'experience',\n  type: 'textarea'\n}, {\n  label: 'Preferred PG Specialty 1',\n  name: 'specialty1',\n  type: 'text'\n}, {\n  label: 'Preferred PG Specialty 2',\n  name: 'specialty2',\n  type: 'text'\n}, {\n  label: 'Preferred PG Specialty 3',\n  name: 'specialty3',\n  type: 'text'\n}, {\n  label: 'Rural Service Bond Status',\n  name: 'bond_status',\n  type: 'radio',\n  options: ['Yes', 'No'],\n  required: true\n}, {\n  label: 'Bond Duration',\n  name: 'bond_duration',\n  type: 'text',\n  conditional: {\n    field: 'bond_status',\n    value: 'Yes'\n  }\n}, {\n  label: 'Bond Amount',\n  name: 'bond_amount',\n  type: 'text',\n  conditional: {\n    field: 'bond_status',\n    value: 'Yes'\n  }\n}];\nconst MedicalQualificationFormPage = () => {\n  return /*#__PURE__*/_jsxDEV(FormComponent, {\n    formTitle: \"Medical Qualification Details\",\n    formName: \"medicalQualificationForm\",\n    fields: medicalQualificationFields,\n    nextRoute: \"/onboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = MedicalQualificationFormPage;\nexport default MedicalQualificationFormPage;\nvar _c;\n$RefreshReg$(_c, \"MedicalQualificationFormPage\");","map":{"version":3,"names":["React","FormComponent","jsxDEV","_jsxDEV","medicalQualificationFields","label","name","type","required","text","options","conditional","field","value","MedicalQualificationFormPage","formTitle","formName","fields","nextRoute","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicalPgMedicalStudents/PreAdmission.js"],"sourcesContent":["import React from 'react';\nimport FormComponent from './FormComponent';\n\nconst medicalQualificationFields = [\n    { label: 'PG Entrance Exam Name (e.g..,NEET', name: 'pg_entrance', type: 'text', required: true },\n    { label: 'PG Entrance Exam Roll Number', name: 'pg_roll', type: 'text', required: true },\n    { label: 'PG Entrance Exam Score/Percentile', name: 'pg_score', type: 'text', required: true },\n    { label: 'PG Entrance Exam Rank', name: 'pg_rank', type: 'text', required: true },\n    { type: 'heading', text: 'Section Title' },\n    {\n        label: 'University/Institution of Undergraduate Degree',\n        name: 'ug_university',\n        type: 'select',\n        required: true,\n        options: ['MBBS', 'BDS']\n      },\n      \n  { label: 'Year of Passing Undergraduate Degree', name: 'ug_passing_year', type: 'text', required: true },\n  { label: 'Undergraduate Aggregate Percentage/GPA', name: 'ug_percentage', type: 'text' },\n  { label: 'Internship Completion Date', name: 'internship_date', type: 'date' },\n  { label: 'Medical Council Registration Number(State/MCI/NMC', name: 'reg_number', type: 'text', required: true },\n  { label: 'Medical Council Registration Date', name: 'reg_date', type: 'date' },\n  { label: 'Experience (if any, post-internship/UG)', name: 'experience', type: 'textarea' },\n  { label: 'Preferred PG Specialty 1', name: 'specialty1', type: 'text' },\n  { label: 'Preferred PG Specialty 2', name: 'specialty2', type: 'text' },\n  { label: 'Preferred PG Specialty 3', name: 'specialty3', type: 'text' },\n  {\n    label: 'Rural Service Bond Status',\n    name: 'bond_status',\n    type: 'radio',\n    options: ['Yes', 'No'],\n    required: true\n  },\n  {\n    label: 'Bond Duration',\n    name: 'bond_duration',\n    type: 'text',\n    conditional: { field: 'bond_status', value: 'Yes' }\n  },\n  {\n    label: 'Bond Amount',\n    name: 'bond_amount',\n    type: 'text',\n    conditional: { field: 'bond_status', value: 'Yes' }\n  }\n];\n\nconst MedicalQualificationFormPage = () => {\n  return (\n    <FormComponent\n      formTitle=\"Medical Qualification Details\"\n      formName=\"medicalQualificationForm\"\n      fields={medicalQualificationFields}\n        nextRoute=\"/onboard\"\n    />\n  );\n};\n\nexport default MedicalQualificationFormPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}