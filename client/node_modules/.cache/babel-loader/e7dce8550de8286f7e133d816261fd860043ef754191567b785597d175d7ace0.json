{"ast":null,"code":"var _jsxFileName = \"/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationPdfReport.js\",\n  _s = $RefreshSig$();\n// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n\n//     </Box>\n\nimport React, { useState } from 'react';\nimport { Typography, TextField, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FamilyDetailsForm = () => {\n  _s();\n  const [familyDetails, setFamilyDetails] = useState([{\n    relation: 'Father',\n    name: '',\n    age: '',\n    occupation: '',\n    income: ''\n  }, {\n    relation: 'Mother',\n    name: '',\n    age: '',\n    occupation: '',\n    income: ''\n  }, {\n    relation: 'Spouse',\n    name: '',\n    age: '',\n    occupation: '',\n    income: ''\n  }]);\n  const fields = [{\n    name: 'name',\n    label: 'Name'\n  }, {\n    name: 'age',\n    label: 'Age (in years)'\n  }, {\n    name: 'occupation',\n    label: 'Occupation'\n  }, {\n    name: 'income',\n    label: 'Gross Monthly Income (Rs.)'\n  }];\n  const handleFamilyChange = (index, field, value) => {\n    const updated = [...familyDetails];\n    updated[index][field] = value;\n    setFamilyDetails(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Details of Parents / Spouse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), familyDetails.map((person, index) => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          mb: 1\n        },\n        children: person.relation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 2\n        },\n        children: fields.map(({\n          name,\n          label\n        }) => /*#__PURE__*/_jsxDEV(TextField, {\n          label: `${person.relation} ${label}`,\n          value: person[name],\n          onChange: e => handleFamilyChange(index, name, e.target.value),\n          size: \"small\",\n          sx: {\n            flex: 1\n          }\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(FamilyDetailsForm, \"pOZ+v2hkeCG7rRKYVg7A3yMSahY=\");\n_c = FamilyDetailsForm;\nexport default FamilyDetailsForm;\nvar _c;\n$RefreshReg$(_c, \"FamilyDetailsForm\");","map":{"version":3,"names":["React","useState","Typography","TextField","Box","jsxDEV","_jsxDEV","FamilyDetailsForm","_s","familyDetails","setFamilyDetails","relation","name","age","occupation","income","fields","label","handleFamilyChange","index","field","value","updated","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","person","mb","display","flexWrap","gap","onChange","e","target","size","flex","_c","$RefreshReg$"],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/ApplicationPdfReport.js"],"sourcesContent":["// import ReactToPrint from 'react-to-print'; // ✅ This is correct for default export\n// import React, { useRef } from 'react';\n// import { useFormContext } from '../ApplicationBPT/FormContext';\n\n\n\n// const ApplicationPdfReport = () => {\n//   const { formData } = useFormContext();  // ✅ use context instead of location.state\n//   const componentRef = useRef();\n\n//   const renderField = (label, value) => (\n//     <div style={{ marginBottom: '8px' }}>\n//       <strong>{label}:</strong> {value || 'N/A'}\n//     </div>\n//   );\n\n//   if (!formData || Object.keys(formData).length === 0) {\n//     return <div style={{ padding: '2rem', color: 'red' }}>No form data found. Please complete the form.</div>;\n//   }\n\n//   return (\n//     <div style={{ padding: '2rem' }}>\n//       <ReactToPrint\n//         trigger={() => <button style={{ float: 'right' }}>Print / Save PDF</button>}\n//         content={() => componentRef.current}\n//       />\n//       <div ref={componentRef}>\n//         <h1>Application Summary - BPT 2025</h1>\n\n//         <h2>Advertisement Details</h2>\n//         {renderField('Ad No.', formData.adNo)}\n//         {renderField('Ad Date', formData.adDate)}\n//         {renderField('Application No.', formData.applicationNo)}\n//         {renderField('Course Code', formData.courseCode)}\n//         {renderField('Course Name', formData.courseName)}\n//         {renderField('Date of Entry', formData.dateOfEntry)}\n//         {renderField('Last Date', formData.lastDate)}\n//         {renderField('Department', formData.department)}\n\n//         <h2>Applicant Details</h2>\n//         {renderField('Name', formData.name)}\n//         {renderField('Father\\'s Name', formData.fatherName)}\n//         {renderField('DOB', formData.dob)}\n//         {renderField('Age', formData.age)}\n//         {renderField('Place of Birth', formData.placeOfBirth)}\n//         {renderField('Social Status', formData.socialStatus)}\n//         {renderField('Nationality', formData.nationality)}\n//         {renderField('Gender', formData.gender)}\n//         {renderField('Marital Status', formData.maritalStatus)}\n//         {renderField('Differently Abled', formData.differentlyAbled)}\n//         {renderField('ID Mark 1', formData.idMark1)}\n//         {renderField('ID Mark 2', formData.idMark2)}\n//         {renderField('Aadhar', formData.aadhar)}\n//         {renderField('Father Email', formData.fatherEmail)}\n\n//         <h2>Educational Qualifications</h2>\n//         {renderField('10th School Name', formData.tenthSchool)}\n//         {renderField('Intermediate 1st Year', formData.inter1stCollege)}\n//         {renderField('Intermediate 2nd Year', formData.inter2ndCollege)}\n//         {renderField('EAPCET Reg. No.', formData.registrationNumber)}\n//         {renderField('EAPCET Hall Ticket', formData.hallTicketNumber)}\n//         {renderField('EAPCET Rank', formData.rank)}\n\n//         <h2>Address Details</h2>\n//         {renderField('Correspondence Address', formData.correspondenceAddress)}\n//         {renderField('Permanent Address', formData.permanentAddress)}\n\n//         <h2>Payment Details</h2>\n//         {renderField('Payment Type', formData.paymentType)}\n//         {renderField('Transaction ID', formData.transactionId)}\n//         {renderField('Payment Date', formData.date)}\n//         {renderField('Bank Name', formData.bankName)}\n//         {renderField('Branch', formData.branchDetails)}\n//         {renderField('Amount', formData.amount)}\n//         {renderField('Remarks', formData.remarks)}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ApplicationPdfReport;\n// import React, { useState } from 'react';\n// import { Typography, TextField, Box } from '@mui/material';\n//    const [familyDetails, setFamilyDetails] = useState([\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' },\n//      { relation: '', name: '', age: '', occupation: '', income: '' }\n//    ]);\n\n\n// <Typography variant=\"h6\" gutterBottom>Details of Parents / Spouse</Typography>\n\n// {familyDetails.map((person, index) => (\n//   <Box key={index} sx={{ mb: 2 }}>\n//     <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>{person.relation}</Typography>\n//     <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n//       <TextField\n//         label=\"Father Name\"\n//         value={person.name}\n//         onChange={(e) => handleFamilyChange(index, 'name', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Age (in years)\"\n//         value={person.age}\n//         onChange={(e) => handleFamilyChange(index, 'age', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Occupation\"\n//         value={person.occupation}\n//         onChange={(e) => handleFamilyChange(index, 'occupation', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n//       <TextField\n//         label=\"Gross Monthly Income (Rs.)\"\n//         value={person.income}\n//         onChange={(e) => handleFamilyChange(index, 'income', e.target.value)}\n//         size=\"small\"\n//         sx={{ flex: 1 }}\n//       />\n      \n//     </Box>\n\nimport React, { useState } from 'react';\nimport { Typography, TextField, Box } from '@mui/material';\n\nconst FamilyDetailsForm = () => {\n  const [familyDetails, setFamilyDetails] = useState([\n    { relation: 'Father', name: '', age: '', occupation: '', income: '' },\n    { relation: 'Mother', name: '', age: '', occupation: '', income: '' },\n    { relation: 'Spouse', name: '', age: '', occupation: '', income: '' }\n  ]);\n\n  const fields = [\n    { name: 'name', label: 'Name' },\n    { name: 'age', label: 'Age (in years)' },\n    { name: 'occupation', label: 'Occupation' },\n    { name: 'income', label: 'Gross Monthly Income (Rs.)' }\n  ];\n\n  const handleFamilyChange = (index, field, value) => {\n    const updated = [...familyDetails];\n    updated[index][field] = value;\n    setFamilyDetails(updated);\n  };\n\n  return (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Details of Parents / Spouse\n      </Typography>\n\n      {familyDetails.map((person, index) => (\n        <Box key={index} sx={{ mb: 3 }}>\n          <Typography variant=\"subtitle1\" sx={{ mb: 1 }}>\n            {person.relation}\n          </Typography>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n            {fields.map(({ name, label }) => (\n              <TextField\n                key={name}\n                label={`${person.relation} ${label}`}\n                value={person[name]}\n                onChange={(e) => handleFamilyChange(index, name, e.target.value)}\n                size=\"small\"\n                sx={{ flex: 1 }}\n              />\n            ))}\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default FamilyDetailsForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}