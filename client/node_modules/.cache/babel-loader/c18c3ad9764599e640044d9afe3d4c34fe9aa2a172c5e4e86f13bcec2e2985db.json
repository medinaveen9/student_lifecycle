{"ast":null,"code":"// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     {subject :'Total Marks obtained in Intermediate/EquivalentExamination ', total:'', totalMax:'' },\n//     {subject: 'total  percentage'}\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={'92.8'}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//       disabled\n//     />\n//   </TableCell>\n// </TableRow>\n//               </TableRow>\n\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// // export default Application1;\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' }\n//   ]);\n\n//   const [totalMarks, setTotalMarks] = useState({ obtained: '', max: '' });\n// const [totalPercentage, setTotalPercentage] = useState('');\n// const [groupMarks, setGroupMarks] = useState({ obtained: '', max: '' });\n// const [groupPercentage, setGroupPercentage] = useState('');\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {/* Render input fields for each subject */}\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n\n//             {/* Total Marks Row */}\n//            {/* Total Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Intermediate/Equivalent Examination</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.obtained}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.max}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Total Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={totalPercentage}\n//       onChange={(e) => setTotalPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Group</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.obtained}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.max}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage in Group</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={groupPercentage}\n//       onChange={(e) => setGroupPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default Application1;","map":{"version":3,"names":[],"sources":["/home/kranthi/Desktop/student_lifecycle/client/src/Forms/ApplicationBPT/Application1.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     {subject :'Total Marks obtained in Intermediate/EquivalentExamination ', total:'', totalMax:'' },\n//     {subject: 'total  percentage'}\n//   ]);\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={'92.8'}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//       disabled\n//     />\n//   </TableCell>\n// </TableRow>\n//               </TableRow>\n\n\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// // export default Application1;\n// import React, { useState } from 'react';\n// import {\n//   TextField,\n//   Table,\n//   TableBody,\n//   TableCell,\n//   TableContainer,\n//   TableHead,\n//   TableRow,\n//   Paper,\n//   Box,\n//   Typography\n// } from '@mui/material';\n\n// const Application1 = () => {\n//   const [subjectsData, setSubjectsData] = useState([\n//     { subject: 'Botany', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Zoology', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Physics', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Chemistry', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'English', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' },\n//     { subject: 'Second Language', t1: '', t1Max: '', t2: '', t2Max: '', practical: '', practicalMax: '', total: '', totalMax: '' }\n//   ]);\n\n//   const [totalMarks, setTotalMarks] = useState({ obtained: '', max: '' });\n// const [totalPercentage, setTotalPercentage] = useState('');\n// const [groupMarks, setGroupMarks] = useState({ obtained: '', max: '' });\n// const [groupPercentage, setGroupPercentage] = useState('');\n\n\n//   const handleChange = (index, field, value) => {\n//     const updated = [...subjectsData];\n//     updated[index][field] = value;\n//     setSubjectsData(updated);\n//   };\n\n//   return (\n//     <Box sx={{ pt: 9, px: 6, pb: 7 }}>\n//       <Typography variant=\"h6\" gutterBottom>Intermediate Marks Entry</Typography>\n\n//       <TableContainer component={Paper}>\n//         <Table>\n//           <TableHead>\n//             <TableRow sx={{ backgroundColor: '#dddddd' }}>\n//               <TableCell>Subject</TableCell>\n//               <TableCell>1st Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>2nd Yr Theory</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Practical</TableCell>\n//               <TableCell>Max</TableCell>\n//               <TableCell>Total</TableCell>\n//               <TableCell>Max</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {/* Render input fields for each subject */}\n//             {subjectsData.map((row, index) => (\n//               <TableRow key={index}>\n//                 <TableCell>{row.subject}</TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1} onChange={(e) => handleChange(index, 't1', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t1Max} onChange={(e) => handleChange(index, 't1Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2} onChange={(e) => handleChange(index, 't2', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.t2Max} onChange={(e) => handleChange(index, 't2Max', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practical} onChange={(e) => handleChange(index, 'practical', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.practicalMax} onChange={(e) => handleChange(index, 'practicalMax', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.total} onChange={(e) => handleChange(index, 'total', e.target.value)} />\n//                 </TableCell>\n//                 <TableCell>\n//                   <TextField size=\"small\" value={row.totalMax} onChange={(e) => handleChange(index, 'totalMax', e.target.value)} />\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n\n//             {/* Total Marks Row */}\n//            {/* Total Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Intermediate/Equivalent Examination</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.obtained}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={totalMarks.max}\n//       onChange={(e) => setTotalMarks({ ...totalMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Total Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={totalPercentage}\n//       onChange={(e) => setTotalPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Marks Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Marks obtained in Group</TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.obtained}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, obtained: e.target.value })}\n//     />\n//   </TableCell>\n//   <TableCell>\n//     <TextField\n//       size=\"small\"\n//       value={groupMarks.max}\n//       onChange={(e) => setGroupMarks({ ...groupMarks, max: e.target.value })}\n//     />\n//   </TableCell>\n// </TableRow>\n\n// {/* Group Percentage Row */}\n// <TableRow>\n//   <TableCell colSpan={7} sx={{ fontWeight: 'bold' }}>Total Percentage in Group</TableCell>\n//   <TableCell colSpan={2}>\n//     <TextField\n//       size=\"small\"\n//       value={groupPercentage}\n//       onChange={(e) => setGroupPercentage(e.target.value)}\n//       InputProps={{ endAdornment: <span>%</span> }}\n//     />\n//   </TableCell>\n// </TableRow>\n\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default Application1;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}